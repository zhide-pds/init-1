[
    {
        "id": "f6edc25d46a7bc45",
        "type": "tab",
        "label": "MISC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "df019bb95cf0c4d8",
        "type": "tab",
        "label": "OLED",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eff0892ab949f5a4",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "14f49ae6c62c7049",
        "type": "tab",
        "label": "Schneider Power Meter",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dd37338375d01a38",
        "type": "tab",
        "label": "Omron Power Meter",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "2095f811ca672d92",
        "type": "tab",
        "label": "Dry Contact Part Count",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8f480895e38cb0f3",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "61f9b802121fe5bc",
        "type": "group",
        "z": "14f49ae6c62c7049",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b91ce1eff2e37366",
            "bc8a36cc93b4280f",
            "ce645ca569cb90ef",
            "3dd2dc9346f2823b",
            "39ca0b7bcb732148",
            "78c61c1db515ba64",
            "458f097315ed659c",
            "d4dbbebd2e8d38b5"
        ],
        "x": 514,
        "y": 899,
        "w": 1312,
        "h": 202
    },
    {
        "id": "7e4cdd0309f5b525",
        "type": "oled-config",
        "name": "iriv_oled",
        "width": "128",
        "height": "64",
        "address": "3c"
    },
    {
        "id": "0fecd47033dc10eb",
        "type": "ui_tab",
        "name": "IRIV PiControl Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "88a03b534c2cabc3",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0fb4f5",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#0094ce",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#0094ce",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "IRIV PiControl Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 20,
                "gy": 20,
                "cx": 6,
                "cy": 6,
                "px": 10,
                "py": 10
            }
        }
    },
    {
        "id": "55f6acb90d4c15e3",
        "type": "ui_group",
        "name": "Button, LEDs & Buzzer",
        "tab": "0fecd47033dc10eb",
        "order": 1,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "dca9faea9fcd666f",
        "type": "ui_group",
        "name": "System",
        "tab": "0fecd47033dc10eb",
        "order": 5,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1898cd1cd6c1a552",
        "type": "ui_group",
        "name": "Digital Inputs",
        "tab": "0fecd47033dc10eb",
        "order": 2,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c5b6031b4031158d",
        "type": "ui_group",
        "name": "Digital Outputs",
        "tab": "0fecd47033dc10eb",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f5f49ce8c2fbee83",
        "type": "ui_group",
        "name": "Analog Inputs",
        "tab": "0fecd47033dc10eb",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "537cb6b9564ec414",
        "type": "ui_spacer",
        "z": "eff0892ab949f5a4",
        "name": "spacer",
        "group": "55f6acb90d4c15e3",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "595d8278a7b46dd1",
        "type": "ui_spacer",
        "z": "eff0892ab949f5a4",
        "name": "spacer",
        "group": "55f6acb90d4c15e3",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "b837e16dbfd7e63d",
        "type": "ui_spacer",
        "z": "eff0892ab949f5a4",
        "name": "spacer",
        "group": "1898cd1cd6c1a552",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "84540b4822839483",
        "type": "ui_spacer",
        "z": "eff0892ab949f5a4",
        "name": "spacer",
        "group": "1898cd1cd6c1a552",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "df38d37198c3e98b",
        "type": "ui_spacer",
        "z": "eff0892ab949f5a4",
        "name": "spacer",
        "group": "c5b6031b4031158d",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "5b95a60afd717fda",
        "type": "ui_spacer",
        "z": "eff0892ab949f5a4",
        "name": "spacer",
        "group": "c5b6031b4031158d",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "63ef056dd1a48225",
        "type": "ui_spacer",
        "z": "eff0892ab949f5a4",
        "name": "spacer",
        "group": "f5f49ce8c2fbee83",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "d00e371f6d01164e",
        "type": "ui_spacer",
        "z": "eff0892ab949f5a4",
        "name": "spacer",
        "group": "f5f49ce8c2fbee83",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "19ed3339d93c1768",
        "type": "ui_spacer",
        "z": "eff0892ab949f5a4",
        "name": "spacer",
        "group": "f5f49ce8c2fbee83",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "d345632add29d307",
        "type": "ui_spacer",
        "z": "eff0892ab949f5a4",
        "name": "spacer",
        "group": "f5f49ce8c2fbee83",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "4e690410af9a63a9",
        "type": "modbus-client",
        "name": "",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyACM0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "19200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "even",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": false,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "3c431454d1f36eaa",
        "type": "modbus-client",
        "name": "",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyACM0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "even",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": false,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "ee696d902d902d8f",
        "type": "comment",
        "z": "f6edc25d46a7bc45",
        "name": "Shutdown IRIV PiControl if user button is pressed for > 5 seconds or commanded from dashboard",
        "info": "",
        "x": 430,
        "y": 260,
        "wires": []
    },
    {
        "id": "a0b1094c7a2dbedd",
        "type": "rpi-gpio in",
        "z": "f6edc25d46a7bc45",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "58d319897a171b65"
            ]
        ]
    },
    {
        "id": "58d319897a171b65",
        "type": "trigger",
        "z": "f6edc25d46a7bc45",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 300,
        "wires": [
            [
                "dc0d7b3aba5cc7c1",
                "8b6441dabcd55a98",
                "8830e0910a6562b3",
                "2a070cec3e4e9a1b"
            ]
        ]
    },
    {
        "id": "9a380ee2d22882e4",
        "type": "rpi-gpio out",
        "z": "f6edc25d46a7bc45",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 860,
        "y": 360,
        "wires": []
    },
    {
        "id": "dc0d7b3aba5cc7c1",
        "type": "trigger",
        "z": "f6edc25d46a7bc45",
        "name": "On for 200ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "200",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 660,
        "y": 360,
        "wires": [
            [
                "9a380ee2d22882e4"
            ]
        ]
    },
    {
        "id": "b25fb2c3c53a7434",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 880,
        "y": 300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "117a52be83d11b4c",
        "type": "Clear",
        "z": "f6edc25d46a7bc45",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 830,
        "y": 420,
        "wires": []
    },
    {
        "id": "8830e0910a6562b3",
        "type": "delay",
        "z": "f6edc25d46a7bc45",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 300,
        "wires": [
            [
                "b25fb2c3c53a7434"
            ]
        ]
    },
    {
        "id": "8b0c806a86609852",
        "type": "comment",
        "z": "f6edc25d46a7bc45",
        "name": "Turn on WiFi Hotspot if wireless is available",
        "info": "",
        "x": 840,
        "y": 1720,
        "wires": []
    },
    {
        "id": "a7a6789c027e7906",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "sudo nmcli device wifi hotspot ssid iriv password iriv1234",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 1010,
        "y": 1800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e5dcbc854f54dfd1",
        "type": "catch",
        "z": "f6edc25d46a7bc45",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "00ead512e012c8b3"
            ]
        ]
    },
    {
        "id": "00ead512e012c8b3",
        "type": "debug",
        "z": "f6edc25d46a7bc45",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 140,
        "wires": []
    },
    {
        "id": "cce14a696e70bbe3",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "ip -f inet addr show eth0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - eth0",
        "x": 410,
        "y": 840,
        "wires": [
            [
                "0faaa5edaab8e33b"
            ],
            [],
            [
                "dcb3093726d416ac"
            ]
        ]
    },
    {
        "id": "dcb3093726d416ac",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "ip -f inet addr show eth1 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - eth1",
        "x": 410,
        "y": 920,
        "wires": [
            [
                "7e89ad090997bdf5"
            ],
            [],
            [
                "f8fe154ac47c9253"
            ]
        ]
    },
    {
        "id": "f8fe154ac47c9253",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "ip -f inet addr show wlan0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - wlan0",
        "x": 420,
        "y": 1000,
        "wires": [
            [
                "e4a580ae164e2d87"
            ],
            [],
            [
                "c6907bed8191c9ae"
            ]
        ]
    },
    {
        "id": "98af3deaf7ddcf27",
        "type": "inject",
        "z": "f6edc25d46a7bc45",
        "name": "Every 2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "cce14a696e70bbe3"
            ]
        ]
    },
    {
        "id": "0faaa5edaab8e33b",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable IpEth0.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpEth0', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "7e89ad090997bdf5",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable IpEth1.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpEth1', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "e4a580ae164e2d87",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable IpWlan0.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpWlan0', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "a5df35fb091ed92a",
        "type": "comment",
        "z": "f6edc25d46a7bc45",
        "name": "Update status",
        "info": "",
        "x": 170,
        "y": 800,
        "wires": []
    },
    {
        "id": "9dda750a4355c802",
        "type": "comment",
        "z": "f6edc25d46a7bc45",
        "name": "Handle the exception",
        "info": "",
        "x": 200,
        "y": 100,
        "wires": []
    },
    {
        "id": "c6907bed8191c9ae",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "top -bn1 | grep load | awk '{printf \"%.2f\\n\", $(NF-2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get CPU Load",
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "3f4c99c2ad066caf"
            ],
            [],
            [
                "382e62957a4f03d8"
            ]
        ]
    },
    {
        "id": "3f4c99c2ad066caf",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable CpuLoad",
        "func": "global.set('CpuLoad', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "b27707be55a05443",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "free -m | awk 'NR==2{printf \"%.1f/%.1fGB %d%%\\n\", $3/1000,$2/1000,$3*100/$2}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get RAM Usage",
        "x": 420,
        "y": 1240,
        "wires": [
            [
                "92b668c8d2516838"
            ],
            [],
            [
                "7ddfd92f02def012"
            ]
        ]
    },
    {
        "id": "92b668c8d2516838",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable Ram",
        "func": "global.set('Ram', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "7ddfd92f02def012",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "df -h | awk '$NF==\"/\"{printf \"%.1f/%.1fGB %s\\n\", $3,$2,$5}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get Disk Usage",
        "x": 420,
        "y": 1320,
        "wires": [
            [
                "24371370e103aa31"
            ],
            [],
            []
        ]
    },
    {
        "id": "24371370e103aa31",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable Disk",
        "func": "global.set('Disk', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "6326de053f16185f",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "free -t -h | awk 'NR==4{printf \"%d\\n\", $2+0.7}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get total RAM Size",
        "x": 430,
        "y": 1440,
        "wires": [
            [
                "329e8d3198157c9c"
            ],
            [],
            [
                "f326fa941d37b675"
            ]
        ]
    },
    {
        "id": "329e8d3198157c9c",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable TotalRam",
        "func": "global.set('TotalRam', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "3f57d4d7931d9516",
        "type": "inject",
        "z": "f6edc25d46a7bc45",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1440,
        "wires": [
            [
                "6326de053f16185f"
            ]
        ]
    },
    {
        "id": "f326fa941d37b675",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "df -h | awk '$NF==\"/\"{printf \"%d\\n\", $2*1.1}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get total Disk Size",
        "x": 430,
        "y": 1520,
        "wires": [
            [
                "13f9aa4fce8c8c8d"
            ],
            [],
            [
                "6a5d28d8a7e4e4c7"
            ]
        ]
    },
    {
        "id": "13f9aa4fce8c8c8d",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable TotalDisk",
        "func": "global.set('TotalDisk', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "6a5d28d8a7e4e4c7",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "ifconfig | grep wlan0",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Check whether there's wireless",
        "x": 470,
        "y": 1600,
        "wires": [
            [
                "067913a1a6d6abdb"
            ],
            [],
            [
                "6931f7b455f6667e"
            ]
        ]
    },
    {
        "id": "067913a1a6d6abdb",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable IsWireless",
        "func": "var result;\n\nif (msg.payload == \"\") {\n    result = \"\"\n} else {\n    result = \"W\"\n}\n\nglobal.set('IsWireless', result);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "382e62957a4f03d8",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "vcgencmd measure_temp | awk -F \"[=']\" '{print($2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get CPU Temperature",
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "022c77ecc6094274"
            ],
            [],
            [
                "b27707be55a05443"
            ]
        ]
    },
    {
        "id": "022c77ecc6094274",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable CpuTemp",
        "func": "global.set('CpuTemp', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "3bd0c17af7d09767",
        "type": "rpi-gpio in",
        "z": "f6edc25d46a7bc45",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 170,
        "y": 700,
        "wires": [
            [
                "277bca09628893a2"
            ]
        ]
    },
    {
        "id": "277bca09628893a2",
        "type": "switch",
        "z": "f6edc25d46a7bc45",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 700,
        "wires": [
            [
                "702fc64f74754a15"
            ]
        ]
    },
    {
        "id": "702fc64f74754a15",
        "type": "trigger",
        "z": "f6edc25d46a7bc45",
        "name": "On for 25ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "25",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 490,
        "y": 700,
        "wires": [
            [
                "e0b08f81315d8913"
            ]
        ]
    },
    {
        "id": "e0b08f81315d8913",
        "type": "rpi-gpio out",
        "z": "f6edc25d46a7bc45",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 700,
        "y": 700,
        "wires": []
    },
    {
        "id": "ac2de66de5ec3e62",
        "type": "comment",
        "z": "f6edc25d46a7bc45",
        "name": "Beep when user button is pressed",
        "info": "",
        "x": 240,
        "y": 660,
        "wires": []
    },
    {
        "id": "51e7a123ec0b9a97",
        "type": "link in",
        "z": "f6edc25d46a7bc45",
        "name": "Shutdown",
        "links": [
            "5f931dff475d520c"
        ],
        "x": 385,
        "y": 360,
        "wires": [
            [
                "8830e0910a6562b3",
                "dc0d7b3aba5cc7c1",
                "8b6441dabcd55a98",
                "2a070cec3e4e9a1b"
            ]
        ]
    },
    {
        "id": "2a070cec3e4e9a1b",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Update global.state",
        "func": "global.set('state', -1);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "8b6441dabcd55a98",
        "type": "delay",
        "z": "f6edc25d46a7bc45",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 420,
        "wires": [
            [
                "117a52be83d11b4c"
            ]
        ]
    },
    {
        "id": "b47ba573059965ba",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "sudo reboot now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 870,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "71363d430e901ddb",
        "type": "delay",
        "z": "f6edc25d46a7bc45",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 540,
        "wires": [
            [
                "b47ba573059965ba"
            ]
        ]
    },
    {
        "id": "aaf8dbc2a8671674",
        "type": "link in",
        "z": "f6edc25d46a7bc45",
        "name": "Reboot",
        "links": [
            "99c7387fc81958ea"
        ],
        "x": 385,
        "y": 540,
        "wires": [
            [
                "71363d430e901ddb",
                "dc0d7b3aba5cc7c1",
                "8b6441dabcd55a98",
                "2a070cec3e4e9a1b"
            ]
        ]
    },
    {
        "id": "2bb8687448d14663",
        "type": "switch",
        "z": "f6edc25d46a7bc45",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1800,
        "wires": [
            [
                "a7a6789c027e7906"
            ]
        ]
    },
    {
        "id": "2723bf795abf9738",
        "type": "comment",
        "z": "f6edc25d46a7bc45",
        "name": "Remove this if you do not want to enable WiFi AP",
        "info": "",
        "x": 860,
        "y": 1760,
        "wires": []
    },
    {
        "id": "6931f7b455f6667e",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "lsb_release -c | awk -F \":\" '{print($2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get Codename",
        "x": 420,
        "y": 1880,
        "wires": [
            [
                "68c32c2c21d21a5d"
            ],
            [],
            [
                "8f821609c648b222"
            ]
        ]
    },
    {
        "id": "68c32c2c21d21a5d",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable Codename",
        "func": "global.set('Codename', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "8f821609c648b222",
        "type": "exec",
        "z": "f6edc25d46a7bc45",
        "command": "getconf LONG_BIT",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get OS Bit",
        "x": 410,
        "y": 1960,
        "wires": [
            [
                "fccdd3e2b03f7f9c"
            ],
            [],
            []
        ]
    },
    {
        "id": "fccdd3e2b03f7f9c",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable OSBit",
        "func": "global.set('OSBit', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "a320e1efcbaa292f",
        "type": "function",
        "z": "f6edc25d46a7bc45",
        "name": "Save to global variable Revision",
        "func": "global.set('Revision', \"v1.1.3\");",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "543ed6e6dd920960",
        "type": "inject",
        "z": "f6edc25d46a7bc45",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 2060,
        "wires": [
            [
                "a320e1efcbaa292f"
            ]
        ]
    },
    {
        "id": "80248f25b1065ddf",
        "type": "String",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 1000,
        "wires": []
    },
    {
        "id": "935365d2f4fd3af6",
        "type": "comment",
        "z": "df019bb95cf0c4d8",
        "name": "Show the \"Press USER to cont...\" message",
        "info": "",
        "x": 220,
        "y": 560,
        "wires": []
    },
    {
        "id": "45a9ba92913bddbe",
        "type": "function",
        "z": "df019bb95cf0c4d8",
        "name": "State Machine",
        "func": "var state = global.get('state') || 0;\n\nif (msg.payload == \"reset\") {\n    state = 0;\n    global.set('state', state);\n\n    msg.payload = state;\n    return msg;\n}\n\nif (msg.payload == 0) {\n    state += 1;\n    if (state == 5) {\n        state = 0;\n    }\n\n    global.set('state', state);\n\n    msg.payload = state;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 820,
        "wires": [
            [
                "8bf3a92318d0c6cf"
            ]
        ]
    },
    {
        "id": "9cc0f1b62ee0bb4b",
        "type": "rpi-gpio in",
        "z": "df019bb95cf0c4d8",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 130,
        "y": 880,
        "wires": [
            [
                "45a9ba92913bddbe"
            ]
        ]
    },
    {
        "id": "2cd73d4c8e91d32f",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 890,
        "y": 820,
        "wires": [
            [
                "236da33f8fad77ba"
            ],
            [
                "9f2cc44a8eb41e54"
            ],
            [
                "56278dd5fe2bc86d"
            ],
            [
                "922090ea2b74fd67"
            ],
            [
                "496824feba0de612"
            ]
        ]
    },
    {
        "id": "524c030e1a7549dd",
        "type": "inject",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 110,
        "y": 820,
        "wires": [
            [
                "45a9ba92913bddbe"
            ]
        ]
    },
    {
        "id": "d141e7e743fbddf2",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 1060,
        "wires": [
            [
                "41f480df813cf13d"
            ]
        ]
    },
    {
        "id": "8bf3a92318d0c6cf",
        "type": "trigger",
        "z": "df019bb95cf0c4d8",
        "name": "Limit update frequency",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "100",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 640,
        "y": 820,
        "wires": [
            [
                "2cd73d4c8e91d32f",
                "ecd21edeecee1a17"
            ]
        ]
    },
    {
        "id": "560f8a3aa16cc5be",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Bottom Text",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 3,\n    \"y\": 56,\n    \"text\": \"Press USER to cont...\"\n}",
        "output": "json",
        "x": 530,
        "y": 660,
        "wires": [
            [
                "2d0832d573be0d83"
            ]
        ]
    },
    {
        "id": "62f0093a85160ae4",
        "type": "Line",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 710,
        "y": 620,
        "wires": []
    },
    {
        "id": "a4807aa14ef69db3",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 128,\n    \"y0\": 52,\n    \"y1\": 52,\n    \"color\": 1\n}",
        "output": "json",
        "x": 500,
        "y": 620,
        "wires": [
            [
                "62f0093a85160ae4",
                "5a8d29fbb8d8e6a4"
            ]
        ]
    },
    {
        "id": "93bcb8db744d9065",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Instruction 1-1",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 15,\n    \"text\": \"1. Connect to WiFi AP\"\n}",
        "output": "json",
        "x": 1380,
        "y": 540,
        "wires": [
            [
                "044a58af769d52d8",
                "ae48174050c60314"
            ]
        ]
    },
    {
        "id": "935f41d93a227979",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Instruction 1-2",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 30,\n    \"text\": \"   SSID: iriv\"\n}",
        "output": "json",
        "x": 1380,
        "y": 580,
        "wires": [
            [
                "c03a96b9f1bf5e73",
                "ae48174050c60314"
            ]
        ]
    },
    {
        "id": "593254bb3026f4f5",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Instruction 1-3",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 40,\n    \"text\": \"   Password: iriv1234\"\n}",
        "output": "json",
        "x": 1380,
        "y": 620,
        "wires": [
            [
                "ae48174050c60314"
            ]
        ]
    },
    {
        "id": "34fcc4e61e7b0adc",
        "type": "String",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 560,
        "wires": []
    },
    {
        "id": "fad366d80e677d78",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show instruction title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"ACCESS DASHBOARD:\"\n}",
        "output": "json",
        "x": 1380,
        "y": 460,
        "wires": [
            [
                "8f13766577465156",
                "ae48174050c60314"
            ]
        ]
    },
    {
        "id": "2d0832d573be0d83",
        "type": "String",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 710,
        "y": 660,
        "wires": []
    },
    {
        "id": "59b48e0f8523464d",
        "type": "FillRectangle",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 890,
        "y": 920,
        "wires": []
    },
    {
        "id": "ecd21edeecee1a17",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Clear but retain bottom message",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"w\": 128,\n    \"h\": 49,\n    \"color\": 0\n}",
        "output": "json",
        "x": 670,
        "y": 920,
        "wires": [
            [
                "59b48e0f8523464d"
            ]
        ]
    },
    {
        "id": "b8625d51809aa58b",
        "type": "inject",
        "z": "df019bb95cf0c4d8",
        "name": "Run once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "a4807aa14ef69db3"
            ]
        ]
    },
    {
        "id": "fb201723551d11f2",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Instruction 2-2",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 33,\n    \"text\": \"   iriv.local:1880/ui\"\n}",
        "output": "json",
        "x": 1380,
        "y": 820,
        "wires": [
            [
                "c94e000773f7e76d"
            ]
        ]
    },
    {
        "id": "132971cdc097c3b5",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Instruction 2-1",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 18,\n    \"text\": \"2. Open this url:\"\n}",
        "output": "json",
        "x": 1380,
        "y": 780,
        "wires": [
            [
                "8318593281a73ce9",
                "c94e000773f7e76d"
            ]
        ]
    },
    {
        "id": "e4053eec2d767e54",
        "type": "String",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 780,
        "wires": []
    },
    {
        "id": "228a08975651b6ad",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show instruction title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"ACCESS DASHBOARD:\"\n}",
        "output": "json",
        "x": 1380,
        "y": 700,
        "wires": [
            [
                "036b747896ccc553",
                "c94e000773f7e76d"
            ]
        ]
    },
    {
        "id": "bfde26290793a72a",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show IRIV PiControl",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"size\": 2,\n    \"text\": \"IRIV PiCtrl\"\n}",
        "output": "json",
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "fbd3774bfb09ccc6",
                "089951befe609f2c"
            ]
        ]
    },
    {
        "id": "079adad69cd98977",
        "type": "String",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 320,
        "wires": []
    },
    {
        "id": "7c1ceefe56ac48d0",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Model",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 2,\n    \"y\": 28,\n    \"size\": 2,\n    \"text\": \"{{global.IsWireless}}R{{global.TotalRam}}E{{global.TotalDisk}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 320,
        "wires": [
            [
                "fbd3774bfb09ccc6",
                "5f0c86859445dfa7"
            ]
        ]
    },
    {
        "id": "12e4173e72c10334",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show IP title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"IP ADDRESSES:\"\n}",
        "output": "json",
        "x": 1350,
        "y": 900,
        "wires": [
            [
                "84dfb5953dcc64cd",
                "4084f778f776695e"
            ]
        ]
    },
    {
        "id": "c76d9b71529abd12",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show eth0",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 15,\n    \"text\": \"eth0: {{global.IpEth0}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 980,
        "wires": [
            [
                "70ca1d1b60853fba",
                "4084f778f776695e"
            ]
        ]
    },
    {
        "id": "ce6f67eb479b8ef2",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show eth1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 27,\n    \"text\": \"eth1: {{global.IpEth1}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1020,
        "wires": [
            [
                "b404f198de72f0d3",
                "4084f778f776695e"
            ]
        ]
    },
    {
        "id": "2d91edab4d3c9dfc",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show wlan0",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 39,\n    \"text\": \"wlan0: {{global.IpWlan0}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1060,
        "wires": [
            [
                "d141e7e743fbddf2",
                "4084f778f776695e"
            ]
        ]
    },
    {
        "id": "f6040731b32e3580",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Status title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"CM4 STATUS:\"\n}",
        "output": "json",
        "x": 1370,
        "y": 1140,
        "wires": [
            [
                "629268ccdc507e3e",
                "da87d45a0118a19a"
            ]
        ]
    },
    {
        "id": "38014fb45e66a66b",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Load & Temp",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 15,\n    \"text\": \"Load: {{global.CpuLoad}} Temp: {{global.CpuTemp}}\"\n}",
        "output": "json",
        "x": 1370,
        "y": 1220,
        "wires": [
            [
                "629268ccdc507e3e",
                "897a3d49d8dbc5c7"
            ]
        ]
    },
    {
        "id": "5ea420cf38e0ab0d",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show RAM",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 27,\n    \"text\": \"RAM:  {{{global.Ram}}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1260,
        "wires": [
            [
                "629268ccdc507e3e",
                "46825b73958a77f8"
            ]
        ]
    },
    {
        "id": "37bc95abf336b9cd",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Disk",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 39,\n    \"text\": \"Disk: {{{global.Disk}}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1300,
        "wires": [
            [
                "19134ed6ae927610",
                "629268ccdc507e3e"
            ]
        ]
    },
    {
        "id": "bcb0bf879e7d138b",
        "type": "String",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 1240,
        "wires": []
    },
    {
        "id": "0926fd5e514498bf",
        "type": "Line",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 500,
        "wires": []
    },
    {
        "id": "d201ed8c3c9a3757",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 100,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 500,
        "wires": [
            [
                "814721effbaa29ea",
                "7f03d959c7ca8ad3"
            ]
        ]
    },
    {
        "id": "273fb0bdddbf3732",
        "type": "Line",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 740,
        "wires": []
    },
    {
        "id": "8c443317439c5880",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 100,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 740,
        "wires": [
            [
                "2360f1e3d4a34656",
                "69dcd8586bae2104"
            ]
        ]
    },
    {
        "id": "ab6d9f0f156fc3f5",
        "type": "Line",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 940,
        "wires": []
    },
    {
        "id": "2c8b46cbd51c551b",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 77,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 940,
        "wires": [
            [
                "fbbf08026b931a58",
                "bd1bf5f9aa2d58a4"
            ]
        ]
    },
    {
        "id": "5a619d1e0a39a569",
        "type": "Line",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 1180,
        "wires": []
    },
    {
        "id": "d0ef051424ac13cb",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 65,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 1180,
        "wires": [
            [
                "0f29147cd806e0ca",
                "cc68a72a4a97128d"
            ]
        ]
    },
    {
        "id": "814721effbaa29ea",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 540,
        "wires": [
            [
                "93bcb8db744d9065"
            ]
        ]
    },
    {
        "id": "044a58af769d52d8",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 580,
        "wires": [
            [
                "935f41d93a227979"
            ]
        ]
    },
    {
        "id": "c03a96b9f1bf5e73",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 620,
        "wires": [
            [
                "593254bb3026f4f5"
            ]
        ]
    },
    {
        "id": "8f13766577465156",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 500,
        "wires": [
            [
                "d201ed8c3c9a3757"
            ]
        ]
    },
    {
        "id": "9f2cc44a8eb41e54",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 460,
        "wires": [
            [
                "fad366d80e677d78"
            ]
        ]
    },
    {
        "id": "236da33f8fad77ba",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 240,
        "wires": [
            [
                "bfde26290793a72a"
            ]
        ]
    },
    {
        "id": "7456f786e61bd2fa",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 320,
        "wires": [
            [
                "7c1ceefe56ac48d0"
            ]
        ]
    },
    {
        "id": "56278dd5fe2bc86d",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 700,
        "wires": [
            [
                "228a08975651b6ad"
            ]
        ]
    },
    {
        "id": "036b747896ccc553",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 740,
        "wires": [
            [
                "8c443317439c5880"
            ]
        ]
    },
    {
        "id": "2360f1e3d4a34656",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 780,
        "wires": [
            [
                "132971cdc097c3b5"
            ]
        ]
    },
    {
        "id": "8318593281a73ce9",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 820,
        "wires": [
            [
                "fb201723551d11f2"
            ]
        ]
    },
    {
        "id": "922090ea2b74fd67",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 900,
        "wires": [
            [
                "12e4173e72c10334"
            ]
        ]
    },
    {
        "id": "84dfb5953dcc64cd",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 940,
        "wires": [
            [
                "2c8b46cbd51c551b"
            ]
        ]
    },
    {
        "id": "fbbf08026b931a58",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 980,
        "wires": [
            [
                "c76d9b71529abd12"
            ]
        ]
    },
    {
        "id": "70ca1d1b60853fba",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1020,
        "wires": [
            [
                "ce6f67eb479b8ef2"
            ]
        ]
    },
    {
        "id": "b404f198de72f0d3",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1060,
        "wires": [
            [
                "2d91edab4d3c9dfc"
            ]
        ]
    },
    {
        "id": "496824feba0de612",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1140,
        "wires": [
            [
                "f6040731b32e3580"
            ]
        ]
    },
    {
        "id": "da87d45a0118a19a",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1180,
        "wires": [
            [
                "d0ef051424ac13cb"
            ]
        ]
    },
    {
        "id": "cc68a72a4a97128d",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1220,
        "wires": [
            [
                "38014fb45e66a66b"
            ]
        ]
    },
    {
        "id": "897a3d49d8dbc5c7",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1260,
        "wires": [
            [
                "5ea420cf38e0ab0d"
            ]
        ]
    },
    {
        "id": "46825b73958a77f8",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1300,
        "wires": [
            [
                "37bc95abf336b9cd"
            ]
        ]
    },
    {
        "id": "19134ed6ae927610",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 1300,
        "wires": [
            [
                "8be3b6c72c1da2b2"
            ]
        ]
    },
    {
        "id": "fbd3774bfb09ccc6",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 320,
        "wires": [
            [
                "079adad69cd98977"
            ]
        ]
    },
    {
        "id": "7f03d959c7ca8ad3",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 500,
        "wires": [
            [
                "0926fd5e514498bf"
            ]
        ]
    },
    {
        "id": "ae48174050c60314",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 560,
        "wires": [
            [
                "34fcc4e61e7b0adc"
            ]
        ]
    },
    {
        "id": "69dcd8586bae2104",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 740,
        "wires": [
            [
                "273fb0bdddbf3732"
            ]
        ]
    },
    {
        "id": "c94e000773f7e76d",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 780,
        "wires": [
            [
                "e4053eec2d767e54"
            ]
        ]
    },
    {
        "id": "bd1bf5f9aa2d58a4",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 940,
        "wires": [
            [
                "ab6d9f0f156fc3f5"
            ]
        ]
    },
    {
        "id": "4084f778f776695e",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 1000,
        "wires": [
            [
                "80248f25b1065ddf"
            ]
        ]
    },
    {
        "id": "0f29147cd806e0ca",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 1180,
        "wires": [
            [
                "5a619d1e0a39a569"
            ]
        ]
    },
    {
        "id": "629268ccdc507e3e",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 1240,
        "wires": [
            [
                "bcb0bf879e7d138b"
            ]
        ]
    },
    {
        "id": "41f480df813cf13d",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1060,
        "wires": [
            [
                "fbbf08026b931a58"
            ]
        ]
    },
    {
        "id": "8be3b6c72c1da2b2",
        "type": "switch",
        "z": "df019bb95cf0c4d8",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1300,
        "wires": [
            [
                "cc68a72a4a97128d"
            ]
        ]
    },
    {
        "id": "55a582f70ea60e1d",
        "type": "comment",
        "z": "df019bb95cf0c4d8",
        "name": "Show the main message depending on state machine",
        "info": "",
        "x": 260,
        "y": 760,
        "wires": []
    },
    {
        "id": "5a8d29fbb8d8e6a4",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 350,
        "y": 660,
        "wires": [
            [
                "560f8a3aa16cc5be"
            ]
        ]
    },
    {
        "id": "35069b77944da3b1",
        "type": "comment",
        "z": "df019bb95cf0c4d8",
        "name": "Sate = -1 means shutting down",
        "info": "",
        "x": 410,
        "y": 860,
        "wires": []
    },
    {
        "id": "e597af210373f108",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Revision",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 78,\n    \"y\": 20,\n    \"size\": 1,\n    \"text\": \"{{global.Revision}}\"\n}",
        "output": "json",
        "x": 1360,
        "y": 280,
        "wires": [
            [
                "fbd3774bfb09ccc6",
                "7456f786e61bd2fa"
            ]
        ]
    },
    {
        "id": "089951befe609f2c",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 280,
        "wires": [
            [
                "e597af210373f108"
            ]
        ]
    },
    {
        "id": "358bf961376e2835",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show Codename",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 78,\n    \"y\": 30,\n    \"size\": 1,\n    \"text\": \"{{global.Codename}}\"\n}",
        "output": "json",
        "x": 1370,
        "y": 360,
        "wires": [
            [
                "fbd3774bfb09ccc6",
                "d12e0a92a1502d26"
            ]
        ]
    },
    {
        "id": "5f0c86859445dfa7",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 360,
        "wires": [
            [
                "358bf961376e2835"
            ]
        ]
    },
    {
        "id": "e7a638ace1427a3c",
        "type": "template",
        "z": "df019bb95cf0c4d8",
        "name": "Show OS Bit",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 78,\n    \"y\": 40,\n    \"size\": 1,\n    \"text\": \"{{global.OSBit}}-bit\"\n}",
        "output": "json",
        "x": 1350,
        "y": 400,
        "wires": [
            [
                "fbd3774bfb09ccc6"
            ]
        ]
    },
    {
        "id": "d12e0a92a1502d26",
        "type": "delay",
        "z": "df019bb95cf0c4d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 400,
        "wires": [
            [
                "e7a638ace1427a3c"
            ]
        ]
    },
    {
        "id": "3a05316e881cbfc2",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "LED0",
        "tooltip": "",
        "group": "55f6acb90d4c15e3",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "5c578d0a0cb8cbe6"
            ]
        ]
    },
    {
        "id": "5c578d0a0cb8cbe6",
        "type": "rpi-gpio out",
        "z": "eff0892ab949f5a4",
        "name": "LED0 Output",
        "pin": "20",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "4473ba114390ef6d",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "LED1",
        "tooltip": "",
        "group": "55f6acb90d4c15e3",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "a6ce8fbd29a3d931"
            ]
        ]
    },
    {
        "id": "a6ce8fbd29a3d931",
        "type": "rpi-gpio out",
        "z": "eff0892ab949f5a4",
        "name": "LED1 Output",
        "pin": "21",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 610,
        "y": 200,
        "wires": []
    },
    {
        "id": "9b930995ef369c2d",
        "type": "ui_button",
        "z": "eff0892ab949f5a4",
        "name": "",
        "group": "55f6acb90d4c15e3",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Buzzer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "volume_up",
        "payload": "True",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "d3c0ac452c2894cd"
            ]
        ]
    },
    {
        "id": "d3c0ac452c2894cd",
        "type": "trigger",
        "z": "eff0892ab949f5a4",
        "name": "On for 250ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 620,
        "y": 260,
        "wires": [
            [
                "bc3a3dd7019e6df8"
            ]
        ]
    },
    {
        "id": "bc3a3dd7019e6df8",
        "type": "rpi-gpio out",
        "z": "eff0892ab949f5a4",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 260,
        "wires": []
    },
    {
        "id": "ec0455a803eb74d3",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "Button",
        "tooltip": "",
        "group": "55f6acb90d4c15e3",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 810,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "cfb74814198bf5cd",
        "type": "rpi-gpio in",
        "z": "eff0892ab949f5a4",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "449681fc2ea7b802"
            ]
        ]
    },
    {
        "id": "449681fc2ea7b802",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Invert",
        "func": "if (msg.payload == 0) {\n    msg.payload = true;\n} else {\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 320,
        "wires": [
            [
                "ec0455a803eb74d3"
            ]
        ]
    },
    {
        "id": "0ef03c66864aa510",
        "type": "ui_button",
        "z": "eff0892ab949f5a4",
        "name": "",
        "group": "dca9faea9fcd666f",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "#ff0000",
        "className": "",
        "icon": "power_settings_new",
        "payload": "True",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 2000,
        "wires": [
            [
                "5f931dff475d520c"
            ]
        ]
    },
    {
        "id": "698fa2f0e9d6b999",
        "type": "ui_button",
        "z": "eff0892ab949f5a4",
        "name": "",
        "group": "dca9faea9fcd666f",
        "order": 10,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FFC107",
        "className": "",
        "icon": "refresh",
        "payload": "True",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 2060,
        "wires": [
            [
                "99c7387fc81958ea"
            ]
        ]
    },
    {
        "id": "24c9a021bd0729ca",
        "type": "comment",
        "z": "eff0892ab949f5a4",
        "name": "System",
        "info": "",
        "x": 390,
        "y": 1340,
        "wires": []
    },
    {
        "id": "6b137d0ca3fe87dd",
        "type": "comment",
        "z": "eff0892ab949f5a4",
        "name": "Button, LEDs & Buzzer",
        "info": "",
        "x": 440,
        "y": 100,
        "wires": []
    },
    {
        "id": "91f5985a29a399c8",
        "type": "comment",
        "z": "eff0892ab949f5a4",
        "name": "Digital Inputs",
        "info": "",
        "x": 410,
        "y": 460,
        "wires": []
    },
    {
        "id": "a2341aec2a21c04d",
        "type": "rpi-gpio in",
        "z": "eff0892ab949f5a4",
        "name": "DI0",
        "pin": "13",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 500,
        "wires": [
            [
                "85e6f56137533f47"
            ]
        ]
    },
    {
        "id": "bd02e56d66ee38de",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "DI0",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "85e6f56137533f47",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 500,
        "wires": [
            [
                "bd02e56d66ee38de"
            ]
        ]
    },
    {
        "id": "db10e0ef8d4cefeb",
        "type": "rpi-gpio in",
        "z": "eff0892ab949f5a4",
        "name": "DI1",
        "pin": "17",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 560,
        "wires": [
            [
                "088c806ad84e8a4f"
            ]
        ]
    },
    {
        "id": "81833c3ebdb63452",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "DI1",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "088c806ad84e8a4f",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 560,
        "wires": [
            [
                "81833c3ebdb63452"
            ]
        ]
    },
    {
        "id": "176d7152dc65cc19",
        "type": "rpi-gpio in",
        "z": "eff0892ab949f5a4",
        "name": "DI2",
        "pin": "22",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 620,
        "wires": [
            [
                "f27699a42f92c8e6"
            ]
        ]
    },
    {
        "id": "be27939ab1eb1dae",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "DI2",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "f27699a42f92c8e6",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 620,
        "wires": [
            [
                "be27939ab1eb1dae"
            ]
        ]
    },
    {
        "id": "4882ffe637275f25",
        "type": "rpi-gpio in",
        "z": "eff0892ab949f5a4",
        "name": "DI3",
        "pin": "27",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 680,
        "wires": [
            [
                "1ed602e4f0f4eb4a"
            ]
        ]
    },
    {
        "id": "a69df6681c42e742",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "DI3",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "1ed602e4f0f4eb4a",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 680,
        "wires": [
            [
                "a69df6681c42e742"
            ]
        ]
    },
    {
        "id": "1a2bf138aa5147cb",
        "type": "comment",
        "z": "eff0892ab949f5a4",
        "name": "Digital Outputs",
        "info": "",
        "x": 420,
        "y": 780,
        "wires": []
    },
    {
        "id": "774b9a3eff1cb240",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "DO0",
        "tooltip": "",
        "group": "c5b6031b4031158d",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 820,
        "wires": [
            [
                "80f9bf61272f4237"
            ]
        ]
    },
    {
        "id": "80f9bf61272f4237",
        "type": "rpi-gpio out",
        "z": "eff0892ab949f5a4",
        "name": "DO0 Output",
        "pin": "23",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 820,
        "wires": []
    },
    {
        "id": "6b7800b80ba32249",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "DO1",
        "tooltip": "",
        "group": "c5b6031b4031158d",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 880,
        "wires": [
            [
                "412641947bfc05bc"
            ]
        ]
    },
    {
        "id": "412641947bfc05bc",
        "type": "rpi-gpio out",
        "z": "eff0892ab949f5a4",
        "name": "DO1 Output",
        "pin": "24",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 880,
        "wires": []
    },
    {
        "id": "4c6d95190a80e8d1",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "DO2",
        "tooltip": "",
        "group": "c5b6031b4031158d",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 940,
        "wires": [
            [
                "44b725721739e602"
            ]
        ]
    },
    {
        "id": "44b725721739e602",
        "type": "rpi-gpio out",
        "z": "eff0892ab949f5a4",
        "name": "DO2 Output",
        "pin": "25",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 940,
        "wires": []
    },
    {
        "id": "820be29b62da30a2",
        "type": "ui_switch",
        "z": "eff0892ab949f5a4",
        "name": "",
        "label": "DO3",
        "tooltip": "",
        "group": "c5b6031b4031158d",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 1000,
        "wires": [
            [
                "c6ba7b1df76fb4cd"
            ]
        ]
    },
    {
        "id": "c6ba7b1df76fb4cd",
        "type": "rpi-gpio out",
        "z": "eff0892ab949f5a4",
        "name": "DO3 Output",
        "pin": "26",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4c07c828d8c27606",
        "type": "ui_text",
        "z": "eff0892ab949f5a4",
        "group": "55f6acb90d4c15e3",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Button Message",
        "label": "Press user button for 5 seconds to shutdown IRIV PiControl.",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 420,
        "y": 380,
        "wires": []
    },
    {
        "id": "5ed18520ced251a2",
        "type": "comment",
        "z": "eff0892ab949f5a4",
        "name": "Analog Inputs",
        "info": "",
        "x": 410,
        "y": 1080,
        "wires": []
    },
    {
        "id": "32dd7d9b7b08aab5",
        "type": "ui_gauge",
        "z": "eff0892ab949f5a4",
        "name": "",
        "group": "f5f49ce8c2fbee83",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN0",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b3aaa1cd0fb50fd8",
        "type": "ui_gauge",
        "z": "eff0892ab949f5a4",
        "name": "",
        "group": "f5f49ce8c2fbee83",
        "order": 5,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN1",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ab1ecf2108fb704a",
        "type": "ui_gauge",
        "z": "eff0892ab949f5a4",
        "name": "",
        "group": "f5f49ce8c2fbee83",
        "order": 3,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN2",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1220,
        "wires": []
    },
    {
        "id": "2ebf875dc1efe574",
        "type": "ui_gauge",
        "z": "eff0892ab949f5a4",
        "name": "",
        "group": "f5f49ce8c2fbee83",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN3",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1280,
        "wires": []
    },
    {
        "id": "0650012b876018ce",
        "type": "inject",
        "z": "eff0892ab949f5a4",
        "name": "Every 500ms",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 1120,
        "wires": [
            [
                "d932e7fa2bd6a159"
            ]
        ]
    },
    {
        "id": "49fa7ae7ad9d1d8e",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Scale Voltage",
        "func": "var msg0 = { payload: msg.payload.length };\nvar msg1 = { payload: msg.payload.length };\nvar msg2 = { payload: msg.payload.length };\nvar msg3 = { payload: msg.payload.length };\n\n\nmsg0.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_0.Volts * 2.5;\nif (msg0.payload < 0) {\n    msg0.payload = 0;\n}\n\nmsg1.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_1.Volts * 2.5;\nif (msg1.payload < 0) {\n    msg1.payload = 0;\n}\n\nmsg2.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_2.Volts * 2.5;\nif (msg2.payload < 0) {\n    msg2.payload = 0;\n}\n\nmsg3.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_3.Volts * 2.5;\nif (msg3.payload < 0) {\n    msg3.payload = 0;\n}\n\nreturn [msg0, msg1, msg2, msg3];",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1120,
        "wires": [
            [
                "32dd7d9b7b08aab5"
            ],
            [
                "b3aaa1cd0fb50fd8"
            ],
            [
                "ab1ecf2108fb704a"
            ],
            [
                "2ebf875dc1efe574"
            ]
        ]
    },
    {
        "id": "d932e7fa2bd6a159",
        "type": "ads1x15_i2c",
        "z": "eff0892ab949f5a4",
        "property": "payload",
        "name": "",
        "i2c_device_number": 1,
        "chip": "0x01",
        "i2c_address": "0x48",
        "inputsForChannel": "singleEnded",
        "singleEndedChannel0": true,
        "singleEndedChannel1": true,
        "singleEndedChannel2": true,
        "singleEndedChannel3": true,
        "differentialChannel0_1": true,
        "differentialChannel0_3": false,
        "differentialChannel1_3": false,
        "differentialChannel2_3": true,
        "samplesPerSecond0": "920",
        "samplesPerSecond1": "128",
        "progGainAmp": "4096",
        "x": 610,
        "y": 1120,
        "wires": [
            [
                "49fa7ae7ad9d1d8e"
            ]
        ]
    },
    {
        "id": "b9585882636b6e41",
        "type": "ui_text",
        "z": "eff0892ab949f5a4",
        "group": "dca9faea9fcd666f",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "eth0",
        "label": "eth0 IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3e8edb77db24db82",
        "type": "inject",
        "z": "eff0892ab949f5a4",
        "name": "Every 2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 1580,
        "wires": [
            [
                "9b71ca593fd3819e",
                "45e9251d8247134a",
                "6cd90213b351d085",
                "0eee3c513251dc2d",
                "38ab4060f682e06b",
                "df544f32665f82c1",
                "275ef3a93fbb6b9a"
            ]
        ]
    },
    {
        "id": "9b71ca593fd3819e",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Get global variable IpEth0",
        "func": "msg.payload = global.get('IpEth0');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1580,
        "wires": [
            [
                "b9585882636b6e41"
            ]
        ]
    },
    {
        "id": "a147031468502a9c",
        "type": "ui_text",
        "z": "eff0892ab949f5a4",
        "group": "dca9faea9fcd666f",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "eth1",
        "label": "eth1 IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1620,
        "wires": []
    },
    {
        "id": "45e9251d8247134a",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Get global variable IpEth1",
        "func": "msg.payload = global.get('IpEth1');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1620,
        "wires": [
            [
                "a147031468502a9c"
            ]
        ]
    },
    {
        "id": "9a18c98c3e384c05",
        "type": "ui_text",
        "z": "eff0892ab949f5a4",
        "group": "dca9faea9fcd666f",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "wlan0",
        "label": "wlan0 IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1660,
        "wires": []
    },
    {
        "id": "6cd90213b351d085",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Get global variable IpWlan0",
        "func": "msg.payload = global.get('IpWlan0');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1660,
        "wires": [
            [
                "9a18c98c3e384c05"
            ]
        ]
    },
    {
        "id": "f5acd33a3c2a8d83",
        "type": "ui_text",
        "z": "eff0892ab949f5a4",
        "group": "dca9faea9fcd666f",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "CPU Load",
        "label": "CPU Load:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1740,
        "wires": []
    },
    {
        "id": "0eee3c513251dc2d",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Get global variable CpuLoad",
        "func": "msg.payload = global.get('CpuLoad');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1740,
        "wires": [
            [
                "f5acd33a3c2a8d83"
            ]
        ]
    },
    {
        "id": "b83aaac501437b13",
        "type": "ui_text",
        "z": "eff0892ab949f5a4",
        "group": "dca9faea9fcd666f",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "CPU Temp",
        "label": "CPU Temp:",
        "format": "{{msg.payload}} C",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1800,
        "wires": []
    },
    {
        "id": "38ab4060f682e06b",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Get global variable CpuTemp",
        "func": "msg.payload = global.get('CpuTemp');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1800,
        "wires": [
            [
                "b83aaac501437b13"
            ]
        ]
    },
    {
        "id": "f12d516274c7bcfa",
        "type": "ui_text",
        "z": "eff0892ab949f5a4",
        "group": "dca9faea9fcd666f",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Ram",
        "label": "RAM:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1860,
        "wires": []
    },
    {
        "id": "df544f32665f82c1",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Get global variable Ram",
        "func": "msg.payload = global.get('Ram');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1860,
        "wires": [
            [
                "f12d516274c7bcfa"
            ]
        ]
    },
    {
        "id": "70025e6c39b7b6d0",
        "type": "ui_text",
        "z": "eff0892ab949f5a4",
        "group": "dca9faea9fcd666f",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Disk",
        "label": "Disk:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1920,
        "wires": []
    },
    {
        "id": "275ef3a93fbb6b9a",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Get global variable Disk",
        "func": "msg.payload = global.get('Disk');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1920,
        "wires": [
            [
                "70025e6c39b7b6d0"
            ]
        ]
    },
    {
        "id": "5f931dff475d520c",
        "type": "link out",
        "z": "eff0892ab949f5a4",
        "name": "Shutdown",
        "mode": "link",
        "links": [
            "51e7a123ec0b9a97"
        ],
        "x": 565,
        "y": 2000,
        "wires": []
    },
    {
        "id": "99c7387fc81958ea",
        "type": "link out",
        "z": "eff0892ab949f5a4",
        "name": "Reboot",
        "mode": "link",
        "links": [
            "aaf8dbc2a8671674"
        ],
        "x": 565,
        "y": 2060,
        "wires": []
    },
    {
        "id": "944c6d8adc121959",
        "type": "ui_text",
        "z": "eff0892ab949f5a4",
        "group": "dca9faea9fcd666f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "OS",
        "label": "OS:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 930,
        "y": 1400,
        "wires": []
    },
    {
        "id": "61c1257168e2294f",
        "type": "inject",
        "z": "eff0892ab949f5a4",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 1400,
        "wires": [
            [
                "673d61011ab2eec4",
                "f9d5801450e8a5b8"
            ]
        ]
    },
    {
        "id": "673d61011ab2eec4",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Get global variable Codename & OSBit",
        "func": "msg.payload = global.get('Codename') + \" \" + global.get('OSBit') + \"-bit\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "944c6d8adc121959"
            ]
        ]
    },
    {
        "id": "b04fe1952c4b3cb8",
        "type": "ui_text",
        "z": "eff0892ab949f5a4",
        "group": "dca9faea9fcd666f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Revision",
        "label": "Dashboard Revision:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 1440,
        "wires": []
    },
    {
        "id": "f9d5801450e8a5b8",
        "type": "function",
        "z": "eff0892ab949f5a4",
        "name": "Get global variable Revision",
        "func": "msg.payload = global.get('Revision');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1440,
        "wires": [
            [
                "b04fe1952c4b3cb8"
            ]
        ]
    },
    {
        "id": "62d5f62ae3202307",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "VL1-2",
        "unitId": "1",
        "data": "voltage-L1L2",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "aecd0a35a8944256"
            ]
        ]
    },
    {
        "id": "aecd0a35a8944256",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "51337e42db70ca2c"
            ],
            []
        ]
    },
    {
        "id": "a84a18740c34967a",
        "type": "inject",
        "z": "14f49ae6c62c7049",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "62d5f62ae3202307",
                "fc33a4cc6c42b790",
                "cc4c5dba6a070a60",
                "efcf7139f17efb39",
                "f2f7b54123c61077",
                "bceba366ce0b728a",
                "3f0528f141c9706b",
                "2c26d2de12aaae48",
                "f1efc9195131f0f2",
                "2f70e8802ef15652",
                "b33e50dad6d18352",
                "ad02797d63c7fc2f",
                "cddfc570691b07fe"
            ]
        ]
    },
    {
        "id": "51337e42db70ca2c",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 120,
        "wires": [
            [
                "5937ba0bf7e77158"
            ]
        ]
    },
    {
        "id": "fc33a4cc6c42b790",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "VL2-3",
        "unitId": "1",
        "data": "voltage-L2L3",
        "x": 370,
        "y": 180,
        "wires": [
            [
                "b7e6bd6f197a2190"
            ]
        ]
    },
    {
        "id": "b7e6bd6f197a2190",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "efc53755c32c175f"
            ],
            []
        ]
    },
    {
        "id": "efc53755c32c175f",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 180,
        "wires": [
            [
                "b18a622ede7deb86"
            ]
        ]
    },
    {
        "id": "cc4c5dba6a070a60",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "VL3-1",
        "unitId": "1",
        "data": "voltage-L3L1",
        "x": 370,
        "y": 240,
        "wires": [
            [
                "fbdf9524dd5ff0e5"
            ]
        ]
    },
    {
        "id": "fbdf9524dd5ff0e5",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 240,
        "wires": [
            [
                "b588532abe89403c"
            ],
            []
        ]
    },
    {
        "id": "b588532abe89403c",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 240,
        "wires": [
            [
                "bbb0e5f25eda5beb"
            ]
        ]
    },
    {
        "id": "efcf7139f17efb39",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "VL1-N",
        "unitId": "1",
        "data": "voltage-L1N",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "4c6d94e80194727c"
            ]
        ]
    },
    {
        "id": "4c6d94e80194727c",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 300,
        "wires": [
            [
                "ab1b653d15315c27"
            ],
            []
        ]
    },
    {
        "id": "ab1b653d15315c27",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f2f7b54123c61077",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "VL2-N",
        "unitId": "1",
        "data": "voltage-L2N",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "ea040cec858ea31b"
            ]
        ]
    },
    {
        "id": "ea040cec858ea31b",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 360,
        "wires": [
            [
                "60df0e1173b7ab4c"
            ],
            []
        ]
    },
    {
        "id": "60df0e1173b7ab4c",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "bceba366ce0b728a",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "VL3-N",
        "unitId": "1",
        "data": "voltage-L3N",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "9bb4ca6acd010c01"
            ]
        ]
    },
    {
        "id": "9bb4ca6acd010c01",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "17369245a9e61d8d"
            ],
            []
        ]
    },
    {
        "id": "17369245a9e61d8d",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "3f0528f141c9706b",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "Total Active Power",
        "unitId": "1",
        "data": "actPowerTot",
        "x": 410,
        "y": 660,
        "wires": [
            [
                "afe20b707763cdef"
            ]
        ]
    },
    {
        "id": "afe20b707763cdef",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 660,
        "wires": [
            [
                "0c71142d09d73539"
            ],
            []
        ]
    },
    {
        "id": "0c71142d09d73539",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 660,
        "wires": [
            [
                "b91ce1eff2e37366",
                "937f985360f2bdf7"
            ]
        ]
    },
    {
        "id": "2c26d2de12aaae48",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "I1",
        "unitId": "1",
        "data": "current-P1",
        "x": 370,
        "y": 480,
        "wires": [
            [
                "7be226e94d7d3232"
            ]
        ]
    },
    {
        "id": "7be226e94d7d3232",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 480,
        "wires": [
            [
                "1b76ccad2453731f"
            ],
            []
        ]
    },
    {
        "id": "1b76ccad2453731f",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 480,
        "wires": [
            [
                "11386f318995ccfe"
            ]
        ]
    },
    {
        "id": "f1efc9195131f0f2",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "I2",
        "unitId": "1",
        "data": "current-P2",
        "x": 370,
        "y": 540,
        "wires": [
            [
                "0b98f9892d50c301"
            ]
        ]
    },
    {
        "id": "0b98f9892d50c301",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 540,
        "wires": [
            [
                "ba3ba1f68aaa7afd"
            ],
            []
        ]
    },
    {
        "id": "ba3ba1f68aaa7afd",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 540,
        "wires": [
            [
                "907570311e18ef56"
            ]
        ]
    },
    {
        "id": "2f70e8802ef15652",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "I3",
        "unitId": "1",
        "data": "current-P3",
        "x": 370,
        "y": 600,
        "wires": [
            [
                "4219466722d6be35"
            ]
        ]
    },
    {
        "id": "4219466722d6be35",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 600,
        "wires": [
            [
                "976c9789939d0885"
            ],
            []
        ]
    },
    {
        "id": "976c9789939d0885",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 600,
        "wires": [
            [
                "af07b7d5af4b1a82"
            ]
        ]
    },
    {
        "id": "b33e50dad6d18352",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "Total PF",
        "unitId": "1",
        "data": "pFactorTot",
        "x": 380,
        "y": 720,
        "wires": [
            [
                "243ebf58fde71d71"
            ]
        ]
    },
    {
        "id": "243ebf58fde71d71",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 720,
        "wires": [
            [
                "152854595d02a5a8"
            ],
            []
        ]
    },
    {
        "id": "152854595d02a5a8",
        "type": "buffer-parser",
        "z": "14f49ae6c62c7049",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 850,
        "y": 720,
        "wires": [
            [
                "7ead14cd5b6380b2"
            ]
        ]
    },
    {
        "id": "ad02797d63c7fc2f",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "Consumption",
        "unitId": "1",
        "data": "toEnergyActImp",
        "x": 390,
        "y": 780,
        "wires": [
            [
                "cfc5db6be0a257d3"
            ]
        ]
    },
    {
        "id": "cfc5db6be0a257d3",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 780,
        "wires": [
            [
                "382e88a502939452"
            ],
            []
        ]
    },
    {
        "id": "f59185d495a30454",
        "type": "opcua-compact-server",
        "z": "14f49ae6c62c7049",
        "port": "10502",
        "endpoint": "",
        "productUri": "",
        "acceptExternalCommands": true,
        "maxAllowedSessionNumber": "10",
        "maxConnectionsPerEndpoint": "10",
        "maxAllowedSubscriptionNumber": "100",
        "alternateHostname": "",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "allowAnonymous": true,
        "individualCerts": false,
        "isAuditing": false,
        "serverDiscovery": true,
        "users": [],
        "xmlsetsOPCUA": [],
        "publicCertificateFile": "",
        "privateCertificateFile": "",
        "registerServerMethod": "1",
        "discoveryServerEndpointUrl": "opc.tcp://localhost:10502",
        "capabilitiesForMDNS": "",
        "maxNodesPerRead": 1000,
        "maxNodesPerWrite": 1000,
        "maxNodesPerHistoryReadData": 100,
        "maxNodesPerBrowse": 3000,
        "maxBrowseContinuationPoints": "10",
        "maxHistoryContinuationPoints": "10",
        "delayToInit": "1000",
        "delayToClose": "200",
        "serverShutdownTimeout": "100",
        "addressSpaceScript": "function constructAlarmAddressSpace(server, addressSpace, eventObjects, done) {\n  // server = the created node-opcua server\n  // addressSpace = address space of the node-opcua server\n  // eventObjects = add event variables here to hold them in memory from this script\n\n  // internal sandbox objects are:\n  // node = the compact server node,\n  // coreServer = core compact server object for debug and access to NodeOPCUA\n  // this.sandboxNodeContext = node context node-red\n  // this.sandboxFlowContext = flow context node-red\n  // this.sandboxGlobalContext = global context node-red\n  // this.sandboxEnv = env variables\n  // timeout and interval functions as expected from nodejs\n\n  const opcua = coreServer.choreCompact.opcua;\n  const LocalizedText = opcua.LocalizedText;\n  const namespace = addressSpace.getOwnNamespace();\n\n  const Variant = opcua.Variant;\n  const DataType = opcua.DataType;\n  const DataValue = opcua.DataValue;\n\n  var flexServerInternals = this;\n\n\n  coreServer.debugLog(\"init dynamic address space\");\n  const rootFolder = addressSpace.findNode(\"RootFolder\");\n\n  node.warn(\"construct new address space for OPC UA\");\n\n  const myDevice = namespace.addFolder(rootFolder.objects, {\n    \"browseName\": \"Edge Device\"\n  });\n  // const gpioFolder = namespace.addFolder(myDevice, { \"browseName\": \"GPIO\" });\n  const PowerMeterInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Power Meter\"\n  });\n  const DigitalInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Inputs\"\n  });\n  // const DigitalOutputs = namespace.addFolder(myDevice, {\n  //   \"browseName\": \"Digital Outputs\"\n  // });\n  const DeviceStats = namespace.addFolder(myDevice, {\n    \"browseName\": \"Device Stats\"\n  });\n  const MachineStats = namespace.addFolder(myDevice, {\n    \"browseName\": \"Machine Stats\"\n  });\n  const ValueHeartbeat = namespace.addVariable({\n    \"organizedBy\": DeviceStats,\n    \"browseName\": \"ValueHeartbeat\",\n    \"nodeId\": \"ns=1;s=ValueHeartbeat\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueHeartbeat\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueHeartbeat\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n  const ValuePartCount = namespace.addVariable({\n    \"organizedBy\": MachineStats,\n    \"browseName\": \"ValuePartCount\",\n    \"nodeId\": \"ns=1;s=ValuePartCount\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePartCount\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePartCount\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n  const ValueMachineStatus = namespace.addVariable({\n    \"organizedBy\": MachineStats,\n    \"browseName\": \"ValueMachineStatus\",\n    \"nodeId\": \"ns=1;s=ValueMachineStatus\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueMachineStatus\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueMachineStatus\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n  const ValuePower = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePower\",\n    \"nodeId\": \"ns=1;s=ValuePower\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePower\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePower\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC1\",\n    \"nodeId\": \"ns=1;s=ValueC1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC2\",\n    \"nodeId\": \"ns=1;s=ValueC2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC3\",\n    \"nodeId\": \"ns=1;s=ValueC3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV1\",\n    \"nodeId\": \"ns=1;s=ValueV1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV2\",\n    \"nodeId\": \"ns=1;s=ValueV2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV3\",\n    \"nodeId\": \"ns=1;s=ValueV3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValuePF = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePF\",\n    \"nodeId\": \"ns=1;s=ValuePF\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePF\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePF\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueConsumption = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueConsumption\",\n    \"nodeId\": \"ns=1;s=ValueConsumption\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueConsumption\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueConsumption\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueReactive = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueReactive\",\n    \"nodeId\": \"ns=1;s=ValueReactive\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueReactive\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueReactive\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI1 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI1\",\n    \"nodeId\": \"ns=1;s=DI1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI2 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI2\",\n    \"nodeId\": \"ns=1;s=DI2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI3 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI3\",\n    \"nodeId\": \"ns=1;s=DI3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI4 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI4\",\n    \"nodeId\": \"ns=1;s=DI4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI4\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n\n  // const DO1 = namespace.addVariable({\n  //   \"organizedBy\": DigitalOutputs,\n  //   \"browseName\": \"DO1\",\n  //   \"nodeId\": \"ns=1;s=DO1\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO1\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxGlobalContext.set(\n  //         \"DO1\",\n  //         variant.value\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n  // const DO2 = namespace.addVariable({\n  //   \"organizedBy\": DigitalOutputs,\n  //   \"browseName\": \"DO2\",\n  //   \"nodeId\": \"ns=1;s=DO2\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO2\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxGlobalContext.set(\n  //         \"DO2\",\n  //         variant.value\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n  // const DO3 = namespace.addVariable({\n  //   \"organizedBy\": DigitalOutputs,\n  //   \"browseName\": \"DO3\",\n  //   \"nodeId\": \"ns=1;s=DO3\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO3\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxGlobalContext.set(\n  //         \"DO3\",\n  //         variant.value\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n  // const DO4 = namespace.addVariable({\n  //   \"organizedBy\": DigitalOutputs,\n  //   \"browseName\": \"DO4\",\n  //   \"nodeId\": \"ns=1;s=DO4\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO4\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxGlobalContext.set(\n  //         \"DO4\",\n  //         variant.value\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n\n  //------------------------------------------------------------------------------\n  // Add a view\n  //------------------------------------------------------------------------------\n  const viewMachine = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Machine\"\n  });\n\n  const viewPowerMeter = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Power Meter\"\n  });\n\n  const viewDI = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DI\"\n  });\n\n  const viewDO = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DO\"\n  });\n\n  const viewDeviceStats = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Device Stats\"\n  });\n\n  viewDeviceStats.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueHeartbeat.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePower.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePF.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueConsumption.nodeId\n  });\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueReactive.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI1.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI2.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI3.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI4.nodeId\n  });\n\n  // viewDO.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DO1.nodeId\n  // });\n\n  // viewDO.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DO2.nodeId\n  // });\n\n  // viewDO.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DO3.nodeId\n  // });\n\n  // viewDO.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DO4.nodeId\n  // });\n\n  viewMachine.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePartCount.nodeId\n  });\n\n  viewMachine.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueMachineStatus.nodeId\n  });\n\n  coreServer.debugLog(\"create dynamic address space done\");\n  node.warn(\"construction of new address space for OPC UA done\");\n\n  done();\n}\n",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "f2cf401fa6603d39",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValuePower",
        "rules": [
            {
                "t": "set",
                "p": "ValuePower",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "d67127bea71032a2",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValueC1",
        "rules": [
            {
                "t": "set",
                "p": "ValueC1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "1722601e02127a14",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValueC2",
        "rules": [
            {
                "t": "set",
                "p": "ValueC2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3c9220b4e4e16233",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValueC3",
        "rules": [
            {
                "t": "set",
                "p": "ValueC3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "279a6a4c9d96d16a",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValueV1",
        "rules": [
            {
                "t": "set",
                "p": "ValueV1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8cb3b343836f98d6",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValueV2",
        "rules": [
            {
                "t": "set",
                "p": "ValueV2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "326757dad782e0a8",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValueV3",
        "rules": [
            {
                "t": "set",
                "p": "ValueV3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b2b2a20c065ca705",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValuePF",
        "rules": [
            {
                "t": "set",
                "p": "ValuePF",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "d1419c0b19a3b774",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValueConsumption",
        "rules": [
            {
                "t": "set",
                "p": "ValueConsumption",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "299929412e14ab9f",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValueReactive",
        "rules": [
            {
                "t": "set",
                "p": "ValueReactive",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "67127821105890f8",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "ValueHeartbeat",
        "rules": [
            {
                "t": "set",
                "p": "ValueHeartbeat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "9607f7cab89015ae",
        "type": "inject",
        "z": "14f49ae6c62c7049",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 960,
        "wires": [
            [
                "67127821105890f8",
                "ce645ca569cb90ef",
                "78c61c1db515ba64"
            ]
        ]
    },
    {
        "id": "66e98ce0c2160cc1",
        "type": "comment",
        "z": "14f49ae6c62c7049",
        "name": "Digital Inputs",
        "info": "",
        "x": 330,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ea276815759dd663",
        "type": "rpi-gpio in",
        "z": "14f49ae6c62c7049",
        "name": "DI0",
        "pin": "13",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 310,
        "y": 1200,
        "wires": [
            [
                "9d77bd7dbf1c7c84"
            ]
        ]
    },
    {
        "id": "2c32a863f20f8cd2",
        "type": "ui_switch",
        "z": "14f49ae6c62c7049",
        "name": "",
        "label": "DI0",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 670,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "9d77bd7dbf1c7c84",
        "type": "function",
        "z": "14f49ae6c62c7049",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "2c32a863f20f8cd2",
                "5491b8c45cce8637"
            ]
        ]
    },
    {
        "id": "79aa040e5d547204",
        "type": "rpi-gpio in",
        "z": "14f49ae6c62c7049",
        "name": "DI1",
        "pin": "17",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 310,
        "y": 1260,
        "wires": [
            [
                "5e96a9e9a3320bf7"
            ]
        ]
    },
    {
        "id": "1f038f2e9d60a736",
        "type": "ui_switch",
        "z": "14f49ae6c62c7049",
        "name": "",
        "label": "DI1",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 670,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "5e96a9e9a3320bf7",
        "type": "function",
        "z": "14f49ae6c62c7049",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1260,
        "wires": [
            [
                "1f038f2e9d60a736",
                "65cfdb52e8a3b4ad"
            ]
        ]
    },
    {
        "id": "7853445e2f068237",
        "type": "rpi-gpio in",
        "z": "14f49ae6c62c7049",
        "name": "DI2",
        "pin": "22",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 310,
        "y": 1320,
        "wires": [
            [
                "91af11b6e189a49c"
            ]
        ]
    },
    {
        "id": "3ce626822679b66c",
        "type": "ui_switch",
        "z": "14f49ae6c62c7049",
        "name": "",
        "label": "DI2",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 670,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "91af11b6e189a49c",
        "type": "function",
        "z": "14f49ae6c62c7049",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "3ce626822679b66c",
                "8c6ce2199acd5b78"
            ]
        ]
    },
    {
        "id": "9ec0c29a93074bd1",
        "type": "rpi-gpio in",
        "z": "14f49ae6c62c7049",
        "name": "DI3",
        "pin": "27",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 310,
        "y": 1380,
        "wires": [
            [
                "8401d9f0616bcbbe"
            ]
        ]
    },
    {
        "id": "6a6ff7d63fc391a3",
        "type": "ui_switch",
        "z": "14f49ae6c62c7049",
        "name": "",
        "label": "DI3",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 670,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "8401d9f0616bcbbe",
        "type": "function",
        "z": "14f49ae6c62c7049",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1380,
        "wires": [
            [
                "6a6ff7d63fc391a3",
                "0d667e2422971849"
            ]
        ]
    },
    {
        "id": "e1bda9b8b60fef18",
        "type": "comment",
        "z": "14f49ae6c62c7049",
        "name": "Digital Outputs",
        "info": "",
        "x": 340,
        "y": 1500,
        "wires": []
    },
    {
        "id": "bc595765bf2a8adb",
        "type": "ui_switch",
        "z": "14f49ae6c62c7049",
        "name": "",
        "label": "DO0",
        "tooltip": "",
        "group": "c5b6031b4031158d",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 310,
        "y": 1540,
        "wires": [
            [
                "7012153cb65bb414",
                "2add447d0bcab508"
            ]
        ]
    },
    {
        "id": "7012153cb65bb414",
        "type": "rpi-gpio out",
        "z": "14f49ae6c62c7049",
        "name": "DO0 Output",
        "pin": "23",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 490,
        "y": 1540,
        "wires": []
    },
    {
        "id": "baf3170bdaefd797",
        "type": "ui_switch",
        "z": "14f49ae6c62c7049",
        "name": "",
        "label": "DO1",
        "tooltip": "",
        "group": "c5b6031b4031158d",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 310,
        "y": 1600,
        "wires": [
            [
                "c95b1952ce127c07",
                "421d9db7cc4d9b6f"
            ]
        ]
    },
    {
        "id": "c95b1952ce127c07",
        "type": "rpi-gpio out",
        "z": "14f49ae6c62c7049",
        "name": "DO1 Output",
        "pin": "24",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 490,
        "y": 1600,
        "wires": []
    },
    {
        "id": "3cff1bc3b38ac3fa",
        "type": "ui_switch",
        "z": "14f49ae6c62c7049",
        "name": "",
        "label": "DO2",
        "tooltip": "",
        "group": "c5b6031b4031158d",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 310,
        "y": 1660,
        "wires": [
            [
                "b08cef23a3d4899d",
                "e5518a105928bf57"
            ]
        ]
    },
    {
        "id": "b08cef23a3d4899d",
        "type": "rpi-gpio out",
        "z": "14f49ae6c62c7049",
        "name": "DO2 Output",
        "pin": "25",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 490,
        "y": 1660,
        "wires": []
    },
    {
        "id": "02258ed04530c397",
        "type": "ui_switch",
        "z": "14f49ae6c62c7049",
        "name": "",
        "label": "DO3",
        "tooltip": "",
        "group": "c5b6031b4031158d",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 310,
        "y": 1720,
        "wires": [
            [
                "05c9c74494414e7e",
                "a9dd61aa781fbb6f"
            ]
        ]
    },
    {
        "id": "05c9c74494414e7e",
        "type": "rpi-gpio out",
        "z": "14f49ae6c62c7049",
        "name": "DO3 Output",
        "pin": "26",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 490,
        "y": 1720,
        "wires": []
    },
    {
        "id": "2652e0aec15d8857",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "DI1",
        "rules": [
            {
                "t": "set",
                "p": "DI1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "eb66f836b81e0999",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "DI2",
        "rules": [
            {
                "t": "set",
                "p": "DI2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "aad3c5943060de7d",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "DI3",
        "rules": [
            {
                "t": "set",
                "p": "DI3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "8f970f3bb8660b12",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "DI4",
        "rules": [
            {
                "t": "set",
                "p": "DI4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "494b0dd79e7996f9",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "DO1",
        "rules": [
            {
                "t": "set",
                "p": "DO1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "d8ae568726dd2232",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "DO2",
        "rules": [
            {
                "t": "set",
                "p": "DO2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "603e3071e2c8474d",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "DO3",
        "rules": [
            {
                "t": "set",
                "p": "DO3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "88a7fe421f61b1b2",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "name": "DO4",
        "rules": [
            {
                "t": "set",
                "p": "DO4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "5491b8c45cce8637",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 850,
        "y": 1160,
        "wires": [
            [
                "2652e0aec15d8857"
            ]
        ]
    },
    {
        "id": "65cfdb52e8a3b4ad",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 850,
        "y": 1240,
        "wires": [
            [
                "eb66f836b81e0999"
            ]
        ]
    },
    {
        "id": "8c6ce2199acd5b78",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 850,
        "y": 1300,
        "wires": [
            [
                "aad3c5943060de7d"
            ]
        ]
    },
    {
        "id": "0d667e2422971849",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 850,
        "y": 1380,
        "wires": [
            [
                "8f970f3bb8660b12"
            ]
        ]
    },
    {
        "id": "2add447d0bcab508",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 850,
        "y": 1520,
        "wires": [
            [
                "494b0dd79e7996f9"
            ]
        ]
    },
    {
        "id": "421d9db7cc4d9b6f",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 850,
        "y": 1580,
        "wires": [
            [
                "d8ae568726dd2232"
            ]
        ]
    },
    {
        "id": "e5518a105928bf57",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 850,
        "y": 1660,
        "wires": [
            [
                "603e3071e2c8474d"
            ]
        ]
    },
    {
        "id": "a9dd61aa781fbb6f",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 850,
        "y": 1740,
        "wires": [
            [
                "88a7fe421f61b1b2"
            ]
        ]
    },
    {
        "id": "b91ce1eff2e37366",
        "type": "rising-edge",
        "z": "14f49ae6c62c7049",
        "g": "61f9b802121fe5bc",
        "name": "pass message if power above 1000",
        "threshold": "1000",
        "x": 1320,
        "y": 940,
        "wires": [
            [
                "d4dbbebd2e8d38b5"
            ]
        ]
    },
    {
        "id": "d4dbbebd2e8d38b5",
        "type": "function",
        "z": "14f49ae6c62c7049",
        "g": "61f9b802121fe5bc",
        "name": "update partCount and machineStatus",
        "func": "let partCount = global.get(\"ValuePartCount\") || 0;\npartCount++;\nglobal.set(\"ValuePartCount\", partCount);\nglobal.set(\"ValueMachineStatus\", 2);\nglobal.set(\"ValueLastPart\", Date.now());\nmsg.payload = partCount;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "5937ba0bf7e77158",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "279a6a4c9d96d16a"
            ]
        ]
    },
    {
        "id": "b18a622ede7deb86",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 1090,
        "y": 180,
        "wires": [
            [
                "8cb3b343836f98d6"
            ]
        ]
    },
    {
        "id": "bbb0e5f25eda5beb",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "326757dad782e0a8"
            ]
        ]
    },
    {
        "id": "11386f318995ccfe",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 1110,
        "y": 300,
        "wires": [
            [
                "d67127bea71032a2"
            ]
        ]
    },
    {
        "id": "907570311e18ef56",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 1110,
        "y": 360,
        "wires": [
            [
                "1722601e02127a14"
            ]
        ]
    },
    {
        "id": "af07b7d5af4b1a82",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 1110,
        "y": 420,
        "wires": [
            [
                "3c9220b4e4e16233"
            ]
        ]
    },
    {
        "id": "937f985360f2bdf7",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 1110,
        "y": 480,
        "wires": [
            [
                "f2cf401fa6603d39"
            ]
        ]
    },
    {
        "id": "7ead14cd5b6380b2",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 1110,
        "y": 540,
        "wires": [
            [
                "b2b2a20c065ca705"
            ]
        ]
    },
    {
        "id": "382e88a502939452",
        "type": "function",
        "z": "14f49ae6c62c7049",
        "name": "function 7",
        "func": "var bigInt = global.get('bigInt');\nmsg.payload = bigInt.fromArray([...msg.payload], 4);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 780,
        "wires": [
            [
                "a910293d64b00f5f"
            ]
        ]
    },
    {
        "id": "a910293d64b00f5f",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "d1419c0b19a3b774"
            ]
        ]
    },
    {
        "id": "bc8a36cc93b4280f",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "g": "61f9b802121fe5bc",
        "name": "ValueMachineStatus",
        "rules": [
            {
                "t": "set",
                "p": "ValueMachineStatus",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "ce645ca569cb90ef",
        "type": "function",
        "z": "14f49ae6c62c7049",
        "g": "61f9b802121fe5bc",
        "name": "check whether machine running or not",
        "func": "let ValueLastPart = global.get(\"ValueLastPart\") || 0;\n\nif(Date.now() - ValueLastPart > 20000){\n    msg.payload = 1;\n    global.set(\"ValueMachineStatus\", 1);\n}else{\n    msg.payload = 2;\n    global.set(\"ValueMachineStatus\", 1);    \n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1060,
        "wires": [
            [
                "39ca0b7bcb732148"
            ]
        ]
    },
    {
        "id": "3dd2dc9346f2823b",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "g": "61f9b802121fe5bc",
        "name": "",
        "path": "",
        "x": 1110,
        "y": 1000,
        "wires": [
            [
                "458f097315ed659c"
            ]
        ]
    },
    {
        "id": "39ca0b7bcb732148",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "g": "61f9b802121fe5bc",
        "name": "",
        "path": "",
        "x": 1110,
        "y": 1060,
        "wires": [
            [
                "bc8a36cc93b4280f"
            ]
        ]
    },
    {
        "id": "78c61c1db515ba64",
        "type": "function",
        "z": "14f49ae6c62c7049",
        "g": "61f9b802121fe5bc",
        "name": "check partCount",
        "func": "msg.payload = global.get(\"ValuePartCount\") || 0;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1000,
        "wires": [
            [
                "3dd2dc9346f2823b"
            ]
        ]
    },
    {
        "id": "458f097315ed659c",
        "type": "change",
        "z": "14f49ae6c62c7049",
        "g": "61f9b802121fe5bc",
        "name": "ValuePartCount",
        "rules": [
            {
                "t": "set",
                "p": "ValuePartCount",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "cddfc570691b07fe",
        "type": "pm5000",
        "z": "14f49ae6c62c7049",
        "name": "Reactive",
        "unitId": "1",
        "data": "toEnergyReactImp",
        "x": 380,
        "y": 840,
        "wires": [
            [
                "e0330b2d27a1f0e1"
            ]
        ]
    },
    {
        "id": "e0330b2d27a1f0e1",
        "type": "modbus-flex-getter",
        "z": "14f49ae6c62c7049",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "4e690410af9a63a9",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 840,
        "wires": [
            [
                "b6816ad946ae5d54"
            ],
            []
        ]
    },
    {
        "id": "b6816ad946ae5d54",
        "type": "function",
        "z": "14f49ae6c62c7049",
        "name": "function 8",
        "func": "var bigInt = global.get('bigInt');\nmsg.payload = bigInt.fromArray([...msg.payload], 4);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 840,
        "wires": [
            [
                "cddc89d8d4b82005"
            ]
        ]
    },
    {
        "id": "cddc89d8d4b82005",
        "type": "show-value",
        "z": "14f49ae6c62c7049",
        "name": "",
        "path": "",
        "x": 1130,
        "y": 840,
        "wires": [
            [
                "299929412e14ab9f"
            ]
        ]
    },
    {
        "id": "c4abe0880bbef6fa",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValuePower",
        "rules": [
            {
                "t": "set",
                "p": "ValuePower",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "ae9d64d45771ce2a",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValueC1",
        "rules": [
            {
                "t": "set",
                "p": "ValueC1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "31a591739044232d",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValueC2",
        "rules": [
            {
                "t": "set",
                "p": "ValueC2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "0368c8ecd72a7236",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValueC3",
        "rules": [
            {
                "t": "set",
                "p": "ValueC3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "16c434b92baf091c",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValueV1",
        "rules": [
            {
                "t": "set",
                "p": "ValueV1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8fd2ed385b4138f9",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValueV2",
        "rules": [
            {
                "t": "set",
                "p": "ValueV2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "68715da7a96f4452",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValueV3",
        "rules": [
            {
                "t": "set",
                "p": "ValueV3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c348214b6dd6facf",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValuePF",
        "rules": [
            {
                "t": "set",
                "p": "ValuePF",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "76d08d92ce7c52ed",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValueConsumption",
        "rules": [
            {
                "t": "set",
                "p": "ValueConsumption",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "112af664e22b9950",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValueReactive",
        "rules": [
            {
                "t": "set",
                "p": "ValueReactive",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "84fcc79c3cc42599",
        "type": "opcua-compact-server",
        "z": "dd37338375d01a38",
        "port": "10502",
        "endpoint": "",
        "productUri": "",
        "acceptExternalCommands": true,
        "maxAllowedSessionNumber": "10",
        "maxConnectionsPerEndpoint": "10",
        "maxAllowedSubscriptionNumber": "100",
        "alternateHostname": "",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "allowAnonymous": true,
        "individualCerts": false,
        "isAuditing": false,
        "serverDiscovery": true,
        "users": [],
        "xmlsetsOPCUA": [],
        "publicCertificateFile": "",
        "privateCertificateFile": "",
        "registerServerMethod": "1",
        "discoveryServerEndpointUrl": "opc.tcp://localhost:10502",
        "capabilitiesForMDNS": "",
        "maxNodesPerRead": 1000,
        "maxNodesPerWrite": 1000,
        "maxNodesPerHistoryReadData": 100,
        "maxNodesPerBrowse": 3000,
        "maxBrowseContinuationPoints": "10",
        "maxHistoryContinuationPoints": "10",
        "delayToInit": "1000",
        "delayToClose": "200",
        "serverShutdownTimeout": "100",
        "addressSpaceScript": "function constructAlarmAddressSpace(server, addressSpace, eventObjects, done) {\n  // server = the created node-opcua server\n  // addressSpace = address space of the node-opcua server\n  // eventObjects = add event variables here to hold them in memory from this script\n\n  // internal sandbox objects are:\n  // node = the compact server node,\n  // coreServer = core compact server object for debug and access to NodeOPCUA\n  // this.sandboxNodeContext = node context node-red\n  // this.sandboxFlowContext = flow context node-red\n  // this.sandboxGlobalContext = global context node-red\n  // this.sandboxEnv = env variables\n  // timeout and interval functions as expected from nodejs\n\n  const opcua = coreServer.choreCompact.opcua;\n  const LocalizedText = opcua.LocalizedText;\n  const namespace = addressSpace.getOwnNamespace();\n\n  const Variant = opcua.Variant;\n  const DataType = opcua.DataType;\n  const DataValue = opcua.DataValue;\n\n  var flexServerInternals = this;\n\n  // this.sandboxFlowContext.set(\"ValuePower\", 0);\n  // this.setInterval(() => {\n  //   flexServerInternals.sandboxFlowContext.set(\n  //     \"ValuePower\",\n  //     Math.random() + 50.0\n  //   );\n  // }, 500);\n  // this.sandboxFlowContext.set(\"ValueC1\", 0);\n  // this.sandboxFlowContext.set(\"ValueC2\", 0);\n  // this.sandboxFlowContext.set(\"ValueC3\", 0);\n  // this.sandboxFlowContext.set(\"ValueV1\", 0);\n  // this.sandboxFlowContext.set(\"ValueV2\", 0);\n  // this.sandboxFlowContext.set(\"ValueV3\", 0);\n  // this.sandboxFlowContext.set(\"ValuePF\", 0);\n  // this.sandboxFlowContext.set(\"ValueConsumption\", 0);\n\n\n  // this.sandboxFlowContext.set(\"isoOutput1\", 0);\n  // this.setInterval(() => {\n  //   flexServerInternals.sandboxFlowContext.set(\n  //     \"isoOutput1\",\n  //     Math.random() + 10.0\n  //   );\n  // }, 500);\n\n  // this.sandboxFlowContext.set(\"isoOutput2\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput3\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput4\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput5\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput6\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput7\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput8\", 0);\n\n  coreServer.debugLog(\"init dynamic address space\");\n  const rootFolder = addressSpace.findNode(\"RootFolder\");\n\n  node.warn(\"construct new address space for OPC UA\");\n\n  const myDevice = namespace.addFolder(rootFolder.objects, {\n    \"browseName\": \"Edge Device\"\n  });\n  // const gpioFolder = namespace.addFolder(myDevice, { \"browseName\": \"GPIO\" });\n  const PowerMeterInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Power Meter\"\n  });\n  const DigitalInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Inputs\"\n  });\n  const DigitalOutputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Outputs\"\n  });\n  const DeviceStats = namespace.addFolder(myDevice, {\n    \"browseName\": \"Device Stats\"\n  });\n  const ValueHeartbeat = namespace.addVariable({\n    \"organizedBy\": DeviceStats,\n    \"browseName\": \"ValueHeartbeat\",\n    \"nodeId\": \"ns=1;s=ValueHeartbeat\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueHeartbeat\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueHeartbeat\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n  const ValuePower = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePower\",\n    \"nodeId\": \"ns=1;s=ValuePower\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePower\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePower\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC1\",\n    \"nodeId\": \"ns=1;s=ValueC1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC2\",\n    \"nodeId\": \"ns=1;s=ValueC2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC3\",\n    \"nodeId\": \"ns=1;s=ValueC3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV1\",\n    \"nodeId\": \"ns=1;s=ValueV1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV2\",\n    \"nodeId\": \"ns=1;s=ValueV2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV3\",\n    \"nodeId\": \"ns=1;s=ValueV3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValuePF = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePF\",\n    \"nodeId\": \"ns=1;s=ValuePF\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePF\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePF\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueConsumption = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueConsumption\",\n    \"nodeId\": \"ns=1;s=ValueConsumption\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueConsumption\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueConsumption\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI1 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI1\",\n    \"nodeId\": \"ns=1;s=DI1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI2 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI2\",\n    \"nodeId\": \"ns=1;s=DI2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI3 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI3\",\n    \"nodeId\": \"ns=1;s=DI3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI4 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI4\",\n    \"nodeId\": \"ns=1;s=DI4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI4\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n\n  const DO1 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO1\",\n    \"nodeId\": \"ns=1;s=DO1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO1\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO2 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO2\",\n    \"nodeId\": \"ns=1;s=DO2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO2\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO3 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO3\",\n    \"nodeId\": \"ns=1;s=DO3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO3\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO4 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO4\",\n    \"nodeId\": \"ns=1;s=DO4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO4\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n  //------------------------------------------------------------------------------\n  // Add a view\n  //------------------------------------------------------------------------------\n  const viewPowerMeter = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Power Meter\"\n  });\n\n  const viewDI = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DI\"\n  });\n\n  const viewDO = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DO\"\n  });\n\n  const viewDeviceStats = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Device Stats\"\n  });\n\n  viewDeviceStats.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueHeartbeat.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePower.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePF.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueConsumption.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI1.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI2.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI3.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI4.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO1.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO2.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO3.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO4.nodeId\n  });\n\n  coreServer.debugLog(\"create dynamic address space done\");\n  node.warn(\"construction of new address space for OPC UA done\");\n\n  done();\n}\n",
        "x": 120,
        "y": 80,
        "wires": []
    },
    {
        "id": "03531c25a5ed55fb",
        "type": "comment",
        "z": "dd37338375d01a38",
        "name": "Digital Inputs",
        "info": "",
        "x": 130,
        "y": 1140,
        "wires": []
    },
    {
        "id": "5868204e7a4512d0",
        "type": "rpi-gpio in",
        "z": "dd37338375d01a38",
        "name": "DI0",
        "pin": "13",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1180,
        "wires": [
            [
                "826fa04a1230e638"
            ]
        ]
    },
    {
        "id": "eea5dea68735d9b8",
        "type": "ui_switch",
        "z": "dd37338375d01a38",
        "name": "",
        "label": "DI0",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "826fa04a1230e638",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1180,
        "wires": [
            [
                "eea5dea68735d9b8",
                "81f76e54ff87daf6"
            ]
        ]
    },
    {
        "id": "6b118eeb59b2a881",
        "type": "rpi-gpio in",
        "z": "dd37338375d01a38",
        "name": "DI1",
        "pin": "17",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "928ed05e4f607a93"
            ]
        ]
    },
    {
        "id": "71a5556a78ad6e5d",
        "type": "ui_switch",
        "z": "dd37338375d01a38",
        "name": "",
        "label": "DI1",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "928ed05e4f607a93",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1240,
        "wires": [
            [
                "71a5556a78ad6e5d",
                "a7b003539490fbcc"
            ]
        ]
    },
    {
        "id": "c9b2c4d02a2f7e93",
        "type": "rpi-gpio in",
        "z": "dd37338375d01a38",
        "name": "DI2",
        "pin": "22",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1300,
        "wires": [
            [
                "5b7deb2894c98b77"
            ]
        ]
    },
    {
        "id": "3ba35ca589e4cb28",
        "type": "ui_switch",
        "z": "dd37338375d01a38",
        "name": "",
        "label": "DI2",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "5b7deb2894c98b77",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1300,
        "wires": [
            [
                "3ba35ca589e4cb28",
                "06b02831b427cad6"
            ]
        ]
    },
    {
        "id": "2ab4a24db015bca1",
        "type": "rpi-gpio in",
        "z": "dd37338375d01a38",
        "name": "DI3",
        "pin": "27",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1360,
        "wires": [
            [
                "c84fc750a2cbb1f8"
            ]
        ]
    },
    {
        "id": "520ea1024ce7fcf7",
        "type": "ui_switch",
        "z": "dd37338375d01a38",
        "name": "",
        "label": "DI3",
        "tooltip": "",
        "group": "1898cd1cd6c1a552",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "c84fc750a2cbb1f8",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1360,
        "wires": [
            [
                "520ea1024ce7fcf7",
                "2a02e1c453275fdd"
            ]
        ]
    },
    {
        "id": "81f76e54ff87daf6",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "DI1",
        "rules": [
            {
                "t": "set",
                "p": "DI1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "a7b003539490fbcc",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "DI2",
        "rules": [
            {
                "t": "set",
                "p": "DI2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "06b02831b427cad6",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "DI3",
        "rules": [
            {
                "t": "set",
                "p": "DI3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "2a02e1c453275fdd",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "DI4",
        "rules": [
            {
                "t": "set",
                "p": "DI4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "bef6c904b931582f",
        "type": "inject",
        "z": "dd37338375d01a38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 980,
        "wires": [
            [
                "c58a2860a64520db"
            ]
        ]
    },
    {
        "id": "c58a2860a64520db",
        "type": "change",
        "z": "dd37338375d01a38",
        "name": "ValueHeartbeat",
        "rules": [
            {
                "t": "set",
                "p": "ValueHeartbeat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "3537d3d42af9deea",
        "type": "modbus-read",
        "z": "dd37338375d01a38",
        "name": "Voltage Current PF",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "14",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3c431454d1f36eaa",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 140,
        "wires": [
            [
                "be87f5b19dde272f"
            ],
            []
        ]
    },
    {
        "id": "a366028562f91eab",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 820,
        "wires": [
            [
                "de86290b4fffa227"
            ]
        ]
    },
    {
        "id": "be87f5b19dde272f",
        "type": "buffer-parser",
        "z": "dd37338375d01a38",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item2",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item3",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item4",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item5",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item6",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "item7",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 7,
        "x": 450,
        "y": 200,
        "wires": [
            [
                "e74b79cd0a8cc2da"
            ],
            [
                "f19eeab2027b9dee"
            ],
            [
                "5fc7998cac33710c"
            ],
            [
                "4aa1aac7fddf8eda"
            ],
            [
                "4c4e2d43395b4ee9"
            ],
            [
                "dc52603e6e13cde5"
            ],
            [
                "50aa18c055b51026"
            ]
        ]
    },
    {
        "id": "e74b79cd0a8cc2da",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 120,
        "wires": [
            [
                "6b86e43bba30dea2"
            ]
        ]
    },
    {
        "id": "67ec58ab469859ac",
        "type": "buffer-parser",
        "z": "dd37338375d01a38",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 490,
        "y": 820,
        "wires": [
            [
                "a366028562f91eab"
            ]
        ]
    },
    {
        "id": "8b9c21d1efba0def",
        "type": "buffer-parser",
        "z": "dd37338375d01a38",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 490,
        "y": 900,
        "wires": [
            [
                "7f6ed5a182f40c1c"
            ]
        ]
    },
    {
        "id": "7f6ed5a182f40c1c",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 900,
        "wires": [
            [
                "02d001d9c9d32b61"
            ]
        ]
    },
    {
        "id": "50aa18c055b51026",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 480,
        "wires": [
            [
                "d6f6a7e486dbd531"
            ]
        ]
    },
    {
        "id": "de86290b4fffa227",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 820,
        "wires": [
            [
                "76d08d92ce7c52ed"
            ]
        ]
    },
    {
        "id": "02d001d9c9d32b61",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 900,
        "wires": [
            [
                "112af664e22b9950"
            ]
        ]
    },
    {
        "id": "8ddecbe9357229b5",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 310,
        "y": 820,
        "wires": [
            [
                "67ec58ab469859ac"
            ]
        ]
    },
    {
        "id": "6b86e43bba30dea2",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 120,
        "wires": [
            [
                "16c434b92baf091c"
            ]
        ]
    },
    {
        "id": "7207051b1bc6baa1",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 310,
        "y": 900,
        "wires": [
            [
                "8b9c21d1efba0def"
            ]
        ]
    },
    {
        "id": "d6f6a7e486dbd531",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "c348214b6dd6facf"
            ]
        ]
    },
    {
        "id": "70b370f1e0633d2f",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 180,
        "wires": [
            [
                "8fd2ed385b4138f9"
            ]
        ]
    },
    {
        "id": "f19eeab2027b9dee",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 180,
        "wires": [
            [
                "70b370f1e0633d2f"
            ]
        ]
    },
    {
        "id": "255748ea8c4c0223",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 240,
        "wires": [
            [
                "68715da7a96f4452"
            ]
        ]
    },
    {
        "id": "5fc7998cac33710c",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 240,
        "wires": [
            [
                "255748ea8c4c0223"
            ]
        ]
    },
    {
        "id": "26c88b95d1053eb2",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "ae9d64d45771ce2a"
            ]
        ]
    },
    {
        "id": "4aa1aac7fddf8eda",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 300,
        "wires": [
            [
                "26c88b95d1053eb2"
            ]
        ]
    },
    {
        "id": "c2a204a9539ead10",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 360,
        "wires": [
            [
                "31a591739044232d"
            ]
        ]
    },
    {
        "id": "4c4e2d43395b4ee9",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 360,
        "wires": [
            [
                "c2a204a9539ead10"
            ]
        ]
    },
    {
        "id": "a295740d4e4ae9e3",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 420,
        "wires": [
            [
                "0368c8ecd72a7236"
            ]
        ]
    },
    {
        "id": "dc52603e6e13cde5",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 420,
        "wires": [
            [
                "a295740d4e4ae9e3"
            ]
        ]
    },
    {
        "id": "189889ee7326d20d",
        "type": "modbus-read",
        "z": "dd37338375d01a38",
        "name": "Power",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "16",
        "quantity": "2",
        "rate": "300",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3c431454d1f36eaa",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 740,
        "wires": [
            [
                "cc703dafec7a860f"
            ],
            []
        ]
    },
    {
        "id": "cc703dafec7a860f",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 310,
        "y": 740,
        "wires": [
            [
                "33cdac622f9b3e65"
            ]
        ]
    },
    {
        "id": "33cdac622f9b3e65",
        "type": "buffer-parser",
        "z": "dd37338375d01a38",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 490,
        "y": 740,
        "wires": [
            [
                "068294d441b382bc"
            ]
        ]
    },
    {
        "id": "068294d441b382bc",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 740,
        "wires": [
            [
                "a1a789f779d97439"
            ]
        ]
    },
    {
        "id": "a1a789f779d97439",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 740,
        "wires": [
            [
                "c4abe0880bbef6fa"
            ]
        ]
    },
    {
        "id": "3119f95a6f2763ab",
        "type": "modbus-read",
        "z": "dd37338375d01a38",
        "name": "Consumption",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "576",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3c431454d1f36eaa",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 820,
        "wires": [
            [
                "8ddecbe9357229b5"
            ],
            []
        ]
    },
    {
        "id": "b2102699b0ee8107",
        "type": "modbus-read",
        "z": "dd37338375d01a38",
        "name": "Reactive",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "580",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3c431454d1f36eaa",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 120,
        "y": 900,
        "wires": [
            [
                "7207051b1bc6baa1"
            ],
            []
        ]
    },
    {
        "id": "257755df9a5fe16e",
        "type": "modbus-read",
        "z": "dd37338375d01a38",
        "name": "Voltage",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "20",
        "quantity": "6",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "3c431454d1f36eaa",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 560,
        "wires": [
            [
                "e2699d28c7aca402"
            ],
            []
        ]
    },
    {
        "id": "e2699d28c7aca402",
        "type": "buffer-parser",
        "z": "dd37338375d01a38",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item2",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item3",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 3,
        "x": 430,
        "y": 580,
        "wires": [
            [
                "3f53772735818be9"
            ],
            [
                "b6071025b8900e79"
            ],
            [
                "3a779a3afd515374"
            ]
        ]
    },
    {
        "id": "3f53772735818be9",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 560,
        "wires": [
            [
                "719912111380e266"
            ]
        ]
    },
    {
        "id": "719912111380e266",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6e6c9c25c3f5ead8",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "b6071025b8900e79",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 620,
        "wires": [
            [
                "6e6c9c25c3f5ead8"
            ]
        ]
    },
    {
        "id": "d45548db095ca501",
        "type": "show-value",
        "z": "dd37338375d01a38",
        "name": "",
        "path": "",
        "x": 870,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "3a779a3afd515374",
        "type": "function",
        "z": "dd37338375d01a38",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 680,
        "wires": [
            [
                "d45548db095ca501"
            ]
        ]
    },
    {
        "id": "c2c8061d10364b48",
        "type": "rpi-gpio in",
        "z": "2095f811ca672d92",
        "name": "DI0",
        "pin": "13",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "67387d5f3c5dec81"
            ]
        ]
    },
    {
        "id": "7fd89a2c8651f66b",
        "type": "rpi-gpio in",
        "z": "2095f811ca672d92",
        "name": "DI1",
        "pin": "17",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "9ff9116e4d714660"
            ]
        ]
    },
    {
        "id": "9923c49c4f10e35a",
        "type": "rpi-gpio in",
        "z": "2095f811ca672d92",
        "name": "DI2",
        "pin": "22",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 360,
        "wires": [
            [
                "16e926ae6c7270a0"
            ]
        ]
    },
    {
        "id": "b57d04a59bd2486c",
        "type": "rpi-gpio in",
        "z": "2095f811ca672d92",
        "name": "DI3",
        "pin": "27",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 420,
        "wires": [
            [
                "9e71478430b7eca8"
            ]
        ]
    },
    {
        "id": "67387d5f3c5dec81",
        "type": "falling-edge",
        "z": "2095f811ca672d92",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 240,
        "wires": [
            [
                "7f6c1b2a38def003"
            ]
        ]
    },
    {
        "id": "9ff9116e4d714660",
        "type": "falling-edge",
        "z": "2095f811ca672d92",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "16e926ae6c7270a0",
        "type": "falling-edge",
        "z": "2095f811ca672d92",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "9e71478430b7eca8",
        "type": "falling-edge",
        "z": "2095f811ca672d92",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "7f6c1b2a38def003",
        "type": "function",
        "z": "2095f811ca672d92",
        "name": "increase partCount",
        "func": "let partCount = global.get(\"partCount\") || 0;\npartCount++;\nglobal.set(\"partCount\", partCount);\nmsg.payload = partCount;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 240,
        "wires": [
            [
                "ada2c9e9b7aa1f19"
            ]
        ]
    },
    {
        "id": "ada2c9e9b7aa1f19",
        "type": "show-value",
        "z": "2095f811ca672d92",
        "name": "",
        "path": "",
        "x": 850,
        "y": 240,
        "wires": [
            [
                "6c666cd1076569a4"
            ]
        ]
    },
    {
        "id": "ec87c6828b0cb878",
        "type": "inject",
        "z": "2095f811ca672d92",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "67387d5f3c5dec81"
            ]
        ]
    },
    {
        "id": "acae185fe4bb3f47",
        "type": "inject",
        "z": "2095f811ca672d92",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "67387d5f3c5dec81"
            ]
        ]
    },
    {
        "id": "7c4fe005396211dc",
        "type": "opcua-compact-server",
        "z": "2095f811ca672d92",
        "port": "10502",
        "endpoint": "",
        "productUri": "",
        "acceptExternalCommands": true,
        "maxAllowedSessionNumber": "10",
        "maxConnectionsPerEndpoint": "10",
        "maxAllowedSubscriptionNumber": "100",
        "alternateHostname": "",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "allowAnonymous": true,
        "individualCerts": false,
        "isAuditing": false,
        "serverDiscovery": true,
        "users": [],
        "xmlsetsOPCUA": [],
        "publicCertificateFile": "",
        "privateCertificateFile": "",
        "registerServerMethod": "1",
        "discoveryServerEndpointUrl": "opc.tcp://localhost:10502",
        "capabilitiesForMDNS": "",
        "maxNodesPerRead": 1000,
        "maxNodesPerWrite": 1000,
        "maxNodesPerHistoryReadData": 100,
        "maxNodesPerBrowse": 3000,
        "maxBrowseContinuationPoints": "10",
        "maxHistoryContinuationPoints": "10",
        "delayToInit": "1000",
        "delayToClose": "200",
        "serverShutdownTimeout": "100",
        "addressSpaceScript": "function constructAlarmAddressSpace(server, addressSpace, eventObjects, done) {\n\n\n  const opcua = coreServer.choreCompact.opcua;\n  const LocalizedText = opcua.LocalizedText;\n  const namespace = addressSpace.getOwnNamespace();\n\n  const Variant = opcua.Variant;\n  const DataType = opcua.DataType;\n  const DataValue = opcua.DataValue;\n\n  var flexServerInternals = this;\n\n\n  coreServer.debugLog(\"init dynamic address space\");\n  const rootFolder = addressSpace.findNode(\"RootFolder\");\n\n  node.warn(\"construct new address space for OPC UA\");\n\n  const myDevice = namespace.addFolder(rootFolder.objects, {\n    \"browseName\": \"Edge Device\"\n  });\n  // const gpioFolder = namespace.addFolder(myDevice, { \"browseName\": \"GPIO\" });\n  const MachineStats = namespace.addFolder(myDevice, {\n    \"browseName\": \"Machine Stats\"\n  });\n  const DigitalInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Inputs\"\n  });\n  const DigitalOutputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Outputs\"\n  });\n  const DeviceStats = namespace.addFolder(myDevice, {\n    \"browseName\": \"Device Stats\"\n  });\n  const ValueHeartbeat = namespace.addVariable({\n    \"organizedBy\": DeviceStats,\n    \"browseName\": \"ValueHeartbeat\",\n    \"nodeId\": \"ns=1;s=ValueHeartbeat\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueHeartbeat\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueHeartbeat\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n  const ValuePartCount = namespace.addVariable({\n    \"organizedBy\": MachineStats,\n    \"browseName\": \"ValuePartCount\",\n    \"nodeId\": \"ns=1;s=ValuePartCount\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePartCount\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePartCount\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n  const ValueMachineStatus = namespace.addVariable({\n    \"organizedBy\": MachineStats,\n    \"browseName\": \"ValueMachineStatus\",\n    \"nodeId\": \"ns=1;s=ValueMachineStatus\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueMachineStatus\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueMachineStatus\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  // const DI1 = namespace.addVariable({\n  //   \"organizedBy\": DigitalInputs,\n  //   \"browseName\": \"DI1\",\n  //   \"nodeId\": \"ns=1;s=DI1\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxFlowContext.get(\"DI1\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxFlowContext.set(\n  //         \"DI1\",\n  //         parseFloat(variant.value)\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n  // const DI2 = namespace.addVariable({\n  //   \"organizedBy\": DigitalInputs,\n  //   \"browseName\": \"DI2\",\n  //   \"nodeId\": \"ns=1;s=DI2\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxFlowContext.get(\"DI2\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxFlowContext.set(\n  //         \"DI2\",\n  //         parseFloat(variant.value)\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n  // const DI3 = namespace.addVariable({\n  //   \"organizedBy\": DigitalInputs,\n  //   \"browseName\": \"DI3\",\n  //   \"nodeId\": \"ns=1;s=DI3\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxFlowContext.get(\"DI3\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxFlowContext.set(\n  //         \"DI3\",\n  //         parseFloat(variant.value)\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n  // const DI4 = namespace.addVariable({\n  //   \"organizedBy\": DigitalInputs,\n  //   \"browseName\": \"DI4\",\n  //   \"nodeId\": \"ns=1;s=DI4\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxFlowContext.get(\"DI4\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxFlowContext.set(\n  //         \"DI4\",\n  //         parseFloat(variant.value)\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n\n\n  // const DO1 = namespace.addVariable({\n  //   \"organizedBy\": DigitalOutputs,\n  //   \"browseName\": \"DO1\",\n  //   \"nodeId\": \"ns=1;s=DO1\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO1\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxGlobalContext.set(\n  //         \"DO1\",\n  //         variant.value\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n  // const DO2 = namespace.addVariable({\n  //   \"organizedBy\": DigitalOutputs,\n  //   \"browseName\": \"DO2\",\n  //   \"nodeId\": \"ns=1;s=DO2\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO2\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxGlobalContext.set(\n  //         \"DO2\",\n  //         variant.value\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n  // const DO3 = namespace.addVariable({\n  //   \"organizedBy\": DigitalOutputs,\n  //   \"browseName\": \"DO3\",\n  //   \"nodeId\": \"ns=1;s=DO3\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO3\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxGlobalContext.set(\n  //         \"DO3\",\n  //         variant.value\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n  // const DO4 = namespace.addVariable({\n  //   \"organizedBy\": DigitalOutputs,\n  //   \"browseName\": \"DO4\",\n  //   \"nodeId\": \"ns=1;s=DO4\",\n  //   \"dataType\": \"Boolean\",\n  //   \"value\": {\n  //     \"get\": function () {\n  //       return new Variant({\n  //         \"dataType\": DataType.Boolean,\n  //         \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO4\")\n  //       });\n  //     },\n  //     \"set\": function (variant) {\n  //       flexServerInternals.sandboxGlobalContext.set(\n  //         \"DO4\",\n  //         variant.value\n  //       );\n  //       return opcua.StatusCodes.Good;\n  //     }\n  //   }\n  // });\n\n\n  //------------------------------------------------------------------------------\n  // Add a view\n  //------------------------------------------------------------------------------\n  const viewMachine = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Machine\"\n  });\n\n  // const viewDI = namespace.addView({\n  //   \"organizedBy\": rootFolder.views,\n  //   \"browseName\": \"DI\"\n  // });\n\n  // const viewDO = namespace.addView({\n  //   \"organizedBy\": rootFolder.views,\n  //   \"browseName\": \"DO\"\n  // });\n\n  const viewDeviceStats = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Device Stats\"\n  });\n\n  viewMachine.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePartCount.nodeId\n  });\n\n  viewMachine.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueMachineStatus.nodeId\n  });\n\n  viewDeviceStats.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueHeartbeat.nodeId\n  });\n\n\n  // viewDI.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DI1.nodeId\n  // });\n\n  // viewDI.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DI2.nodeId\n  // });\n\n  // viewDI.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DI3.nodeId\n  // });\n\n  // viewDI.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DI4.nodeId\n  // });\n\n  // viewDO.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DO1.nodeId\n  // });\n\n  // viewDO.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DO2.nodeId\n  // });\n\n  // viewDO.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DO3.nodeId\n  // });\n\n  // viewDO.addReference({\n  //   \"referenceType\": \"Organizes\",\n  //   \"nodeId\": DO4.nodeId\n  // });\n\n  coreServer.debugLog(\"create dynamic address space done\");\n  node.warn(\"construction of new address space for OPC UA done\");\n\n  done();\n}\n",
        "x": 140,
        "y": 80,
        "wires": []
    },
    {
        "id": "6c666cd1076569a4",
        "type": "change",
        "z": "2095f811ca672d92",
        "name": "ValuePartCount",
        "rules": [
            {
                "t": "set",
                "p": "ValuePartCount",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "512db1f8963db60f",
        "type": "inject",
        "z": "8f480895e38cb0f3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "facdd05d84933a28"
            ]
        ]
    },
    {
        "id": "facdd05d84933a28",
        "type": "change",
        "z": "8f480895e38cb0f3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "test",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "5ef669e91d7089ea",
        "type": "inject",
        "z": "8f480895e38cb0f3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "31327c366e1a070c"
            ]
        ]
    },
    {
        "id": "31327c366e1a070c",
        "type": "function",
        "z": "8f480895e38cb0f3",
        "name": "function 1",
        "func": "msg.payload = global.get(\"test\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 260,
        "wires": [
            [
                "721565b4aa947299"
            ]
        ]
    },
    {
        "id": "721565b4aa947299",
        "type": "show-value",
        "z": "8f480895e38cb0f3",
        "name": "",
        "path": "",
        "x": 530,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "2b2dcc21860b067f",
        "type": "exec",
        "z": "8f480895e38cb0f3",
        "command": "sudo reboot now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "69b74c2248f0b57f",
        "type": "inject",
        "z": "8f480895e38cb0f3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "2b2dcc21860b067f"
            ]
        ]
    }
]