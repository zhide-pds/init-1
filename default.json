[
    {
        "id": "83f538a4ecaba86a",
        "type": "tab",
        "label": "MISC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0c0115bc4671b250",
        "type": "tab",
        "label": "OLED",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6a87c8b09ede113d",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "73cffe3684dd5ef5",
        "type": "tab",
        "label": "Schneider Power Meter",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "d0b00913466bcea1",
        "type": "tab",
        "label": "Omron Power Meter",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "b178827b115d4cec",
        "type": "tab",
        "label": "Dry Contact Part Count",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7eb0792a01b9b20e",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7e4cdd0309f5b525",
        "type": "oled-config",
        "name": "iriv_oled",
        "width": "128",
        "height": "64",
        "address": "3c"
    },
    {
        "id": "98c977e25cd4416f",
        "type": "ui_tab",
        "name": "IRIV PiControl Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "03c7fdeeab71b460",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0fb4f5",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#0094ce",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#0094ce",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "IRIV PiControl Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 20,
                "gy": 20,
                "cx": 6,
                "cy": 6,
                "px": 10,
                "py": 10
            }
        }
    },
    {
        "id": "bd6b23c8adfb60a1",
        "type": "ui_group",
        "name": "Button, LEDs & Buzzer",
        "tab": "98c977e25cd4416f",
        "order": 1,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "26ffda61bed9f1d3",
        "type": "ui_group",
        "name": "System",
        "tab": "98c977e25cd4416f",
        "order": 5,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b4ae35e20516b546",
        "type": "ui_group",
        "name": "Digital Inputs",
        "tab": "98c977e25cd4416f",
        "order": 2,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0d2d6a857848f659",
        "type": "ui_group",
        "name": "Digital Outputs",
        "tab": "98c977e25cd4416f",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d756c1d8b7796646",
        "type": "ui_group",
        "name": "Analog Inputs",
        "tab": "98c977e25cd4416f",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4bb3b0f57ee3f9a2",
        "type": "ui_spacer",
        "z": "6a87c8b09ede113d",
        "name": "spacer",
        "group": "bd6b23c8adfb60a1",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "dc7a4e51114222ac",
        "type": "ui_spacer",
        "z": "6a87c8b09ede113d",
        "name": "spacer",
        "group": "bd6b23c8adfb60a1",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "1957c89060b0a814",
        "type": "ui_spacer",
        "z": "6a87c8b09ede113d",
        "name": "spacer",
        "group": "b4ae35e20516b546",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "de6a1ec0a0742395",
        "type": "ui_spacer",
        "z": "6a87c8b09ede113d",
        "name": "spacer",
        "group": "b4ae35e20516b546",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "ed571280d892094b",
        "type": "ui_spacer",
        "z": "6a87c8b09ede113d",
        "name": "spacer",
        "group": "0d2d6a857848f659",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "fdf25ce2e18fb4bd",
        "type": "ui_spacer",
        "z": "6a87c8b09ede113d",
        "name": "spacer",
        "group": "0d2d6a857848f659",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "89f493ad0b442665",
        "type": "ui_spacer",
        "z": "6a87c8b09ede113d",
        "name": "spacer",
        "group": "d756c1d8b7796646",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "026f34b8b5f7510d",
        "type": "ui_spacer",
        "z": "6a87c8b09ede113d",
        "name": "spacer",
        "group": "d756c1d8b7796646",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "a0cb20bf59fdba85",
        "type": "ui_spacer",
        "z": "6a87c8b09ede113d",
        "name": "spacer",
        "group": "d756c1d8b7796646",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "14eb97e28a7702eb",
        "type": "ui_spacer",
        "z": "6a87c8b09ede113d",
        "name": "spacer",
        "group": "d756c1d8b7796646",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "b28eadc30b131e7d",
        "type": "modbus-client",
        "name": "",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "COM15",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "19200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "even",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": false,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "62de4ee08ee8214d",
        "type": "modbus-client",
        "name": "",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyACM0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "even",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": false,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "7aa4b2157dc7e788",
        "type": "comment",
        "z": "83f538a4ecaba86a",
        "name": "Shutdown IRIV PiControl if user button is pressed for > 5 seconds or commanded from dashboard",
        "info": "",
        "x": 430,
        "y": 260,
        "wires": []
    },
    {
        "id": "2cb1cade241d0cec",
        "type": "rpi-gpio in",
        "z": "83f538a4ecaba86a",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "d79b5f583ef05005"
            ]
        ]
    },
    {
        "id": "d79b5f583ef05005",
        "type": "trigger",
        "z": "83f538a4ecaba86a",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 300,
        "wires": [
            [
                "3da00fe12d3a28dd",
                "790921dc4fc915d3",
                "9e2fdc31c381556e",
                "b4e226df41530c6c"
            ]
        ]
    },
    {
        "id": "1c8fee6b3fdef6e6",
        "type": "rpi-gpio out",
        "z": "83f538a4ecaba86a",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 860,
        "y": 360,
        "wires": []
    },
    {
        "id": "3da00fe12d3a28dd",
        "type": "trigger",
        "z": "83f538a4ecaba86a",
        "name": "On for 200ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "200",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 660,
        "y": 360,
        "wires": [
            [
                "1c8fee6b3fdef6e6"
            ]
        ]
    },
    {
        "id": "659bd9d5f0b079d3",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 880,
        "y": 300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "3d6c19d055c8f9c4",
        "type": "Clear",
        "z": "83f538a4ecaba86a",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 830,
        "y": 420,
        "wires": []
    },
    {
        "id": "9e2fdc31c381556e",
        "type": "delay",
        "z": "83f538a4ecaba86a",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 300,
        "wires": [
            [
                "659bd9d5f0b079d3"
            ]
        ]
    },
    {
        "id": "237ad14e2acc73fe",
        "type": "comment",
        "z": "83f538a4ecaba86a",
        "name": "Turn on WiFi Hotspot if wireless is available",
        "info": "",
        "x": 840,
        "y": 1720,
        "wires": []
    },
    {
        "id": "0fc380599ed25cd4",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "sudo nmcli device wifi hotspot ssid iriv password iriv1234",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 1010,
        "y": 1800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "05940fd2fbb7bc87",
        "type": "catch",
        "z": "83f538a4ecaba86a",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "ae14a84e6e300d0f"
            ]
        ]
    },
    {
        "id": "ae14a84e6e300d0f",
        "type": "debug",
        "z": "83f538a4ecaba86a",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 140,
        "wires": []
    },
    {
        "id": "ad0c25b72c0758b5",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "ip -f inet addr show eth0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - eth0",
        "x": 410,
        "y": 840,
        "wires": [
            [
                "59e9c8ced66fee7c"
            ],
            [],
            [
                "686727c35a49a17a"
            ]
        ]
    },
    {
        "id": "686727c35a49a17a",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "ip -f inet addr show eth1 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - eth1",
        "x": 410,
        "y": 920,
        "wires": [
            [
                "e36e073d93a0fb3e"
            ],
            [],
            [
                "be12de1bef4ba228"
            ]
        ]
    },
    {
        "id": "be12de1bef4ba228",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "ip -f inet addr show wlan0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - wlan0",
        "x": 420,
        "y": 1000,
        "wires": [
            [
                "97d7964e7e7301e8"
            ],
            [],
            [
                "52c945ce57fa490f"
            ]
        ]
    },
    {
        "id": "c6f80eaa47b3d90d",
        "type": "inject",
        "z": "83f538a4ecaba86a",
        "name": "Every 2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "ad0c25b72c0758b5"
            ]
        ]
    },
    {
        "id": "59e9c8ced66fee7c",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable IpEth0.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpEth0', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "e36e073d93a0fb3e",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable IpEth1.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpEth1', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "97d7964e7e7301e8",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable IpWlan0.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpWlan0', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "0dec8c43dff478e3",
        "type": "comment",
        "z": "83f538a4ecaba86a",
        "name": "Update status",
        "info": "",
        "x": 170,
        "y": 800,
        "wires": []
    },
    {
        "id": "29e8ed54128d49b3",
        "type": "comment",
        "z": "83f538a4ecaba86a",
        "name": "Handle the exception",
        "info": "",
        "x": 200,
        "y": 100,
        "wires": []
    },
    {
        "id": "52c945ce57fa490f",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "top -bn1 | grep load | awk '{printf \"%.2f\\n\", $(NF-2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get CPU Load",
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "74f08ea82955e108"
            ],
            [],
            [
                "c051311eb6b5a803"
            ]
        ]
    },
    {
        "id": "74f08ea82955e108",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable CpuLoad",
        "func": "global.set('CpuLoad', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "22a714621529dd6b",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "free -m | awk 'NR==2{printf \"%.1f/%.1fGB %d%%\\n\", $3/1000,$2/1000,$3*100/$2}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get RAM Usage",
        "x": 420,
        "y": 1240,
        "wires": [
            [
                "2e56ee3733aaea20"
            ],
            [],
            [
                "d5abbd2c0d10651e"
            ]
        ]
    },
    {
        "id": "2e56ee3733aaea20",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable Ram",
        "func": "global.set('Ram', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "d5abbd2c0d10651e",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "df -h | awk '$NF==\"/\"{printf \"%.1f/%.1fGB %s\\n\", $3,$2,$5}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get Disk Usage",
        "x": 420,
        "y": 1320,
        "wires": [
            [
                "252877db67386b36"
            ],
            [],
            []
        ]
    },
    {
        "id": "252877db67386b36",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable Disk",
        "func": "global.set('Disk', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "77bf54c652b5d066",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "free -t -h | awk 'NR==4{printf \"%d\\n\", $2+0.7}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get total RAM Size",
        "x": 430,
        "y": 1440,
        "wires": [
            [
                "13820eb9f57a4949"
            ],
            [],
            [
                "2cc21e9e53ed00d5"
            ]
        ]
    },
    {
        "id": "13820eb9f57a4949",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable TotalRam",
        "func": "global.set('TotalRam', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "21650a263a9246b2",
        "type": "inject",
        "z": "83f538a4ecaba86a",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1440,
        "wires": [
            [
                "77bf54c652b5d066"
            ]
        ]
    },
    {
        "id": "2cc21e9e53ed00d5",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "df -h | awk '$NF==\"/\"{printf \"%d\\n\", $2*1.1}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get total Disk Size",
        "x": 430,
        "y": 1520,
        "wires": [
            [
                "bda971e122ea50ce"
            ],
            [],
            [
                "9c6b6dd3cc22df3e"
            ]
        ]
    },
    {
        "id": "bda971e122ea50ce",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable TotalDisk",
        "func": "global.set('TotalDisk', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "9c6b6dd3cc22df3e",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "ifconfig | grep wlan0",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Check whether there's wireless",
        "x": 470,
        "y": 1600,
        "wires": [
            [
                "d38a5e242a620293"
            ],
            [],
            [
                "2611f5e0d3dd2669"
            ]
        ]
    },
    {
        "id": "d38a5e242a620293",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable IsWireless",
        "func": "var result;\n\nif (msg.payload == \"\") {\n    result = \"\"\n} else {\n    result = \"W\"\n}\n\nglobal.set('IsWireless', result);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "c051311eb6b5a803",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "vcgencmd measure_temp | awk -F \"[=']\" '{print($2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get CPU Temperature",
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "10bde445a4cc917c"
            ],
            [],
            [
                "22a714621529dd6b"
            ]
        ]
    },
    {
        "id": "10bde445a4cc917c",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable CpuTemp",
        "func": "global.set('CpuTemp', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "dde0ff11af420a14",
        "type": "rpi-gpio in",
        "z": "83f538a4ecaba86a",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 170,
        "y": 700,
        "wires": [
            [
                "f17365514cb8e575"
            ]
        ]
    },
    {
        "id": "f17365514cb8e575",
        "type": "switch",
        "z": "83f538a4ecaba86a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 700,
        "wires": [
            [
                "148e0aaa38ca6639"
            ]
        ]
    },
    {
        "id": "148e0aaa38ca6639",
        "type": "trigger",
        "z": "83f538a4ecaba86a",
        "name": "On for 25ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "25",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 490,
        "y": 700,
        "wires": [
            [
                "12516de69fa5e68b"
            ]
        ]
    },
    {
        "id": "12516de69fa5e68b",
        "type": "rpi-gpio out",
        "z": "83f538a4ecaba86a",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 700,
        "y": 700,
        "wires": []
    },
    {
        "id": "c2b69aeb88b08f03",
        "type": "comment",
        "z": "83f538a4ecaba86a",
        "name": "Beep when user button is pressed",
        "info": "",
        "x": 240,
        "y": 660,
        "wires": []
    },
    {
        "id": "3b892eb73f81ecdc",
        "type": "link in",
        "z": "83f538a4ecaba86a",
        "name": "Shutdown",
        "links": [
            "9170774726bb50da"
        ],
        "x": 385,
        "y": 360,
        "wires": [
            [
                "9e2fdc31c381556e",
                "3da00fe12d3a28dd",
                "790921dc4fc915d3",
                "b4e226df41530c6c"
            ]
        ]
    },
    {
        "id": "b4e226df41530c6c",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Update global.state",
        "func": "global.set('state', -1);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "790921dc4fc915d3",
        "type": "delay",
        "z": "83f538a4ecaba86a",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 420,
        "wires": [
            [
                "3d6c19d055c8f9c4"
            ]
        ]
    },
    {
        "id": "4a27b06d878aa6a5",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "sudo reboot now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 870,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "89c9dfc4ef0b6ffa",
        "type": "delay",
        "z": "83f538a4ecaba86a",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 540,
        "wires": [
            [
                "4a27b06d878aa6a5"
            ]
        ]
    },
    {
        "id": "8bfd10d0b8ebcb3b",
        "type": "link in",
        "z": "83f538a4ecaba86a",
        "name": "Reboot",
        "links": [
            "9678623fbf7b9a83"
        ],
        "x": 385,
        "y": 540,
        "wires": [
            [
                "89c9dfc4ef0b6ffa",
                "3da00fe12d3a28dd",
                "790921dc4fc915d3",
                "b4e226df41530c6c"
            ]
        ]
    },
    {
        "id": "fd9d10ffe8d502ae",
        "type": "switch",
        "z": "83f538a4ecaba86a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1800,
        "wires": [
            [
                "0fc380599ed25cd4"
            ]
        ]
    },
    {
        "id": "5bf6b07ed8fb37d3",
        "type": "comment",
        "z": "83f538a4ecaba86a",
        "name": "Remove this if you do not want to enable WiFi AP",
        "info": "",
        "x": 860,
        "y": 1760,
        "wires": []
    },
    {
        "id": "2611f5e0d3dd2669",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "lsb_release -c | awk -F \":\" '{print($2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get Codename",
        "x": 420,
        "y": 1880,
        "wires": [
            [
                "adacc363ba578220"
            ],
            [],
            [
                "56aa669be50ed001"
            ]
        ]
    },
    {
        "id": "adacc363ba578220",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable Codename",
        "func": "global.set('Codename', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "56aa669be50ed001",
        "type": "exec",
        "z": "83f538a4ecaba86a",
        "command": "getconf LONG_BIT",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get OS Bit",
        "x": 410,
        "y": 1960,
        "wires": [
            [
                "5f534596b51cb454"
            ],
            [],
            []
        ]
    },
    {
        "id": "5f534596b51cb454",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable OSBit",
        "func": "global.set('OSBit', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "2aa24afc69b962af",
        "type": "function",
        "z": "83f538a4ecaba86a",
        "name": "Save to global variable Revision",
        "func": "global.set('Revision', \"v1.1.3\");",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "a635fcd7acc5cdbd",
        "type": "inject",
        "z": "83f538a4ecaba86a",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 2060,
        "wires": [
            [
                "2aa24afc69b962af"
            ]
        ]
    },
    {
        "id": "189320a6d1b02c9f",
        "type": "String",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4f36d9b7a409541c",
        "type": "comment",
        "z": "0c0115bc4671b250",
        "name": "Show the \"Press USER to cont...\" message",
        "info": "",
        "x": 220,
        "y": 560,
        "wires": []
    },
    {
        "id": "4e987a4c5b855180",
        "type": "function",
        "z": "0c0115bc4671b250",
        "name": "State Machine",
        "func": "var state = global.get('state') || 0;\n\nif (msg.payload == \"reset\") {\n    state = 0;\n    global.set('state', state);\n\n    msg.payload = state;\n    return msg;\n}\n\nif (msg.payload == 0) {\n    state += 1;\n    if (state == 5) {\n        state = 0;\n    }\n\n    global.set('state', state);\n\n    msg.payload = state;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 820,
        "wires": [
            [
                "d53153f9e62901df"
            ]
        ]
    },
    {
        "id": "075f0c2ed51734e8",
        "type": "rpi-gpio in",
        "z": "0c0115bc4671b250",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 130,
        "y": 880,
        "wires": [
            [
                "4e987a4c5b855180"
            ]
        ]
    },
    {
        "id": "6fb2b88f6ffd2b4d",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 890,
        "y": 820,
        "wires": [
            [
                "9fb44a86d4b94735"
            ],
            [
                "357f913382488c3b"
            ],
            [
                "69edd8825a3e4106"
            ],
            [
                "a82f5d2a1ed6e296"
            ],
            [
                "f5c1669316eb4f3c"
            ]
        ]
    },
    {
        "id": "19470f660b708698",
        "type": "inject",
        "z": "0c0115bc4671b250",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 110,
        "y": 820,
        "wires": [
            [
                "4e987a4c5b855180"
            ]
        ]
    },
    {
        "id": "9959baec604b5c8e",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 1060,
        "wires": [
            [
                "18d498e9b3ec3b42"
            ]
        ]
    },
    {
        "id": "d53153f9e62901df",
        "type": "trigger",
        "z": "0c0115bc4671b250",
        "name": "Limit update frequency",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "100",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 640,
        "y": 820,
        "wires": [
            [
                "6fb2b88f6ffd2b4d",
                "4b989b57febbac97"
            ]
        ]
    },
    {
        "id": "c7e65ed640df392f",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Bottom Text",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 3,\n    \"y\": 56,\n    \"text\": \"Press USER to cont...\"\n}",
        "output": "json",
        "x": 530,
        "y": 660,
        "wires": [
            [
                "6aeb15955ee4fc8c"
            ]
        ]
    },
    {
        "id": "81944d72cd090729",
        "type": "Line",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 710,
        "y": 620,
        "wires": []
    },
    {
        "id": "b3f43df9573a4a6f",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 128,\n    \"y0\": 52,\n    \"y1\": 52,\n    \"color\": 1\n}",
        "output": "json",
        "x": 500,
        "y": 620,
        "wires": [
            [
                "81944d72cd090729",
                "d0713ae69f90506c"
            ]
        ]
    },
    {
        "id": "cb1dbc5d2eeedf0f",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Instruction 1-1",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 15,\n    \"text\": \"1. Connect to WiFi AP\"\n}",
        "output": "json",
        "x": 1380,
        "y": 540,
        "wires": [
            [
                "6191dea4b1b27e15",
                "1202b70a2767889c"
            ]
        ]
    },
    {
        "id": "d4e5f943976b14d3",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Instruction 1-2",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 30,\n    \"text\": \"   SSID: iriv\"\n}",
        "output": "json",
        "x": 1380,
        "y": 580,
        "wires": [
            [
                "27aa430dcdda2421",
                "1202b70a2767889c"
            ]
        ]
    },
    {
        "id": "a841b06a4c3ad93c",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Instruction 1-3",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 40,\n    \"text\": \"   Password: iriv1234\"\n}",
        "output": "json",
        "x": 1380,
        "y": 620,
        "wires": [
            [
                "1202b70a2767889c"
            ]
        ]
    },
    {
        "id": "f1b47bf502691f2a",
        "type": "String",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 560,
        "wires": []
    },
    {
        "id": "b39c70f596f7b18f",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show instruction title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"ACCESS DASHBOARD:\"\n}",
        "output": "json",
        "x": 1380,
        "y": 460,
        "wires": [
            [
                "3bd9c907a4cd836d",
                "1202b70a2767889c"
            ]
        ]
    },
    {
        "id": "6aeb15955ee4fc8c",
        "type": "String",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 710,
        "y": 660,
        "wires": []
    },
    {
        "id": "de5412012a3f80d7",
        "type": "FillRectangle",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 890,
        "y": 920,
        "wires": []
    },
    {
        "id": "4b989b57febbac97",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Clear but retain bottom message",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"w\": 128,\n    \"h\": 49,\n    \"color\": 0\n}",
        "output": "json",
        "x": 670,
        "y": 920,
        "wires": [
            [
                "de5412012a3f80d7"
            ]
        ]
    },
    {
        "id": "0d2eef3552e0ab6e",
        "type": "inject",
        "z": "0c0115bc4671b250",
        "name": "Run once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "b3f43df9573a4a6f"
            ]
        ]
    },
    {
        "id": "39f6f61adbc16a31",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Instruction 2-2",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 33,\n    \"text\": \"   iriv.local:1880/ui\"\n}",
        "output": "json",
        "x": 1380,
        "y": 820,
        "wires": [
            [
                "750dc8d779c515a5"
            ]
        ]
    },
    {
        "id": "56b3f0c74264c6dd",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Instruction 2-1",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 18,\n    \"text\": \"2. Open this url:\"\n}",
        "output": "json",
        "x": 1380,
        "y": 780,
        "wires": [
            [
                "dd7652882c7dea70",
                "750dc8d779c515a5"
            ]
        ]
    },
    {
        "id": "867036496c60c972",
        "type": "String",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 780,
        "wires": []
    },
    {
        "id": "fc96d6867e6d0b15",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show instruction title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"ACCESS DASHBOARD:\"\n}",
        "output": "json",
        "x": 1380,
        "y": 700,
        "wires": [
            [
                "37b1d3cac9088cae",
                "750dc8d779c515a5"
            ]
        ]
    },
    {
        "id": "2d839b7cab41eb8f",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show IRIV PiControl",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"size\": 2,\n    \"text\": \"IRIV PiCtrl\"\n}",
        "output": "json",
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "16e312f3b2a9f206",
                "d6196466a4663f58"
            ]
        ]
    },
    {
        "id": "6560a4c08f089fee",
        "type": "String",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 320,
        "wires": []
    },
    {
        "id": "1b9c1d7c8cb900d3",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Model",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 2,\n    \"y\": 28,\n    \"size\": 2,\n    \"text\": \"{{global.IsWireless}}R{{global.TotalRam}}E{{global.TotalDisk}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 320,
        "wires": [
            [
                "16e312f3b2a9f206",
                "fe4cf2b19f51df42"
            ]
        ]
    },
    {
        "id": "e866749c8122a585",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show IP title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"IP ADDRESSES:\"\n}",
        "output": "json",
        "x": 1350,
        "y": 900,
        "wires": [
            [
                "18f5250e00599018",
                "54fe919cca48db96"
            ]
        ]
    },
    {
        "id": "ff3f298c1379e4ce",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show eth0",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 15,\n    \"text\": \"eth0: {{global.IpEth0}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 980,
        "wires": [
            [
                "f0f33585b50484a7",
                "54fe919cca48db96"
            ]
        ]
    },
    {
        "id": "efaf1640fc6ae690",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show eth1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 27,\n    \"text\": \"eth1: {{global.IpEth1}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1020,
        "wires": [
            [
                "ecf5ef6e5d6458b5",
                "54fe919cca48db96"
            ]
        ]
    },
    {
        "id": "d4ad3405b20d6f64",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show wlan0",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 39,\n    \"text\": \"wlan0: {{global.IpWlan0}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1060,
        "wires": [
            [
                "9959baec604b5c8e",
                "54fe919cca48db96"
            ]
        ]
    },
    {
        "id": "ea59a48768543e02",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Status title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"CM4 STATUS:\"\n}",
        "output": "json",
        "x": 1370,
        "y": 1140,
        "wires": [
            [
                "aa0b705da700c69b",
                "885a0f95860c2a5e"
            ]
        ]
    },
    {
        "id": "1434cba47aac119b",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Load & Temp",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 15,\n    \"text\": \"Load: {{global.CpuLoad}} Temp: {{global.CpuTemp}}\"\n}",
        "output": "json",
        "x": 1370,
        "y": 1220,
        "wires": [
            [
                "aa0b705da700c69b",
                "af647e65794d91c0"
            ]
        ]
    },
    {
        "id": "02a64c22abd4613c",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show RAM",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 27,\n    \"text\": \"RAM:  {{{global.Ram}}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1260,
        "wires": [
            [
                "aa0b705da700c69b",
                "57a5253164e5d44d"
            ]
        ]
    },
    {
        "id": "6341132ef451f3f5",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Disk",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 39,\n    \"text\": \"Disk: {{{global.Disk}}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1300,
        "wires": [
            [
                "e3d78c2f0d8e0659",
                "aa0b705da700c69b"
            ]
        ]
    },
    {
        "id": "efaae526220dc743",
        "type": "String",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 1240,
        "wires": []
    },
    {
        "id": "ebfb5969eb519faf",
        "type": "Line",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 500,
        "wires": []
    },
    {
        "id": "c7210fe7885e19ae",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 100,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 500,
        "wires": [
            [
                "057c1d6b2fdbe3fe",
                "a7c6a8b5042fde1c"
            ]
        ]
    },
    {
        "id": "08b838f4092c4baf",
        "type": "Line",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 740,
        "wires": []
    },
    {
        "id": "1396d5c078fd1ee9",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 100,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 740,
        "wires": [
            [
                "e8bcf508aecd323a",
                "a0c11072dfcb4c54"
            ]
        ]
    },
    {
        "id": "42d4dcd4038a244b",
        "type": "Line",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 940,
        "wires": []
    },
    {
        "id": "a733568e4a399e06",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 77,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 940,
        "wires": [
            [
                "f0e926fec5633863",
                "e61b0581b42209b2"
            ]
        ]
    },
    {
        "id": "f59409f5d50b2384",
        "type": "Line",
        "z": "0c0115bc4671b250",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 1180,
        "wires": []
    },
    {
        "id": "22f73fe41417379a",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 65,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 1180,
        "wires": [
            [
                "3a2cb29398bf25c0",
                "cf26c262e35901f7"
            ]
        ]
    },
    {
        "id": "057c1d6b2fdbe3fe",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 540,
        "wires": [
            [
                "cb1dbc5d2eeedf0f"
            ]
        ]
    },
    {
        "id": "6191dea4b1b27e15",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 580,
        "wires": [
            [
                "d4e5f943976b14d3"
            ]
        ]
    },
    {
        "id": "27aa430dcdda2421",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 620,
        "wires": [
            [
                "a841b06a4c3ad93c"
            ]
        ]
    },
    {
        "id": "3bd9c907a4cd836d",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 500,
        "wires": [
            [
                "c7210fe7885e19ae"
            ]
        ]
    },
    {
        "id": "357f913382488c3b",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 460,
        "wires": [
            [
                "b39c70f596f7b18f"
            ]
        ]
    },
    {
        "id": "9fb44a86d4b94735",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 240,
        "wires": [
            [
                "2d839b7cab41eb8f"
            ]
        ]
    },
    {
        "id": "db196b9132896ce8",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 320,
        "wires": [
            [
                "1b9c1d7c8cb900d3"
            ]
        ]
    },
    {
        "id": "69edd8825a3e4106",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 700,
        "wires": [
            [
                "fc96d6867e6d0b15"
            ]
        ]
    },
    {
        "id": "37b1d3cac9088cae",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 740,
        "wires": [
            [
                "1396d5c078fd1ee9"
            ]
        ]
    },
    {
        "id": "e8bcf508aecd323a",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 780,
        "wires": [
            [
                "56b3f0c74264c6dd"
            ]
        ]
    },
    {
        "id": "dd7652882c7dea70",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 820,
        "wires": [
            [
                "39f6f61adbc16a31"
            ]
        ]
    },
    {
        "id": "a82f5d2a1ed6e296",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 900,
        "wires": [
            [
                "e866749c8122a585"
            ]
        ]
    },
    {
        "id": "18f5250e00599018",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 940,
        "wires": [
            [
                "a733568e4a399e06"
            ]
        ]
    },
    {
        "id": "f0e926fec5633863",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 980,
        "wires": [
            [
                "ff3f298c1379e4ce"
            ]
        ]
    },
    {
        "id": "f0f33585b50484a7",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1020,
        "wires": [
            [
                "efaf1640fc6ae690"
            ]
        ]
    },
    {
        "id": "ecf5ef6e5d6458b5",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1060,
        "wires": [
            [
                "d4ad3405b20d6f64"
            ]
        ]
    },
    {
        "id": "f5c1669316eb4f3c",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1140,
        "wires": [
            [
                "ea59a48768543e02"
            ]
        ]
    },
    {
        "id": "885a0f95860c2a5e",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1180,
        "wires": [
            [
                "22f73fe41417379a"
            ]
        ]
    },
    {
        "id": "cf26c262e35901f7",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1220,
        "wires": [
            [
                "1434cba47aac119b"
            ]
        ]
    },
    {
        "id": "af647e65794d91c0",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1260,
        "wires": [
            [
                "02a64c22abd4613c"
            ]
        ]
    },
    {
        "id": "57a5253164e5d44d",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1300,
        "wires": [
            [
                "6341132ef451f3f5"
            ]
        ]
    },
    {
        "id": "e3d78c2f0d8e0659",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 1300,
        "wires": [
            [
                "b547663762b4e853"
            ]
        ]
    },
    {
        "id": "16e312f3b2a9f206",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 320,
        "wires": [
            [
                "6560a4c08f089fee"
            ]
        ]
    },
    {
        "id": "a7c6a8b5042fde1c",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 500,
        "wires": [
            [
                "ebfb5969eb519faf"
            ]
        ]
    },
    {
        "id": "1202b70a2767889c",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 560,
        "wires": [
            [
                "f1b47bf502691f2a"
            ]
        ]
    },
    {
        "id": "a0c11072dfcb4c54",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 740,
        "wires": [
            [
                "08b838f4092c4baf"
            ]
        ]
    },
    {
        "id": "750dc8d779c515a5",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 780,
        "wires": [
            [
                "867036496c60c972"
            ]
        ]
    },
    {
        "id": "e61b0581b42209b2",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 940,
        "wires": [
            [
                "42d4dcd4038a244b"
            ]
        ]
    },
    {
        "id": "54fe919cca48db96",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 1000,
        "wires": [
            [
                "189320a6d1b02c9f"
            ]
        ]
    },
    {
        "id": "3a2cb29398bf25c0",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 1180,
        "wires": [
            [
                "f59409f5d50b2384"
            ]
        ]
    },
    {
        "id": "aa0b705da700c69b",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 1240,
        "wires": [
            [
                "efaae526220dc743"
            ]
        ]
    },
    {
        "id": "18d498e9b3ec3b42",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1060,
        "wires": [
            [
                "f0e926fec5633863"
            ]
        ]
    },
    {
        "id": "b547663762b4e853",
        "type": "switch",
        "z": "0c0115bc4671b250",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1300,
        "wires": [
            [
                "cf26c262e35901f7"
            ]
        ]
    },
    {
        "id": "fababa9b99ce33c3",
        "type": "comment",
        "z": "0c0115bc4671b250",
        "name": "Show the main message depending on state machine",
        "info": "",
        "x": 260,
        "y": 760,
        "wires": []
    },
    {
        "id": "d0713ae69f90506c",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 350,
        "y": 660,
        "wires": [
            [
                "c7e65ed640df392f"
            ]
        ]
    },
    {
        "id": "ddb61469ffaa34a6",
        "type": "comment",
        "z": "0c0115bc4671b250",
        "name": "Sate = -1 means shutting down",
        "info": "",
        "x": 410,
        "y": 860,
        "wires": []
    },
    {
        "id": "79ab1f4fa6a096ee",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Revision",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 78,\n    \"y\": 20,\n    \"size\": 1,\n    \"text\": \"{{global.Revision}}\"\n}",
        "output": "json",
        "x": 1360,
        "y": 280,
        "wires": [
            [
                "16e312f3b2a9f206",
                "db196b9132896ce8"
            ]
        ]
    },
    {
        "id": "d6196466a4663f58",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 280,
        "wires": [
            [
                "79ab1f4fa6a096ee"
            ]
        ]
    },
    {
        "id": "212b0e9f69c88616",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show Codename",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 78,\n    \"y\": 30,\n    \"size\": 1,\n    \"text\": \"{{global.Codename}}\"\n}",
        "output": "json",
        "x": 1370,
        "y": 360,
        "wires": [
            [
                "16e312f3b2a9f206",
                "0106f297e38ad0f5"
            ]
        ]
    },
    {
        "id": "fe4cf2b19f51df42",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 360,
        "wires": [
            [
                "212b0e9f69c88616"
            ]
        ]
    },
    {
        "id": "735c9c7cc4a0be9a",
        "type": "template",
        "z": "0c0115bc4671b250",
        "name": "Show OS Bit",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 78,\n    \"y\": 40,\n    \"size\": 1,\n    \"text\": \"{{global.OSBit}}-bit\"\n}",
        "output": "json",
        "x": 1350,
        "y": 400,
        "wires": [
            [
                "16e312f3b2a9f206"
            ]
        ]
    },
    {
        "id": "0106f297e38ad0f5",
        "type": "delay",
        "z": "0c0115bc4671b250",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 400,
        "wires": [
            [
                "735c9c7cc4a0be9a"
            ]
        ]
    },
    {
        "id": "2c2bc3e1b026627a",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "LED0",
        "tooltip": "",
        "group": "bd6b23c8adfb60a1",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "6d80af4457ecb9f3"
            ]
        ]
    },
    {
        "id": "6d80af4457ecb9f3",
        "type": "rpi-gpio out",
        "z": "6a87c8b09ede113d",
        "name": "LED0 Output",
        "pin": "20",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "01038171c60f8f14",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "LED1",
        "tooltip": "",
        "group": "bd6b23c8adfb60a1",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "e4bbbe60b424c659"
            ]
        ]
    },
    {
        "id": "e4bbbe60b424c659",
        "type": "rpi-gpio out",
        "z": "6a87c8b09ede113d",
        "name": "LED1 Output",
        "pin": "21",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 610,
        "y": 200,
        "wires": []
    },
    {
        "id": "ce72b0c4362aec8a",
        "type": "ui_button",
        "z": "6a87c8b09ede113d",
        "name": "",
        "group": "bd6b23c8adfb60a1",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Buzzer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "volume_up",
        "payload": "True",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "fda5aed5e91075b9"
            ]
        ]
    },
    {
        "id": "fda5aed5e91075b9",
        "type": "trigger",
        "z": "6a87c8b09ede113d",
        "name": "On for 250ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 620,
        "y": 260,
        "wires": [
            [
                "6dec2559fad09598"
            ]
        ]
    },
    {
        "id": "6dec2559fad09598",
        "type": "rpi-gpio out",
        "z": "6a87c8b09ede113d",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 260,
        "wires": []
    },
    {
        "id": "f5849627ec950317",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "Button",
        "tooltip": "",
        "group": "bd6b23c8adfb60a1",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 810,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "8e1960e3425e0851",
        "type": "rpi-gpio in",
        "z": "6a87c8b09ede113d",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "c442bbed1fb199e2"
            ]
        ]
    },
    {
        "id": "c442bbed1fb199e2",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Invert",
        "func": "if (msg.payload == 0) {\n    msg.payload = true;\n} else {\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 320,
        "wires": [
            [
                "f5849627ec950317"
            ]
        ]
    },
    {
        "id": "da595643a0f707a6",
        "type": "ui_button",
        "z": "6a87c8b09ede113d",
        "name": "",
        "group": "26ffda61bed9f1d3",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "#ff0000",
        "className": "",
        "icon": "power_settings_new",
        "payload": "True",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 2000,
        "wires": [
            [
                "9170774726bb50da"
            ]
        ]
    },
    {
        "id": "5fd90e9272f35d9e",
        "type": "ui_button",
        "z": "6a87c8b09ede113d",
        "name": "",
        "group": "26ffda61bed9f1d3",
        "order": 10,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FFC107",
        "className": "",
        "icon": "refresh",
        "payload": "True",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 2060,
        "wires": [
            [
                "9678623fbf7b9a83"
            ]
        ]
    },
    {
        "id": "15e402f78862f683",
        "type": "comment",
        "z": "6a87c8b09ede113d",
        "name": "System",
        "info": "",
        "x": 390,
        "y": 1340,
        "wires": []
    },
    {
        "id": "5200f1ac832c4c05",
        "type": "comment",
        "z": "6a87c8b09ede113d",
        "name": "Button, LEDs & Buzzer",
        "info": "",
        "x": 440,
        "y": 100,
        "wires": []
    },
    {
        "id": "58ddd8daf3d09537",
        "type": "comment",
        "z": "6a87c8b09ede113d",
        "name": "Digital Inputs",
        "info": "",
        "x": 410,
        "y": 460,
        "wires": []
    },
    {
        "id": "c18266134d3214c2",
        "type": "rpi-gpio in",
        "z": "6a87c8b09ede113d",
        "name": "DI0",
        "pin": "13",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 500,
        "wires": [
            [
                "55af4684851f4144"
            ]
        ]
    },
    {
        "id": "3da1ca3724e3d8e6",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "DI0",
        "tooltip": "",
        "group": "b4ae35e20516b546",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "55af4684851f4144",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 500,
        "wires": [
            [
                "3da1ca3724e3d8e6"
            ]
        ]
    },
    {
        "id": "edec8fbf8edebe15",
        "type": "rpi-gpio in",
        "z": "6a87c8b09ede113d",
        "name": "DI1",
        "pin": "17",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 560,
        "wires": [
            [
                "aece712fdcc53841"
            ]
        ]
    },
    {
        "id": "fde1aac0c4b7f504",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "DI1",
        "tooltip": "",
        "group": "b4ae35e20516b546",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "aece712fdcc53841",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 560,
        "wires": [
            [
                "fde1aac0c4b7f504"
            ]
        ]
    },
    {
        "id": "444136d92ee6ce66",
        "type": "rpi-gpio in",
        "z": "6a87c8b09ede113d",
        "name": "DI2",
        "pin": "22",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 620,
        "wires": [
            [
                "5c4cfa90cb8a478d"
            ]
        ]
    },
    {
        "id": "fd108c8f2d0f7f88",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "DI2",
        "tooltip": "",
        "group": "b4ae35e20516b546",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "5c4cfa90cb8a478d",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 620,
        "wires": [
            [
                "fd108c8f2d0f7f88"
            ]
        ]
    },
    {
        "id": "3f821765334cb9a9",
        "type": "rpi-gpio in",
        "z": "6a87c8b09ede113d",
        "name": "DI3",
        "pin": "27",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 680,
        "wires": [
            [
                "ec45d4c0361da069"
            ]
        ]
    },
    {
        "id": "49389ba9ce0e8307",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "DI3",
        "tooltip": "",
        "group": "b4ae35e20516b546",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "ec45d4c0361da069",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 680,
        "wires": [
            [
                "49389ba9ce0e8307"
            ]
        ]
    },
    {
        "id": "5692e5207fecbd92",
        "type": "comment",
        "z": "6a87c8b09ede113d",
        "name": "Digital Outputs",
        "info": "",
        "x": 420,
        "y": 780,
        "wires": []
    },
    {
        "id": "38ead85b93f315c6",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "DO0",
        "tooltip": "",
        "group": "0d2d6a857848f659",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 820,
        "wires": [
            [
                "5e54c1929b2a2a15"
            ]
        ]
    },
    {
        "id": "5e54c1929b2a2a15",
        "type": "rpi-gpio out",
        "z": "6a87c8b09ede113d",
        "name": "DO0 Output",
        "pin": "23",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 820,
        "wires": []
    },
    {
        "id": "3f26675cb38a9a69",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "DO1",
        "tooltip": "",
        "group": "0d2d6a857848f659",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 880,
        "wires": [
            [
                "2cfaf4863d9cc6d5"
            ]
        ]
    },
    {
        "id": "2cfaf4863d9cc6d5",
        "type": "rpi-gpio out",
        "z": "6a87c8b09ede113d",
        "name": "DO1 Output",
        "pin": "24",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 880,
        "wires": []
    },
    {
        "id": "572ff469e0632a0e",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "DO2",
        "tooltip": "",
        "group": "0d2d6a857848f659",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 940,
        "wires": [
            [
                "f1950596683ab212"
            ]
        ]
    },
    {
        "id": "f1950596683ab212",
        "type": "rpi-gpio out",
        "z": "6a87c8b09ede113d",
        "name": "DO2 Output",
        "pin": "25",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 940,
        "wires": []
    },
    {
        "id": "eb94741ad06ddcdf",
        "type": "ui_switch",
        "z": "6a87c8b09ede113d",
        "name": "",
        "label": "DO3",
        "tooltip": "",
        "group": "0d2d6a857848f659",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 1000,
        "wires": [
            [
                "0ee85d173a6bd91b"
            ]
        ]
    },
    {
        "id": "0ee85d173a6bd91b",
        "type": "rpi-gpio out",
        "z": "6a87c8b09ede113d",
        "name": "DO3 Output",
        "pin": "26",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 1000,
        "wires": []
    },
    {
        "id": "bdaecc6cf1bd7171",
        "type": "ui_text",
        "z": "6a87c8b09ede113d",
        "group": "bd6b23c8adfb60a1",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Button Message",
        "label": "Press user button for 5 seconds to shutdown IRIV PiControl.",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 420,
        "y": 380,
        "wires": []
    },
    {
        "id": "fa3212a122a74277",
        "type": "comment",
        "z": "6a87c8b09ede113d",
        "name": "Analog Inputs",
        "info": "",
        "x": 410,
        "y": 1080,
        "wires": []
    },
    {
        "id": "dc80f83445881cae",
        "type": "ui_gauge",
        "z": "6a87c8b09ede113d",
        "name": "",
        "group": "d756c1d8b7796646",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN0",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1100,
        "wires": []
    },
    {
        "id": "bf1d4a2b88ede964",
        "type": "ui_gauge",
        "z": "6a87c8b09ede113d",
        "name": "",
        "group": "d756c1d8b7796646",
        "order": 5,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN1",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1160,
        "wires": []
    },
    {
        "id": "22870d90f55d78bf",
        "type": "ui_gauge",
        "z": "6a87c8b09ede113d",
        "name": "",
        "group": "d756c1d8b7796646",
        "order": 3,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN2",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1220,
        "wires": []
    },
    {
        "id": "ceaa8bf973e67e85",
        "type": "ui_gauge",
        "z": "6a87c8b09ede113d",
        "name": "",
        "group": "d756c1d8b7796646",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN3",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1280,
        "wires": []
    },
    {
        "id": "356a6e19f9c0fc48",
        "type": "inject",
        "z": "6a87c8b09ede113d",
        "name": "Every 500ms",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 1120,
        "wires": [
            [
                "060b20672f830662"
            ]
        ]
    },
    {
        "id": "1437d83f354d7816",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Scale Voltage",
        "func": "var msg0 = { payload: msg.payload.length };\nvar msg1 = { payload: msg.payload.length };\nvar msg2 = { payload: msg.payload.length };\nvar msg3 = { payload: msg.payload.length };\n\n\nmsg0.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_0.Volts * 2.5;\nif (msg0.payload < 0) {\n    msg0.payload = 0;\n}\n\nmsg1.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_1.Volts * 2.5;\nif (msg1.payload < 0) {\n    msg1.payload = 0;\n}\n\nmsg2.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_2.Volts * 2.5;\nif (msg2.payload < 0) {\n    msg2.payload = 0;\n}\n\nmsg3.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_3.Volts * 2.5;\nif (msg3.payload < 0) {\n    msg3.payload = 0;\n}\n\nreturn [msg0, msg1, msg2, msg3];",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1120,
        "wires": [
            [
                "dc80f83445881cae"
            ],
            [
                "bf1d4a2b88ede964"
            ],
            [
                "22870d90f55d78bf"
            ],
            [
                "ceaa8bf973e67e85"
            ]
        ]
    },
    {
        "id": "060b20672f830662",
        "type": "ads1x15_i2c",
        "z": "6a87c8b09ede113d",
        "property": "payload",
        "name": "",
        "i2c_device_number": 1,
        "chip": "0x01",
        "i2c_address": "0x48",
        "inputsForChannel": "singleEnded",
        "singleEndedChannel0": true,
        "singleEndedChannel1": true,
        "singleEndedChannel2": true,
        "singleEndedChannel3": true,
        "differentialChannel0_1": true,
        "differentialChannel0_3": false,
        "differentialChannel1_3": false,
        "differentialChannel2_3": true,
        "samplesPerSecond0": "920",
        "samplesPerSecond1": "128",
        "progGainAmp": "4096",
        "x": 610,
        "y": 1120,
        "wires": [
            [
                "1437d83f354d7816"
            ]
        ]
    },
    {
        "id": "ee6608bd06937fd7",
        "type": "ui_text",
        "z": "6a87c8b09ede113d",
        "group": "26ffda61bed9f1d3",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "eth0",
        "label": "eth0 IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1580,
        "wires": []
    },
    {
        "id": "b315089dac848638",
        "type": "inject",
        "z": "6a87c8b09ede113d",
        "name": "Every 2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 1580,
        "wires": [
            [
                "d730cac8d4611973",
                "379c05904113be13",
                "1ddf61c3400249b0",
                "ee5a86ed7aa03eb0",
                "1248039447910333",
                "ae16c31eeb8e0616",
                "747cf856627d27a4"
            ]
        ]
    },
    {
        "id": "d730cac8d4611973",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Get global variable IpEth0",
        "func": "msg.payload = global.get('IpEth0');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1580,
        "wires": [
            [
                "ee6608bd06937fd7"
            ]
        ]
    },
    {
        "id": "fe181f171e9aead6",
        "type": "ui_text",
        "z": "6a87c8b09ede113d",
        "group": "26ffda61bed9f1d3",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "eth1",
        "label": "eth1 IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1620,
        "wires": []
    },
    {
        "id": "379c05904113be13",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Get global variable IpEth1",
        "func": "msg.payload = global.get('IpEth1');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1620,
        "wires": [
            [
                "fe181f171e9aead6"
            ]
        ]
    },
    {
        "id": "f7bdcf6c05e1f654",
        "type": "ui_text",
        "z": "6a87c8b09ede113d",
        "group": "26ffda61bed9f1d3",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "wlan0",
        "label": "wlan0 IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1660,
        "wires": []
    },
    {
        "id": "1ddf61c3400249b0",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Get global variable IpWlan0",
        "func": "msg.payload = global.get('IpWlan0');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1660,
        "wires": [
            [
                "f7bdcf6c05e1f654"
            ]
        ]
    },
    {
        "id": "cf8f7ac5166cfaab",
        "type": "ui_text",
        "z": "6a87c8b09ede113d",
        "group": "26ffda61bed9f1d3",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "CPU Load",
        "label": "CPU Load:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1740,
        "wires": []
    },
    {
        "id": "ee5a86ed7aa03eb0",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Get global variable CpuLoad",
        "func": "msg.payload = global.get('CpuLoad');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1740,
        "wires": [
            [
                "cf8f7ac5166cfaab"
            ]
        ]
    },
    {
        "id": "f2a912d3cbf293a8",
        "type": "ui_text",
        "z": "6a87c8b09ede113d",
        "group": "26ffda61bed9f1d3",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "CPU Temp",
        "label": "CPU Temp:",
        "format": "{{msg.payload}} C",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1800,
        "wires": []
    },
    {
        "id": "1248039447910333",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Get global variable CpuTemp",
        "func": "msg.payload = global.get('CpuTemp');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1800,
        "wires": [
            [
                "f2a912d3cbf293a8"
            ]
        ]
    },
    {
        "id": "473d9eb8f43982cf",
        "type": "ui_text",
        "z": "6a87c8b09ede113d",
        "group": "26ffda61bed9f1d3",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Ram",
        "label": "RAM:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1860,
        "wires": []
    },
    {
        "id": "ae16c31eeb8e0616",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Get global variable Ram",
        "func": "msg.payload = global.get('Ram');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1860,
        "wires": [
            [
                "473d9eb8f43982cf"
            ]
        ]
    },
    {
        "id": "b34ca545a14d7777",
        "type": "ui_text",
        "z": "6a87c8b09ede113d",
        "group": "26ffda61bed9f1d3",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Disk",
        "label": "Disk:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1920,
        "wires": []
    },
    {
        "id": "747cf856627d27a4",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Get global variable Disk",
        "func": "msg.payload = global.get('Disk');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1920,
        "wires": [
            [
                "b34ca545a14d7777"
            ]
        ]
    },
    {
        "id": "9170774726bb50da",
        "type": "link out",
        "z": "6a87c8b09ede113d",
        "name": "Shutdown",
        "mode": "link",
        "links": [
            "3b892eb73f81ecdc"
        ],
        "x": 565,
        "y": 2000,
        "wires": []
    },
    {
        "id": "9678623fbf7b9a83",
        "type": "link out",
        "z": "6a87c8b09ede113d",
        "name": "Reboot",
        "mode": "link",
        "links": [
            "8bfd10d0b8ebcb3b"
        ],
        "x": 565,
        "y": 2060,
        "wires": []
    },
    {
        "id": "eb7cb84fca645530",
        "type": "ui_text",
        "z": "6a87c8b09ede113d",
        "group": "26ffda61bed9f1d3",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "OS",
        "label": "OS:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 930,
        "y": 1400,
        "wires": []
    },
    {
        "id": "b52f191b90a9bf39",
        "type": "inject",
        "z": "6a87c8b09ede113d",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 1400,
        "wires": [
            [
                "c4d3547f2ad1d1cc",
                "0d50a6ee80c1fbe2"
            ]
        ]
    },
    {
        "id": "c4d3547f2ad1d1cc",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Get global variable Codename & OSBit",
        "func": "msg.payload = global.get('Codename') + \" \" + global.get('OSBit') + \"-bit\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "eb7cb84fca645530"
            ]
        ]
    },
    {
        "id": "ec5c179aec790f4d",
        "type": "ui_text",
        "z": "6a87c8b09ede113d",
        "group": "26ffda61bed9f1d3",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Revision",
        "label": "Dashboard Revision:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 1440,
        "wires": []
    },
    {
        "id": "0d50a6ee80c1fbe2",
        "type": "function",
        "z": "6a87c8b09ede113d",
        "name": "Get global variable Revision",
        "func": "msg.payload = global.get('Revision');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1440,
        "wires": [
            [
                "ec5c179aec790f4d"
            ]
        ]
    },
    {
        "id": "b3345c6c372343b8",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "VL1-2",
        "unitId": "1",
        "data": "voltage-L1L2",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "c872f62515e2fa61"
            ]
        ]
    },
    {
        "id": "c872f62515e2fa61",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "d8ca977716f0d65e"
            ],
            []
        ]
    },
    {
        "id": "a4424b2f7a4d3858",
        "type": "inject",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "b3345c6c372343b8",
                "11287deca906d7e2",
                "cc52477c3f8a4293",
                "21870583fc446b5e",
                "92e9671beefb126f",
                "1e86a57d48a4659c",
                "e1297e1ba93dc39a",
                "233f8803f73c671d",
                "c48242e8a22a0765",
                "29a5db689febf4a1",
                "25440e941f3ffef6",
                "83dc946fcf09fc0b"
            ]
        ]
    },
    {
        "id": "d8ca977716f0d65e",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 120,
        "wires": [
            [
                "04f965aee44102e8"
            ]
        ]
    },
    {
        "id": "04f965aee44102e8",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "63f7b458db6aa481"
            ]
        ]
    },
    {
        "id": "11287deca906d7e2",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "VL2-3",
        "unitId": "1",
        "data": "voltage-L2L3",
        "x": 370,
        "y": 180,
        "wires": [
            [
                "f18b2f3b650dcf57"
            ]
        ]
    },
    {
        "id": "f18b2f3b650dcf57",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "5c8f0fd04156e073"
            ],
            []
        ]
    },
    {
        "id": "5c8f0fd04156e073",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 180,
        "wires": [
            [
                "a95bfcfbf5923b5d"
            ]
        ]
    },
    {
        "id": "a95bfcfbf5923b5d",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 180,
        "wires": [
            [
                "b225874458f59f29"
            ]
        ]
    },
    {
        "id": "cc52477c3f8a4293",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "VL3-1",
        "unitId": "1",
        "data": "voltage-L3L1",
        "x": 370,
        "y": 240,
        "wires": [
            [
                "8c3b615cece66080"
            ]
        ]
    },
    {
        "id": "8c3b615cece66080",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 240,
        "wires": [
            [
                "d9317a41f0627db2"
            ],
            []
        ]
    },
    {
        "id": "d9317a41f0627db2",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 240,
        "wires": [
            [
                "9767a95d4e342939"
            ]
        ]
    },
    {
        "id": "9767a95d4e342939",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 240,
        "wires": [
            [
                "368324c7f2965ca1"
            ]
        ]
    },
    {
        "id": "21870583fc446b5e",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "VL1-N",
        "unitId": "1",
        "data": "voltage-L1N",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "c7e22111ebec56bb"
            ]
        ]
    },
    {
        "id": "c7e22111ebec56bb",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 300,
        "wires": [
            [
                "1cdc60feddeb2356"
            ],
            []
        ]
    },
    {
        "id": "1cdc60feddeb2356",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 300,
        "wires": [
            [
                "9aac38e2c80c711f"
            ]
        ]
    },
    {
        "id": "9aac38e2c80c711f",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "92e9671beefb126f",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "VL2-N",
        "unitId": "1",
        "data": "voltage-L2N",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "8fdcd68e640ea59f"
            ]
        ]
    },
    {
        "id": "8fdcd68e640ea59f",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 360,
        "wires": [
            [
                "eb1f7347a949b1b5"
            ],
            []
        ]
    },
    {
        "id": "eb1f7347a949b1b5",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 360,
        "wires": [
            [
                "fa15b00c324c7ed8"
            ]
        ]
    },
    {
        "id": "fa15b00c324c7ed8",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1e86a57d48a4659c",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "VL3-N",
        "unitId": "1",
        "data": "voltage-L3N",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "538eea36fc3f891d"
            ]
        ]
    },
    {
        "id": "538eea36fc3f891d",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "20efe523022386a7"
            ],
            []
        ]
    },
    {
        "id": "20efe523022386a7",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 420,
        "wires": [
            [
                "495210731411d79d"
            ]
        ]
    },
    {
        "id": "495210731411d79d",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e1297e1ba93dc39a",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "Total Active Power",
        "unitId": "1",
        "data": "actPowerTot",
        "x": 410,
        "y": 660,
        "wires": [
            [
                "08ecd82b8116ed72"
            ]
        ]
    },
    {
        "id": "08ecd82b8116ed72",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 660,
        "wires": [
            [
                "76e07cf17f376011"
            ],
            []
        ]
    },
    {
        "id": "76e07cf17f376011",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 660,
        "wires": [
            [
                "89fde2d32764839c"
            ]
        ]
    },
    {
        "id": "89fde2d32764839c",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 660,
        "wires": [
            [
                "879ecd922275f2c2"
            ]
        ]
    },
    {
        "id": "233f8803f73c671d",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "I1",
        "unitId": "1",
        "data": "current-P1",
        "x": 370,
        "y": 480,
        "wires": [
            [
                "3906dfc674f5c61a"
            ]
        ]
    },
    {
        "id": "3906dfc674f5c61a",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 480,
        "wires": [
            [
                "73d02c6fed95bf41"
            ],
            []
        ]
    },
    {
        "id": "73d02c6fed95bf41",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 480,
        "wires": [
            [
                "fafa9753ab1cb41f"
            ]
        ]
    },
    {
        "id": "fafa9753ab1cb41f",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 480,
        "wires": [
            [
                "bafafd30a0d0efd4"
            ]
        ]
    },
    {
        "id": "c48242e8a22a0765",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "I2",
        "unitId": "1",
        "data": "current-P2",
        "x": 370,
        "y": 540,
        "wires": [
            [
                "0c7cae5b85accb07"
            ]
        ]
    },
    {
        "id": "0c7cae5b85accb07",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 540,
        "wires": [
            [
                "fde9a564a2226de7"
            ],
            []
        ]
    },
    {
        "id": "fde9a564a2226de7",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 540,
        "wires": [
            [
                "6659ecf78ea873df"
            ]
        ]
    },
    {
        "id": "6659ecf78ea873df",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 540,
        "wires": [
            [
                "f351feb9b469dbad"
            ]
        ]
    },
    {
        "id": "29a5db689febf4a1",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "I3",
        "unitId": "1",
        "data": "current-P3",
        "x": 370,
        "y": 600,
        "wires": [
            [
                "9a2434e227545ca1"
            ]
        ]
    },
    {
        "id": "9a2434e227545ca1",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 600,
        "wires": [
            [
                "df8543a646c5ed59"
            ],
            []
        ]
    },
    {
        "id": "df8543a646c5ed59",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 600,
        "wires": [
            [
                "85e20d29e366cd46"
            ]
        ]
    },
    {
        "id": "85e20d29e366cd46",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 600,
        "wires": [
            [
                "e57576d6f51d9384"
            ]
        ]
    },
    {
        "id": "25440e941f3ffef6",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "Total PF",
        "unitId": "1",
        "data": "pFactorTot",
        "x": 380,
        "y": 720,
        "wires": [
            [
                "9c5fcfcbbee5cc9e"
            ]
        ]
    },
    {
        "id": "9c5fcfcbbee5cc9e",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 720,
        "wires": [
            [
                "3711191381471bcc"
            ],
            []
        ]
    },
    {
        "id": "3711191381471bcc",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 720,
        "wires": [
            [
                "58c39843cdb811a2"
            ]
        ]
    },
    {
        "id": "58c39843cdb811a2",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 720,
        "wires": [
            [
                "5f218be519130c08"
            ]
        ]
    },
    {
        "id": "83dc946fcf09fc0b",
        "type": "pm5000",
        "z": "73cffe3684dd5ef5",
        "name": "Consumption",
        "unitId": "1",
        "data": "toEnergyActImp",
        "x": 390,
        "y": 780,
        "wires": [
            [
                "f31b588931deeb89"
            ]
        ]
    },
    {
        "id": "f31b588931deeb89",
        "type": "modbus-flex-getter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "b28eadc30b131e7d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 780,
        "wires": [
            [
                "8c583a24eb1d623f"
            ],
            []
        ]
    },
    {
        "id": "8c583a24eb1d623f",
        "type": "converter",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 780,
        "wires": [
            [
                "837bbacc91e913ef"
            ]
        ]
    },
    {
        "id": "837bbacc91e913ef",
        "type": "buffer-parser",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "bigint64be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 780,
        "wires": [
            [
                "aea163d57d63e067"
            ]
        ]
    },
    {
        "id": "cc85574ffb8e3977",
        "type": "opcua-compact-server",
        "z": "73cffe3684dd5ef5",
        "port": "10502",
        "endpoint": "",
        "productUri": "",
        "acceptExternalCommands": true,
        "maxAllowedSessionNumber": "10",
        "maxConnectionsPerEndpoint": "10",
        "maxAllowedSubscriptionNumber": "100",
        "alternateHostname": "",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "allowAnonymous": true,
        "individualCerts": false,
        "isAuditing": false,
        "serverDiscovery": true,
        "users": [],
        "xmlsetsOPCUA": [],
        "publicCertificateFile": "",
        "privateCertificateFile": "",
        "registerServerMethod": "1",
        "discoveryServerEndpointUrl": "opc.tcp://localhost:10502",
        "capabilitiesForMDNS": "",
        "maxNodesPerRead": 1000,
        "maxNodesPerWrite": 1000,
        "maxNodesPerHistoryReadData": 100,
        "maxNodesPerBrowse": 3000,
        "maxBrowseContinuationPoints": "10",
        "maxHistoryContinuationPoints": "10",
        "delayToInit": "1000",
        "delayToClose": "200",
        "serverShutdownTimeout": "100",
        "addressSpaceScript": "function constructAlarmAddressSpace(server, addressSpace, eventObjects, done) {\n  // server = the created node-opcua server\n  // addressSpace = address space of the node-opcua server\n  // eventObjects = add event variables here to hold them in memory from this script\n\n  // internal sandbox objects are:\n  // node = the compact server node,\n  // coreServer = core compact server object for debug and access to NodeOPCUA\n  // this.sandboxNodeContext = node context node-red\n  // this.sandboxFlowContext = flow context node-red\n  // this.sandboxGlobalContext = global context node-red\n  // this.sandboxEnv = env variables\n  // timeout and interval functions as expected from nodejs\n\n  const opcua = coreServer.choreCompact.opcua;\n  const LocalizedText = opcua.LocalizedText;\n  const namespace = addressSpace.getOwnNamespace();\n\n  const Variant = opcua.Variant;\n  const DataType = opcua.DataType;\n  const DataValue = opcua.DataValue;\n\n  var flexServerInternals = this;\n\n  // this.sandboxFlowContext.set(\"ValuePower\", 0);\n  // this.setInterval(() => {\n  //   flexServerInternals.sandboxFlowContext.set(\n  //     \"ValuePower\",\n  //     Math.random() + 50.0\n  //   );\n  // }, 500);\n  // this.sandboxFlowContext.set(\"ValueC1\", 0);\n  // this.sandboxFlowContext.set(\"ValueC2\", 0);\n  // this.sandboxFlowContext.set(\"ValueC3\", 0);\n  // this.sandboxFlowContext.set(\"ValueV1\", 0);\n  // this.sandboxFlowContext.set(\"ValueV2\", 0);\n  // this.sandboxFlowContext.set(\"ValueV3\", 0);\n  // this.sandboxFlowContext.set(\"ValuePF\", 0);\n  // this.sandboxFlowContext.set(\"ValueConsumption\", 0);\n\n\n  // this.sandboxFlowContext.set(\"isoOutput1\", 0);\n  // this.setInterval(() => {\n  //   flexServerInternals.sandboxFlowContext.set(\n  //     \"isoOutput1\",\n  //     Math.random() + 10.0\n  //   );\n  // }, 500);\n\n  // this.sandboxFlowContext.set(\"isoOutput2\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput3\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput4\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput5\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput6\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput7\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput8\", 0);\n\n  coreServer.debugLog(\"init dynamic address space\");\n  const rootFolder = addressSpace.findNode(\"RootFolder\");\n\n  node.warn(\"construct new address space for OPC UA\");\n\n  const myDevice = namespace.addFolder(rootFolder.objects, {\n    \"browseName\": \"Edge Device\"\n  });\n  // const gpioFolder = namespace.addFolder(myDevice, { \"browseName\": \"GPIO\" });\n  const PowerMeterInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Power Meter\"\n  });\n  const DigitalInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Inputs\"\n  });\n  const DigitalOutputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Outputs\"\n  });\n  const DeviceStats = namespace.addFolder(myDevice, {\n    \"browseName\": \"Device Stats\"\n  });\n  const ValueHeartbeat = namespace.addVariable({\n    \"organizedBy\": DeviceStats,\n    \"browseName\": \"ValueHeartbeat\",\n    \"nodeId\": \"ns=1;s=ValueHeartbeat\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueHeartbeat\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueHeartbeat\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n  const ValuePower = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePower\",\n    \"nodeId\": \"ns=1;s=ValuePower\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePower\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePower\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC1\",\n    \"nodeId\": \"ns=1;s=ValueC1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC2\",\n    \"nodeId\": \"ns=1;s=ValueC2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC3\",\n    \"nodeId\": \"ns=1;s=ValueC3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV1\",\n    \"nodeId\": \"ns=1;s=ValueV1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV2\",\n    \"nodeId\": \"ns=1;s=ValueV2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV3\",\n    \"nodeId\": \"ns=1;s=ValueV3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValuePF = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePF\",\n    \"nodeId\": \"ns=1;s=ValuePF\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePF\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePF\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueConsumption = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueConsumption\",\n    \"nodeId\": \"ns=1;s=ValueConsumption\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueConsumption\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueConsumption\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI1 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI1\",\n    \"nodeId\": \"ns=1;s=DI1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI2 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI2\",\n    \"nodeId\": \"ns=1;s=DI2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI3 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI3\",\n    \"nodeId\": \"ns=1;s=DI3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI4 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI4\",\n    \"nodeId\": \"ns=1;s=DI4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI4\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n\n  const DO1 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO1\",\n    \"nodeId\": \"ns=1;s=DO1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO1\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO2 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO2\",\n    \"nodeId\": \"ns=1;s=DO2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO2\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO3 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO3\",\n    \"nodeId\": \"ns=1;s=DO3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO3\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO4 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO4\",\n    \"nodeId\": \"ns=1;s=DO4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO4\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n  //------------------------------------------------------------------------------\n  // Add a view\n  //------------------------------------------------------------------------------\n  const viewPowerMeter = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Power Meter\"\n  });\n\n  const viewDI = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DI\"\n  });\n\n  const viewDO = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DO\"\n  });\n\n  const viewDeviceStats = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Device Stats\"\n  });\n\n  viewDeviceStats.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueHeartbeat.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePower.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePF.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueConsumption.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI1.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI2.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI3.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI4.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO1.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO2.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO3.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO4.nodeId\n  });\n\n  coreServer.debugLog(\"create dynamic address space done\");\n  node.warn(\"construction of new address space for OPC UA done\");\n\n  done();\n}\n",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "879ecd922275f2c2",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValuePower",
        "rules": [
            {
                "t": "set",
                "p": "ValuePower",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "bafafd30a0d0efd4",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValueC1",
        "rules": [
            {
                "t": "set",
                "p": "ValueC1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f351feb9b469dbad",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValueC2",
        "rules": [
            {
                "t": "set",
                "p": "ValueC2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e57576d6f51d9384",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValueC3",
        "rules": [
            {
                "t": "set",
                "p": "ValueC3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "63f7b458db6aa481",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValueV1",
        "rules": [
            {
                "t": "set",
                "p": "ValueV1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "b225874458f59f29",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValueV2",
        "rules": [
            {
                "t": "set",
                "p": "ValueV2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "368324c7f2965ca1",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValueV3",
        "rules": [
            {
                "t": "set",
                "p": "ValueV3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5f218be519130c08",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValuePF",
        "rules": [
            {
                "t": "set",
                "p": "ValuePF",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "aea163d57d63e067",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValueConsumption",
        "rules": [
            {
                "t": "set",
                "p": "ValueConsumption",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "2c0b55ac17444b78",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValueReactive",
        "rules": [
            {
                "t": "set",
                "p": "ValueReactive",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "03c473018f4c02cd",
        "type": "change",
        "z": "73cffe3684dd5ef5",
        "name": "ValueHeartbeat",
        "rules": [
            {
                "t": "set",
                "p": "ValueHeartbeat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "207e396446b45e2d",
        "type": "inject",
        "z": "73cffe3684dd5ef5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1090,
        "y": 900,
        "wires": [
            [
                "03c473018f4c02cd"
            ]
        ]
    },
    {
        "id": "2f635dcd087bf559",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValuePower",
        "rules": [
            {
                "t": "set",
                "p": "ValuePower",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "33675dbba00cc61c",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValueC1",
        "rules": [
            {
                "t": "set",
                "p": "ValueC1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "0758d6826c456ee9",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValueC2",
        "rules": [
            {
                "t": "set",
                "p": "ValueC2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "7ea6a13f268191b8",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValueC3",
        "rules": [
            {
                "t": "set",
                "p": "ValueC3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "659bf476fe93afc6",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValueV1",
        "rules": [
            {
                "t": "set",
                "p": "ValueV1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "af17c3663b28973c",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValueV2",
        "rules": [
            {
                "t": "set",
                "p": "ValueV2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "bd06770956c85177",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValueV3",
        "rules": [
            {
                "t": "set",
                "p": "ValueV3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "caa5dc3db8bd94db",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValuePF",
        "rules": [
            {
                "t": "set",
                "p": "ValuePF",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "6104e2991565687e",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValueConsumption",
        "rules": [
            {
                "t": "set",
                "p": "ValueConsumption",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "3023cf6a2afa3d24",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValueReactive",
        "rules": [
            {
                "t": "set",
                "p": "ValueReactive",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "ef478f71fe1c88ff",
        "type": "opcua-compact-server",
        "z": "d0b00913466bcea1",
        "port": "10502",
        "endpoint": "",
        "productUri": "",
        "acceptExternalCommands": true,
        "maxAllowedSessionNumber": "10",
        "maxConnectionsPerEndpoint": "10",
        "maxAllowedSubscriptionNumber": "100",
        "alternateHostname": "",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "allowAnonymous": true,
        "individualCerts": false,
        "isAuditing": false,
        "serverDiscovery": true,
        "users": [],
        "xmlsetsOPCUA": [],
        "publicCertificateFile": "",
        "privateCertificateFile": "",
        "registerServerMethod": "1",
        "discoveryServerEndpointUrl": "opc.tcp://localhost:10502",
        "capabilitiesForMDNS": "",
        "maxNodesPerRead": 1000,
        "maxNodesPerWrite": 1000,
        "maxNodesPerHistoryReadData": 100,
        "maxNodesPerBrowse": 3000,
        "maxBrowseContinuationPoints": "10",
        "maxHistoryContinuationPoints": "10",
        "delayToInit": "1000",
        "delayToClose": "200",
        "serverShutdownTimeout": "100",
        "addressSpaceScript": "function constructAlarmAddressSpace(server, addressSpace, eventObjects, done) {\n  // server = the created node-opcua server\n  // addressSpace = address space of the node-opcua server\n  // eventObjects = add event variables here to hold them in memory from this script\n\n  // internal sandbox objects are:\n  // node = the compact server node,\n  // coreServer = core compact server object for debug and access to NodeOPCUA\n  // this.sandboxNodeContext = node context node-red\n  // this.sandboxFlowContext = flow context node-red\n  // this.sandboxGlobalContext = global context node-red\n  // this.sandboxEnv = env variables\n  // timeout and interval functions as expected from nodejs\n\n  const opcua = coreServer.choreCompact.opcua;\n  const LocalizedText = opcua.LocalizedText;\n  const namespace = addressSpace.getOwnNamespace();\n\n  const Variant = opcua.Variant;\n  const DataType = opcua.DataType;\n  const DataValue = opcua.DataValue;\n\n  var flexServerInternals = this;\n\n  // this.sandboxFlowContext.set(\"ValuePower\", 0);\n  // this.setInterval(() => {\n  //   flexServerInternals.sandboxFlowContext.set(\n  //     \"ValuePower\",\n  //     Math.random() + 50.0\n  //   );\n  // }, 500);\n  // this.sandboxFlowContext.set(\"ValueC1\", 0);\n  // this.sandboxFlowContext.set(\"ValueC2\", 0);\n  // this.sandboxFlowContext.set(\"ValueC3\", 0);\n  // this.sandboxFlowContext.set(\"ValueV1\", 0);\n  // this.sandboxFlowContext.set(\"ValueV2\", 0);\n  // this.sandboxFlowContext.set(\"ValueV3\", 0);\n  // this.sandboxFlowContext.set(\"ValuePF\", 0);\n  // this.sandboxFlowContext.set(\"ValueConsumption\", 0);\n\n\n  // this.sandboxFlowContext.set(\"isoOutput1\", 0);\n  // this.setInterval(() => {\n  //   flexServerInternals.sandboxFlowContext.set(\n  //     \"isoOutput1\",\n  //     Math.random() + 10.0\n  //   );\n  // }, 500);\n\n  // this.sandboxFlowContext.set(\"isoOutput2\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput3\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput4\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput5\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput6\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput7\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput8\", 0);\n\n  coreServer.debugLog(\"init dynamic address space\");\n  const rootFolder = addressSpace.findNode(\"RootFolder\");\n\n  node.warn(\"construct new address space for OPC UA\");\n\n  const myDevice = namespace.addFolder(rootFolder.objects, {\n    \"browseName\": \"Edge Device\"\n  });\n  // const gpioFolder = namespace.addFolder(myDevice, { \"browseName\": \"GPIO\" });\n  const PowerMeterInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Power Meter\"\n  });\n  const DigitalInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Inputs\"\n  });\n  const DigitalOutputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Outputs\"\n  });\n  const DeviceStats = namespace.addFolder(myDevice, {\n    \"browseName\": \"Device Stats\"\n  });\n  const ValueHeartbeat = namespace.addVariable({\n    \"organizedBy\": DeviceStats,\n    \"browseName\": \"ValueHeartbeat\",\n    \"nodeId\": \"ns=1;s=ValueHeartbeat\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueHeartbeat\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueHeartbeat\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n  const ValuePower = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePower\",\n    \"nodeId\": \"ns=1;s=ValuePower\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePower\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePower\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC1\",\n    \"nodeId\": \"ns=1;s=ValueC1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC2\",\n    \"nodeId\": \"ns=1;s=ValueC2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC3\",\n    \"nodeId\": \"ns=1;s=ValueC3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV1\",\n    \"nodeId\": \"ns=1;s=ValueV1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV2\",\n    \"nodeId\": \"ns=1;s=ValueV2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV3\",\n    \"nodeId\": \"ns=1;s=ValueV3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValuePF = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePF\",\n    \"nodeId\": \"ns=1;s=ValuePF\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePF\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePF\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueConsumption = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueConsumption\",\n    \"nodeId\": \"ns=1;s=ValueConsumption\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueConsumption\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueConsumption\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI1 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI1\",\n    \"nodeId\": \"ns=1;s=DI1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI2 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI2\",\n    \"nodeId\": \"ns=1;s=DI2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI3 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI3\",\n    \"nodeId\": \"ns=1;s=DI3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI4 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI4\",\n    \"nodeId\": \"ns=1;s=DI4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI4\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n\n  const DO1 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO1\",\n    \"nodeId\": \"ns=1;s=DO1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO1\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO2 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO2\",\n    \"nodeId\": \"ns=1;s=DO2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO2\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO3 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO3\",\n    \"nodeId\": \"ns=1;s=DO3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO3\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO4 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO4\",\n    \"nodeId\": \"ns=1;s=DO4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO4\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n  //------------------------------------------------------------------------------\n  // Add a view\n  //------------------------------------------------------------------------------\n  const viewPowerMeter = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Power Meter\"\n  });\n\n  const viewDI = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DI\"\n  });\n\n  const viewDO = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DO\"\n  });\n\n  const viewDeviceStats = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Device Stats\"\n  });\n\n  viewDeviceStats.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueHeartbeat.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePower.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePF.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueConsumption.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI1.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI2.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI3.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI4.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO1.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO2.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO3.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO4.nodeId\n  });\n\n  coreServer.debugLog(\"create dynamic address space done\");\n  node.warn(\"construction of new address space for OPC UA done\");\n\n  done();\n}\n",
        "x": 120,
        "y": 80,
        "wires": []
    },
    {
        "id": "79ed874ed29a0c8d",
        "type": "comment",
        "z": "d0b00913466bcea1",
        "name": "Digital Inputs",
        "info": "",
        "x": 130,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f835ddb456d85ab6",
        "type": "rpi-gpio in",
        "z": "d0b00913466bcea1",
        "name": "DI0",
        "pin": "13",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1180,
        "wires": [
            [
                "d71e378797c198c8"
            ]
        ]
    },
    {
        "id": "481fb35519f80e51",
        "type": "ui_switch",
        "z": "d0b00913466bcea1",
        "name": "",
        "label": "DI0",
        "tooltip": "",
        "group": "b4ae35e20516b546",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "d71e378797c198c8",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1180,
        "wires": [
            [
                "481fb35519f80e51",
                "4bcf86611baa2e5e"
            ]
        ]
    },
    {
        "id": "bc233bd37b8bffc0",
        "type": "rpi-gpio in",
        "z": "d0b00913466bcea1",
        "name": "DI1",
        "pin": "17",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "d6ab08789c0a4162"
            ]
        ]
    },
    {
        "id": "06a21065c90987a8",
        "type": "ui_switch",
        "z": "d0b00913466bcea1",
        "name": "",
        "label": "DI1",
        "tooltip": "",
        "group": "b4ae35e20516b546",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "d6ab08789c0a4162",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1240,
        "wires": [
            [
                "06a21065c90987a8",
                "60bae60726144a70"
            ]
        ]
    },
    {
        "id": "c61a56e6eab66631",
        "type": "rpi-gpio in",
        "z": "d0b00913466bcea1",
        "name": "DI2",
        "pin": "22",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1300,
        "wires": [
            [
                "601814f0ba38ceab"
            ]
        ]
    },
    {
        "id": "7553e417b4dab961",
        "type": "ui_switch",
        "z": "d0b00913466bcea1",
        "name": "",
        "label": "DI2",
        "tooltip": "",
        "group": "b4ae35e20516b546",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "601814f0ba38ceab",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1300,
        "wires": [
            [
                "7553e417b4dab961",
                "de0777d907982cb3"
            ]
        ]
    },
    {
        "id": "97508cc2c8703cdc",
        "type": "rpi-gpio in",
        "z": "d0b00913466bcea1",
        "name": "DI3",
        "pin": "27",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1360,
        "wires": [
            [
                "36c251d5347bf6b0"
            ]
        ]
    },
    {
        "id": "42cb65e2e0be1152",
        "type": "ui_switch",
        "z": "d0b00913466bcea1",
        "name": "",
        "label": "DI3",
        "tooltip": "",
        "group": "b4ae35e20516b546",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "36c251d5347bf6b0",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1360,
        "wires": [
            [
                "42cb65e2e0be1152",
                "59d3299739735ebe"
            ]
        ]
    },
    {
        "id": "4bcf86611baa2e5e",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "DI1",
        "rules": [
            {
                "t": "set",
                "p": "DI1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "60bae60726144a70",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "DI2",
        "rules": [
            {
                "t": "set",
                "p": "DI2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "de0777d907982cb3",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "DI3",
        "rules": [
            {
                "t": "set",
                "p": "DI3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "59d3299739735ebe",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "DI4",
        "rules": [
            {
                "t": "set",
                "p": "DI4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "6d8fba5d4154f38f",
        "type": "inject",
        "z": "d0b00913466bcea1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 980,
        "wires": [
            [
                "f3a3bddab4369d74"
            ]
        ]
    },
    {
        "id": "f3a3bddab4369d74",
        "type": "change",
        "z": "d0b00913466bcea1",
        "name": "ValueHeartbeat",
        "rules": [
            {
                "t": "set",
                "p": "ValueHeartbeat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "9daff51e953cc75e",
        "type": "modbus-read",
        "z": "d0b00913466bcea1",
        "name": "Voltage Current PF",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "14",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "62de4ee08ee8214d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 140,
        "wires": [
            [
                "bd4c08f7c3b86a43"
            ],
            []
        ]
    },
    {
        "id": "39da8978c1a95796",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 820,
        "wires": [
            [
                "80c21d9ac206c231"
            ]
        ]
    },
    {
        "id": "bd4c08f7c3b86a43",
        "type": "buffer-parser",
        "z": "d0b00913466bcea1",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item2",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item3",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item4",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item5",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item6",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "item7",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 7,
        "x": 450,
        "y": 200,
        "wires": [
            [
                "028aedf1c33595a8"
            ],
            [
                "8864a29289995726"
            ],
            [
                "8f84e6fe498a749f"
            ],
            [
                "411db6bfdb110a56"
            ],
            [
                "9b1ba6bcd77a90c6"
            ],
            [
                "9c915cb311483ccc"
            ],
            [
                "34231910711801e9"
            ]
        ]
    },
    {
        "id": "028aedf1c33595a8",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 120,
        "wires": [
            [
                "ac5ec09ace20b5fa"
            ]
        ]
    },
    {
        "id": "22bc6f21d926d4ce",
        "type": "buffer-parser",
        "z": "d0b00913466bcea1",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 490,
        "y": 820,
        "wires": [
            [
                "39da8978c1a95796"
            ]
        ]
    },
    {
        "id": "21a7964438461308",
        "type": "buffer-parser",
        "z": "d0b00913466bcea1",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 490,
        "y": 900,
        "wires": [
            [
                "9b9ccc158c2df9b9"
            ]
        ]
    },
    {
        "id": "9b9ccc158c2df9b9",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 900,
        "wires": [
            [
                "29e77971a0cccd0f"
            ]
        ]
    },
    {
        "id": "34231910711801e9",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 480,
        "wires": [
            [
                "d9ec7d50c640efb3"
            ]
        ]
    },
    {
        "id": "80c21d9ac206c231",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 820,
        "wires": [
            [
                "6104e2991565687e"
            ]
        ]
    },
    {
        "id": "29e77971a0cccd0f",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 900,
        "wires": [
            [
                "3023cf6a2afa3d24"
            ]
        ]
    },
    {
        "id": "1914e3eb8fbb6f9f",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 310,
        "y": 820,
        "wires": [
            [
                "22bc6f21d926d4ce"
            ]
        ]
    },
    {
        "id": "ac5ec09ace20b5fa",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 120,
        "wires": [
            [
                "659bf476fe93afc6"
            ]
        ]
    },
    {
        "id": "13894bcca15f296c",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 310,
        "y": 900,
        "wires": [
            [
                "21a7964438461308"
            ]
        ]
    },
    {
        "id": "d9ec7d50c640efb3",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "caa5dc3db8bd94db"
            ]
        ]
    },
    {
        "id": "0f8c1a65164f9309",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 180,
        "wires": [
            [
                "af17c3663b28973c"
            ]
        ]
    },
    {
        "id": "8864a29289995726",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 180,
        "wires": [
            [
                "0f8c1a65164f9309"
            ]
        ]
    },
    {
        "id": "a764530108f69e6f",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 240,
        "wires": [
            [
                "bd06770956c85177"
            ]
        ]
    },
    {
        "id": "8f84e6fe498a749f",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 240,
        "wires": [
            [
                "a764530108f69e6f"
            ]
        ]
    },
    {
        "id": "6d73974091ca4f6f",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "33675dbba00cc61c"
            ]
        ]
    },
    {
        "id": "411db6bfdb110a56",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 300,
        "wires": [
            [
                "6d73974091ca4f6f"
            ]
        ]
    },
    {
        "id": "fa99307b7cf6a1d7",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 360,
        "wires": [
            [
                "0758d6826c456ee9"
            ]
        ]
    },
    {
        "id": "9b1ba6bcd77a90c6",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 360,
        "wires": [
            [
                "fa99307b7cf6a1d7"
            ]
        ]
    },
    {
        "id": "944e9f1dacad2827",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 420,
        "wires": [
            [
                "7ea6a13f268191b8"
            ]
        ]
    },
    {
        "id": "9c915cb311483ccc",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 420,
        "wires": [
            [
                "944e9f1dacad2827"
            ]
        ]
    },
    {
        "id": "7e9356754613c7b5",
        "type": "modbus-read",
        "z": "d0b00913466bcea1",
        "name": "Power",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "16",
        "quantity": "2",
        "rate": "300",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "62de4ee08ee8214d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 740,
        "wires": [
            [
                "6403dd8f10ca232b"
            ],
            []
        ]
    },
    {
        "id": "6403dd8f10ca232b",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 310,
        "y": 740,
        "wires": [
            [
                "c091949fcffa7c78"
            ]
        ]
    },
    {
        "id": "c091949fcffa7c78",
        "type": "buffer-parser",
        "z": "d0b00913466bcea1",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 490,
        "y": 740,
        "wires": [
            [
                "047c9637906754a5"
            ]
        ]
    },
    {
        "id": "047c9637906754a5",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 740,
        "wires": [
            [
                "7ba2b2ea368d3cae"
            ]
        ]
    },
    {
        "id": "7ba2b2ea368d3cae",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 740,
        "wires": [
            [
                "2f635dcd087bf559"
            ]
        ]
    },
    {
        "id": "46fa58f26410433b",
        "type": "modbus-read",
        "z": "d0b00913466bcea1",
        "name": "Consumption",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "576",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "62de4ee08ee8214d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 820,
        "wires": [
            [
                "1914e3eb8fbb6f9f"
            ],
            []
        ]
    },
    {
        "id": "6bab9deb3b8e498e",
        "type": "modbus-read",
        "z": "d0b00913466bcea1",
        "name": "Reactive",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "580",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "62de4ee08ee8214d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 120,
        "y": 900,
        "wires": [
            [
                "13894bcca15f296c"
            ],
            []
        ]
    },
    {
        "id": "179ea8183e423154",
        "type": "modbus-read",
        "z": "d0b00913466bcea1",
        "name": "Voltage",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "20",
        "quantity": "6",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "62de4ee08ee8214d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 560,
        "wires": [
            [
                "20691670403ca950"
            ],
            []
        ]
    },
    {
        "id": "20691670403ca950",
        "type": "buffer-parser",
        "z": "d0b00913466bcea1",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item2",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item3",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 3,
        "x": 430,
        "y": 580,
        "wires": [
            [
                "545eedc1573da876"
            ],
            [
                "f7d564f9b5b54e75"
            ],
            [
                "761d62284d94677b"
            ]
        ]
    },
    {
        "id": "545eedc1573da876",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 560,
        "wires": [
            [
                "66a91eb18c674290"
            ]
        ]
    },
    {
        "id": "66a91eb18c674290",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c76d90f4d7270618",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "f7d564f9b5b54e75",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 620,
        "wires": [
            [
                "c76d90f4d7270618"
            ]
        ]
    },
    {
        "id": "a8a26177c68baf20",
        "type": "show-value",
        "z": "d0b00913466bcea1",
        "name": "",
        "path": "",
        "x": 870,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "761d62284d94677b",
        "type": "function",
        "z": "d0b00913466bcea1",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 680,
        "wires": [
            [
                "a8a26177c68baf20"
            ]
        ]
    },
    {
        "id": "0faf67aa244e44e0",
        "type": "rpi-gpio in",
        "z": "b178827b115d4cec",
        "name": "DI0",
        "pin": "13",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "1bb00f6ebadea376"
            ]
        ]
    },
    {
        "id": "f2ff4aa0462fccd5",
        "type": "rpi-gpio in",
        "z": "b178827b115d4cec",
        "name": "DI1",
        "pin": "17",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "11b7d085d1d887ab"
            ]
        ]
    },
    {
        "id": "1972435b8106e20a",
        "type": "rpi-gpio in",
        "z": "b178827b115d4cec",
        "name": "DI2",
        "pin": "22",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 360,
        "wires": [
            [
                "9dd3f49537e4fded"
            ]
        ]
    },
    {
        "id": "daec4955a2ffe78a",
        "type": "rpi-gpio in",
        "z": "b178827b115d4cec",
        "name": "DI3",
        "pin": "27",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 420,
        "wires": [
            [
                "b393b1111c900e55"
            ]
        ]
    },
    {
        "id": "1bb00f6ebadea376",
        "type": "falling-edge",
        "z": "b178827b115d4cec",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 240,
        "wires": [
            [
                "c90203febb84df58"
            ]
        ]
    },
    {
        "id": "11b7d085d1d887ab",
        "type": "falling-edge",
        "z": "b178827b115d4cec",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9dd3f49537e4fded",
        "type": "falling-edge",
        "z": "b178827b115d4cec",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "b393b1111c900e55",
        "type": "falling-edge",
        "z": "b178827b115d4cec",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c90203febb84df58",
        "type": "function",
        "z": "b178827b115d4cec",
        "name": "increase partCount",
        "func": "let partCount = global.get(\"partCount\") || 0;\npartCount++;\nglobal.set(\"partCount\", partCount);\nmsg.payload = partCount;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 240,
        "wires": [
            [
                "4552722da1b592b3"
            ]
        ]
    },
    {
        "id": "4552722da1b592b3",
        "type": "show-value",
        "z": "b178827b115d4cec",
        "name": "",
        "path": "",
        "x": 850,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b5d3089a31c05618",
        "type": "inject",
        "z": "b178827b115d4cec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "1bb00f6ebadea376"
            ]
        ]
    },
    {
        "id": "ae82e345f48654cd",
        "type": "inject",
        "z": "b178827b115d4cec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "1bb00f6ebadea376"
            ]
        ]
    },
    {
        "id": "3ec92442abbcb634",
        "type": "inject",
        "z": "7eb0792a01b9b20e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "2664c800fa8bd92d"
            ]
        ]
    },
    {
        "id": "2664c800fa8bd92d",
        "type": "change",
        "z": "7eb0792a01b9b20e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "test",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c1651af3bf8b0fbf",
        "type": "inject",
        "z": "7eb0792a01b9b20e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "2a3da7ccd21d4512"
            ]
        ]
    },
    {
        "id": "2a3da7ccd21d4512",
        "type": "function",
        "z": "7eb0792a01b9b20e",
        "name": "function 1",
        "func": "msg.payload = global.get(\"test\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 260,
        "wires": [
            [
                "de42043df34a0f61"
            ]
        ]
    },
    {
        "id": "de42043df34a0f61",
        "type": "show-value",
        "z": "7eb0792a01b9b20e",
        "name": "",
        "path": "",
        "x": 530,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "81d666de3953c6b4",
        "type": "exec",
        "z": "7eb0792a01b9b20e",
        "command": "sudo reboot now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0feb212fec3fb31f",
        "type": "inject",
        "z": "7eb0792a01b9b20e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "81d666de3953c6b4"
            ]
        ]
    }
]