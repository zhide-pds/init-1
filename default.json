[
    {
        "id": "5445a7fef5dd7231",
        "type": "tab",
        "label": "MISC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4056766b45606b53",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Shutdown IRIV PiControl if user button is pressed for > 5 seconds or commanded from dashboard",
        "info": "",
        "x": 430,
        "y": 260,
        "wires": []
    },
    {
        "id": "d18353856e96aff0",
        "type": "rpi-gpio in",
        "z": "5445a7fef5dd7231",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "a65ed8a93ebe06ac"
            ]
        ]
    },
    {
        "id": "a65ed8a93ebe06ac",
        "type": "trigger",
        "z": "5445a7fef5dd7231",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 300,
        "wires": [
            [
                "abafc847dbf6fa30",
                "946607322a1c245f",
                "a1e99527f3949721",
                "2901b9043005c968"
            ]
        ]
    },
    {
        "id": "158e073027b5fa8e",
        "type": "rpi-gpio out",
        "z": "5445a7fef5dd7231",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 860,
        "y": 360,
        "wires": []
    },
    {
        "id": "abafc847dbf6fa30",
        "type": "trigger",
        "z": "5445a7fef5dd7231",
        "name": "On for 200ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "200",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 660,
        "y": 360,
        "wires": [
            [
                "158e073027b5fa8e"
            ]
        ]
    },
    {
        "id": "7e30735249f25f0f",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 880,
        "y": 300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "de271e3d5992bd39",
        "type": "Clear",
        "z": "5445a7fef5dd7231",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 830,
        "y": 420,
        "wires": []
    },
    {
        "id": "a1e99527f3949721",
        "type": "delay",
        "z": "5445a7fef5dd7231",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 300,
        "wires": [
            [
                "7e30735249f25f0f"
            ]
        ]
    },
    {
        "id": "259b736f7a31d1ee",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Turn on WiFi Hotspot if wireless is available",
        "info": "",
        "x": 840,
        "y": 1720,
        "wires": []
    },
    {
        "id": "d7ae7296524f813a",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "sudo nmcli device wifi hotspot ssid iriv password iriv1234",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 1010,
        "y": 1800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "81bf876881cf8b8e",
        "type": "catch",
        "z": "5445a7fef5dd7231",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "cfb8583e19e90093"
            ]
        ]
    },
    {
        "id": "cfb8583e19e90093",
        "type": "debug",
        "z": "5445a7fef5dd7231",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 140,
        "wires": []
    },
    {
        "id": "b83667eb29510be7",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "ip -f inet addr show eth0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - eth0",
        "x": 410,
        "y": 840,
        "wires": [
            [
                "d60d44ce7e860358"
            ],
            [],
            [
                "dbd925f357b14d1c"
            ]
        ]
    },
    {
        "id": "dbd925f357b14d1c",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "ip -f inet addr show eth1 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - eth1",
        "x": 410,
        "y": 920,
        "wires": [
            [
                "41c1a2d224ba5e50"
            ],
            [],
            [
                "278eca4926731c0c"
            ]
        ]
    },
    {
        "id": "278eca4926731c0c",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "ip -f inet addr show wlan0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - wlan0",
        "x": 420,
        "y": 1000,
        "wires": [
            [
                "1ca2b7496f388944"
            ],
            [],
            [
                "0fda47379c765734"
            ]
        ]
    },
    {
        "id": "0335107cdd4b8620",
        "type": "inject",
        "z": "5445a7fef5dd7231",
        "name": "Every 2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "b83667eb29510be7"
            ]
        ]
    },
    {
        "id": "d60d44ce7e860358",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable IpEth0.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpEth0', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "41c1a2d224ba5e50",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable IpEth1.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpEth1', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "1ca2b7496f388944",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable IpWlan0.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpWlan0', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "d9bae8741593b8d9",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Update status",
        "info": "",
        "x": 170,
        "y": 800,
        "wires": []
    },
    {
        "id": "a6e79a44344bdf4a",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Handle the exception",
        "info": "",
        "x": 200,
        "y": 100,
        "wires": []
    },
    {
        "id": "0fda47379c765734",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "top -bn1 | grep load | awk '{printf \"%.2f\\n\", $(NF-2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get CPU Load",
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "0eb945c44cc7870d"
            ],
            [],
            [
                "ae7361b2449f3c4c"
            ]
        ]
    },
    {
        "id": "0eb945c44cc7870d",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable CpuLoad",
        "func": "global.set('CpuLoad', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "3b7bcfb3e511c91e",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "free -m | awk 'NR==2{printf \"%.1f/%.1fGB %d%%\\n\", $3/1000,$2/1000,$3*100/$2}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get RAM Usage",
        "x": 420,
        "y": 1240,
        "wires": [
            [
                "557cb8d73a025def"
            ],
            [],
            [
                "6226e26c568e0b05"
            ]
        ]
    },
    {
        "id": "557cb8d73a025def",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable Ram",
        "func": "global.set('Ram', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "6226e26c568e0b05",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "df -h | awk '$NF==\"/\"{printf \"%.1f/%.1fGB %s\\n\", $3,$2,$5}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get Disk Usage",
        "x": 420,
        "y": 1320,
        "wires": [
            [
                "fa7b9d62b2d8d682"
            ],
            [],
            []
        ]
    },
    {
        "id": "fa7b9d62b2d8d682",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable Disk",
        "func": "global.set('Disk', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "c4ac9389e39781e3",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "free -t -h | awk 'NR==4{printf \"%d\\n\", $2+0.7}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get total RAM Size",
        "x": 430,
        "y": 1440,
        "wires": [
            [
                "4ce849f7660df523"
            ],
            [],
            [
                "c66ec60dfeab1297"
            ]
        ]
    },
    {
        "id": "4ce849f7660df523",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable TotalRam",
        "func": "global.set('TotalRam', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "977f6b2df90b6fac",
        "type": "inject",
        "z": "5445a7fef5dd7231",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1440,
        "wires": [
            [
                "c4ac9389e39781e3"
            ]
        ]
    },
    {
        "id": "c66ec60dfeab1297",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "df -h | awk '$NF==\"/\"{printf \"%d\\n\", $2*1.1}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get total Disk Size",
        "x": 430,
        "y": 1520,
        "wires": [
            [
                "d728b5299d5dbdc4"
            ],
            [],
            [
                "949bbc9fe705f728"
            ]
        ]
    },
    {
        "id": "d728b5299d5dbdc4",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable TotalDisk",
        "func": "global.set('TotalDisk', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "949bbc9fe705f728",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "ifconfig | grep wlan0",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Check whether there's wireless",
        "x": 470,
        "y": 1600,
        "wires": [
            [
                "cf84f98d178d8f1d"
            ],
            [],
            [
                "fdd5d87fc5bf4fff"
            ]
        ]
    },
    {
        "id": "cf84f98d178d8f1d",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable IsWireless",
        "func": "var result;\n\nif (msg.payload == \"\") {\n    result = \"\"\n} else {\n    result = \"W\"\n}\n\nglobal.set('IsWireless', result);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "ae7361b2449f3c4c",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "vcgencmd measure_temp | awk -F \"[=']\" '{print($2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get CPU Temperature",
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "9e3a9627005adbf2"
            ],
            [],
            [
                "3b7bcfb3e511c91e"
            ]
        ]
    },
    {
        "id": "9e3a9627005adbf2",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable CpuTemp",
        "func": "global.set('CpuTemp', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "76f4bb86501bc2cb",
        "type": "rpi-gpio in",
        "z": "5445a7fef5dd7231",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 170,
        "y": 700,
        "wires": [
            [
                "1f10cf36ba4b4f51"
            ]
        ]
    },
    {
        "id": "1f10cf36ba4b4f51",
        "type": "switch",
        "z": "5445a7fef5dd7231",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 700,
        "wires": [
            [
                "7a810784755b2915"
            ]
        ]
    },
    {
        "id": "7a810784755b2915",
        "type": "trigger",
        "z": "5445a7fef5dd7231",
        "name": "On for 25ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "25",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 490,
        "y": 700,
        "wires": [
            [
                "a688746cc065dad3"
            ]
        ]
    },
    {
        "id": "a688746cc065dad3",
        "type": "rpi-gpio out",
        "z": "5445a7fef5dd7231",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 700,
        "y": 700,
        "wires": []
    },
    {
        "id": "7ade77ddd5e9cd94",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Beep when user button is pressed",
        "info": "",
        "x": 240,
        "y": 660,
        "wires": []
    },
    {
        "id": "56c92a79f05d255f",
        "type": "link in",
        "z": "5445a7fef5dd7231",
        "name": "Shutdown",
        "links": [
            "34cd93148635b2a2"
        ],
        "x": 385,
        "y": 360,
        "wires": [
            [
                "a1e99527f3949721",
                "abafc847dbf6fa30",
                "946607322a1c245f",
                "2901b9043005c968"
            ]
        ]
    },
    {
        "id": "2901b9043005c968",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Update global.state",
        "func": "global.set('state', -1);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "946607322a1c245f",
        "type": "delay",
        "z": "5445a7fef5dd7231",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 420,
        "wires": [
            [
                "de271e3d5992bd39"
            ]
        ]
    },
    {
        "id": "543be67c559aa29b",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "sudo reboot now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 870,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0b0b904a0c5d83a0",
        "type": "delay",
        "z": "5445a7fef5dd7231",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 540,
        "wires": [
            [
                "543be67c559aa29b"
            ]
        ]
    },
    {
        "id": "08f5d4861be16b40",
        "type": "link in",
        "z": "5445a7fef5dd7231",
        "name": "Reboot",
        "links": [
            "3b832cc6a4984378"
        ],
        "x": 385,
        "y": 540,
        "wires": [
            [
                "0b0b904a0c5d83a0",
                "abafc847dbf6fa30",
                "946607322a1c245f",
                "2901b9043005c968"
            ]
        ]
    },
    {
        "id": "b975166d4ae9d029",
        "type": "switch",
        "z": "5445a7fef5dd7231",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1800,
        "wires": [
            [
                "d7ae7296524f813a"
            ]
        ]
    },
    {
        "id": "41928ef979fd20a2",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Remove this if you do not want to enable WiFi AP",
        "info": "",
        "x": 860,
        "y": 1760,
        "wires": []
    },
    {
        "id": "fdd5d87fc5bf4fff",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "lsb_release -c | awk -F \":\" '{print($2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get Codename",
        "x": 420,
        "y": 1880,
        "wires": [
            [
                "b7a216bfc378a218"
            ],
            [],
            [
                "9ae354c5c601ab25"
            ]
        ]
    },
    {
        "id": "b7a216bfc378a218",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable Codename",
        "func": "global.set('Codename', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "9ae354c5c601ab25",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "getconf LONG_BIT",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get OS Bit",
        "x": 410,
        "y": 1960,
        "wires": [
            [
                "e9b4feb4d8509cab"
            ],
            [],
            []
        ]
    },
    {
        "id": "e9b4feb4d8509cab",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable OSBit",
        "func": "global.set('OSBit', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "5f5693dd2a8ae029",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable Revision",
        "func": "global.set('Revision', \"v1.1.3\");",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "616f3b01fe83a05c",
        "type": "inject",
        "z": "5445a7fef5dd7231",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 2060,
        "wires": [
            [
                "5f5693dd2a8ae029"
            ]
        ]
    },
    {
        "id": "7e4cdd0309f5b525",
        "type": "oled-config",
        "name": "iriv_oled",
        "width": "128",
        "height": "64",
        "address": "3c"
    }
]