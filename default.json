[
    {
        "id": "5445a7fef5dd7231",
        "type": "tab",
        "label": "MISC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e059348302dd4852",
        "type": "tab",
        "label": "OLED",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "62c06baefd79902a",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1518edd396566b6b",
        "type": "tab",
        "label": "Schneider Power Meter",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e756f5a682157584",
        "type": "tab",
        "label": "Omron Power Meter",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "30a1c269027d2137",
        "type": "tab",
        "label": "Dry Contact Part Count",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "89785a26af5a4026",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7e4cdd0309f5b525",
        "type": "oled-config",
        "name": "iriv_oled",
        "width": "128",
        "height": "64",
        "address": "3c"
    },
    {
        "id": "6c8ed2f95ccc86e9",
        "type": "ui_tab",
        "name": "IRIV PiControl Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "60b4dd6e2fefb0fd",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0fb4f5",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#0094ce",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#0094ce",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "IRIV PiControl Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 20,
                "gy": 20,
                "cx": 6,
                "cy": 6,
                "px": 10,
                "py": 10
            }
        }
    },
    {
        "id": "88ffe255855640ed",
        "type": "ui_group",
        "name": "Button, LEDs & Buzzer",
        "tab": "6c8ed2f95ccc86e9",
        "order": 1,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5b01c9ef39d93b12",
        "type": "ui_group",
        "name": "System",
        "tab": "6c8ed2f95ccc86e9",
        "order": 5,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f7e1dc67e31c2f09",
        "type": "ui_group",
        "name": "Digital Inputs",
        "tab": "6c8ed2f95ccc86e9",
        "order": 2,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5761374055a6c59a",
        "type": "ui_group",
        "name": "Digital Outputs",
        "tab": "6c8ed2f95ccc86e9",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "23019df79a890845",
        "type": "ui_group",
        "name": "Analog Inputs",
        "tab": "6c8ed2f95ccc86e9",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4fc504dabe400203",
        "type": "ui_spacer",
        "z": "62c06baefd79902a",
        "name": "spacer",
        "group": "88ffe255855640ed",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "f950743a1f9e2f4a",
        "type": "ui_spacer",
        "z": "62c06baefd79902a",
        "name": "spacer",
        "group": "88ffe255855640ed",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "20ea82c86ec8b236",
        "type": "ui_spacer",
        "z": "62c06baefd79902a",
        "name": "spacer",
        "group": "f7e1dc67e31c2f09",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "dfa42da4320ac881",
        "type": "ui_spacer",
        "z": "62c06baefd79902a",
        "name": "spacer",
        "group": "f7e1dc67e31c2f09",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "8e14e871706fc434",
        "type": "ui_spacer",
        "z": "62c06baefd79902a",
        "name": "spacer",
        "group": "5761374055a6c59a",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "2eb1d75dd74c7829",
        "type": "ui_spacer",
        "z": "62c06baefd79902a",
        "name": "spacer",
        "group": "5761374055a6c59a",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "a1ae6803a2ee4962",
        "type": "ui_spacer",
        "z": "62c06baefd79902a",
        "name": "spacer",
        "group": "23019df79a890845",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "d86f9408d27f5a89",
        "type": "ui_spacer",
        "z": "62c06baefd79902a",
        "name": "spacer",
        "group": "23019df79a890845",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "993e85bddcb77a0d",
        "type": "ui_spacer",
        "z": "62c06baefd79902a",
        "name": "spacer",
        "group": "23019df79a890845",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "19c9056f99feb5b0",
        "type": "ui_spacer",
        "z": "62c06baefd79902a",
        "name": "spacer",
        "group": "23019df79a890845",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "a133df80d59a2190",
        "type": "modbus-client",
        "name": "",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "COM15",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "19200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "even",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": false,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "4953f37dd4c17e82",
        "type": "modbus-client",
        "name": "",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyACM0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "even",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": false,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "4056766b45606b53",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Shutdown IRIV PiControl if user button is pressed for > 5 seconds or commanded from dashboard",
        "info": "",
        "x": 430,
        "y": 260,
        "wires": []
    },
    {
        "id": "d18353856e96aff0",
        "type": "rpi-gpio in",
        "z": "5445a7fef5dd7231",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "a65ed8a93ebe06ac"
            ]
        ]
    },
    {
        "id": "a65ed8a93ebe06ac",
        "type": "trigger",
        "z": "5445a7fef5dd7231",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 300,
        "wires": [
            [
                "abafc847dbf6fa30",
                "946607322a1c245f",
                "a1e99527f3949721",
                "2901b9043005c968"
            ]
        ]
    },
    {
        "id": "158e073027b5fa8e",
        "type": "rpi-gpio out",
        "z": "5445a7fef5dd7231",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 860,
        "y": 360,
        "wires": []
    },
    {
        "id": "abafc847dbf6fa30",
        "type": "trigger",
        "z": "5445a7fef5dd7231",
        "name": "On for 200ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "200",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 660,
        "y": 360,
        "wires": [
            [
                "158e073027b5fa8e"
            ]
        ]
    },
    {
        "id": "7e30735249f25f0f",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 880,
        "y": 300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "de271e3d5992bd39",
        "type": "Clear",
        "z": "5445a7fef5dd7231",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 830,
        "y": 420,
        "wires": []
    },
    {
        "id": "a1e99527f3949721",
        "type": "delay",
        "z": "5445a7fef5dd7231",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 300,
        "wires": [
            [
                "7e30735249f25f0f"
            ]
        ]
    },
    {
        "id": "259b736f7a31d1ee",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Turn on WiFi Hotspot if wireless is available",
        "info": "",
        "x": 840,
        "y": 1720,
        "wires": []
    },
    {
        "id": "d7ae7296524f813a",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "sudo nmcli device wifi hotspot ssid iriv password iriv1234",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 1010,
        "y": 1800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "81bf876881cf8b8e",
        "type": "catch",
        "z": "5445a7fef5dd7231",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "cfb8583e19e90093"
            ]
        ]
    },
    {
        "id": "cfb8583e19e90093",
        "type": "debug",
        "z": "5445a7fef5dd7231",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 140,
        "wires": []
    },
    {
        "id": "b83667eb29510be7",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "ip -f inet addr show eth0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - eth0",
        "x": 410,
        "y": 840,
        "wires": [
            [
                "d60d44ce7e860358"
            ],
            [],
            [
                "dbd925f357b14d1c"
            ]
        ]
    },
    {
        "id": "dbd925f357b14d1c",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "ip -f inet addr show eth1 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - eth1",
        "x": 410,
        "y": 920,
        "wires": [
            [
                "41c1a2d224ba5e50"
            ],
            [],
            [
                "278eca4926731c0c"
            ]
        ]
    },
    {
        "id": "278eca4926731c0c",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "ip -f inet addr show wlan0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get IP - wlan0",
        "x": 420,
        "y": 1000,
        "wires": [
            [
                "1ca2b7496f388944"
            ],
            [],
            [
                "0fda47379c765734"
            ]
        ]
    },
    {
        "id": "0335107cdd4b8620",
        "type": "inject",
        "z": "5445a7fef5dd7231",
        "name": "Every 2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "b83667eb29510be7"
            ]
        ]
    },
    {
        "id": "d60d44ce7e860358",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable IpEth0.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpEth0', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "41c1a2d224ba5e50",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable IpEth1.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpEth1', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "1ca2b7496f388944",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable IpWlan0.",
        "func": "// Append the string length to 15 characters for IP address.\nmsg.payload = msg.payload.trim();\nwhile (msg.payload.length < 15) {\n    msg.payload = msg.payload.concat(\" \");\n}\n\nglobal.set('IpWlan0', msg.payload);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "d9bae8741593b8d9",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Update status",
        "info": "",
        "x": 170,
        "y": 800,
        "wires": []
    },
    {
        "id": "a6e79a44344bdf4a",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Handle the exception",
        "info": "",
        "x": 200,
        "y": 100,
        "wires": []
    },
    {
        "id": "0fda47379c765734",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "top -bn1 | grep load | awk '{printf \"%.2f\\n\", $(NF-2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get CPU Load",
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "0eb945c44cc7870d"
            ],
            [],
            [
                "ae7361b2449f3c4c"
            ]
        ]
    },
    {
        "id": "0eb945c44cc7870d",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable CpuLoad",
        "func": "global.set('CpuLoad', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "3b7bcfb3e511c91e",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "free -m | awk 'NR==2{printf \"%.1f/%.1fGB %d%%\\n\", $3/1000,$2/1000,$3*100/$2}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get RAM Usage",
        "x": 420,
        "y": 1240,
        "wires": [
            [
                "557cb8d73a025def"
            ],
            [],
            [
                "6226e26c568e0b05"
            ]
        ]
    },
    {
        "id": "557cb8d73a025def",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable Ram",
        "func": "global.set('Ram', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "6226e26c568e0b05",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "df -h | awk '$NF==\"/\"{printf \"%.1f/%.1fGB %s\\n\", $3,$2,$5}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get Disk Usage",
        "x": 420,
        "y": 1320,
        "wires": [
            [
                "fa7b9d62b2d8d682"
            ],
            [],
            []
        ]
    },
    {
        "id": "fa7b9d62b2d8d682",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable Disk",
        "func": "global.set('Disk', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "c4ac9389e39781e3",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "free -t -h | awk 'NR==4{printf \"%d\\n\", $2+0.7}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get total RAM Size",
        "x": 430,
        "y": 1440,
        "wires": [
            [
                "4ce849f7660df523"
            ],
            [],
            [
                "c66ec60dfeab1297"
            ]
        ]
    },
    {
        "id": "4ce849f7660df523",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable TotalRam",
        "func": "global.set('TotalRam', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "977f6b2df90b6fac",
        "type": "inject",
        "z": "5445a7fef5dd7231",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1440,
        "wires": [
            [
                "c4ac9389e39781e3"
            ]
        ]
    },
    {
        "id": "c66ec60dfeab1297",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "df -h | awk '$NF==\"/\"{printf \"%d\\n\", $2*1.1}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get total Disk Size",
        "x": 430,
        "y": 1520,
        "wires": [
            [
                "d728b5299d5dbdc4"
            ],
            [],
            [
                "949bbc9fe705f728"
            ]
        ]
    },
    {
        "id": "d728b5299d5dbdc4",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable TotalDisk",
        "func": "global.set('TotalDisk', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "949bbc9fe705f728",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "ifconfig | grep wlan0",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Check whether there's wireless",
        "x": 470,
        "y": 1600,
        "wires": [
            [
                "cf84f98d178d8f1d"
            ],
            [],
            [
                "fdd5d87fc5bf4fff"
            ]
        ]
    },
    {
        "id": "cf84f98d178d8f1d",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable IsWireless",
        "func": "var result;\n\nif (msg.payload == \"\") {\n    result = \"\"\n} else {\n    result = \"W\"\n}\n\nglobal.set('IsWireless', result);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "ae7361b2449f3c4c",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "vcgencmd measure_temp | awk -F \"[=']\" '{print($2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get CPU Temperature",
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "9e3a9627005adbf2"
            ],
            [],
            [
                "3b7bcfb3e511c91e"
            ]
        ]
    },
    {
        "id": "9e3a9627005adbf2",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable CpuTemp",
        "func": "global.set('CpuTemp', msg.payload.trim());\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "76f4bb86501bc2cb",
        "type": "rpi-gpio in",
        "z": "5445a7fef5dd7231",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 170,
        "y": 700,
        "wires": [
            [
                "1f10cf36ba4b4f51"
            ]
        ]
    },
    {
        "id": "1f10cf36ba4b4f51",
        "type": "switch",
        "z": "5445a7fef5dd7231",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 700,
        "wires": [
            [
                "7a810784755b2915"
            ]
        ]
    },
    {
        "id": "7a810784755b2915",
        "type": "trigger",
        "z": "5445a7fef5dd7231",
        "name": "On for 25ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "25",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 490,
        "y": 700,
        "wires": [
            [
                "a688746cc065dad3"
            ]
        ]
    },
    {
        "id": "a688746cc065dad3",
        "type": "rpi-gpio out",
        "z": "5445a7fef5dd7231",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 700,
        "y": 700,
        "wires": []
    },
    {
        "id": "7ade77ddd5e9cd94",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Beep when user button is pressed",
        "info": "",
        "x": 240,
        "y": 660,
        "wires": []
    },
    {
        "id": "56c92a79f05d255f",
        "type": "link in",
        "z": "5445a7fef5dd7231",
        "name": "Shutdown",
        "links": [
            "34cd93148635b2a2"
        ],
        "x": 385,
        "y": 360,
        "wires": [
            [
                "a1e99527f3949721",
                "abafc847dbf6fa30",
                "946607322a1c245f",
                "2901b9043005c968"
            ]
        ]
    },
    {
        "id": "2901b9043005c968",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Update global.state",
        "func": "global.set('state', -1);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "946607322a1c245f",
        "type": "delay",
        "z": "5445a7fef5dd7231",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 420,
        "wires": [
            [
                "de271e3d5992bd39"
            ]
        ]
    },
    {
        "id": "543be67c559aa29b",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "sudo reboot now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 870,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0b0b904a0c5d83a0",
        "type": "delay",
        "z": "5445a7fef5dd7231",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 540,
        "wires": [
            [
                "543be67c559aa29b"
            ]
        ]
    },
    {
        "id": "08f5d4861be16b40",
        "type": "link in",
        "z": "5445a7fef5dd7231",
        "name": "Reboot",
        "links": [
            "3b832cc6a4984378"
        ],
        "x": 385,
        "y": 540,
        "wires": [
            [
                "0b0b904a0c5d83a0",
                "abafc847dbf6fa30",
                "946607322a1c245f",
                "2901b9043005c968"
            ]
        ]
    },
    {
        "id": "b975166d4ae9d029",
        "type": "switch",
        "z": "5445a7fef5dd7231",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1800,
        "wires": [
            [
                "d7ae7296524f813a"
            ]
        ]
    },
    {
        "id": "41928ef979fd20a2",
        "type": "comment",
        "z": "5445a7fef5dd7231",
        "name": "Remove this if you do not want to enable WiFi AP",
        "info": "",
        "x": 860,
        "y": 1760,
        "wires": []
    },
    {
        "id": "fdd5d87fc5bf4fff",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "lsb_release -c | awk -F \":\" '{print($2)}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get Codename",
        "x": 420,
        "y": 1880,
        "wires": [
            [
                "b7a216bfc378a218"
            ],
            [],
            [
                "9ae354c5c601ab25"
            ]
        ]
    },
    {
        "id": "b7a216bfc378a218",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable Codename",
        "func": "global.set('Codename', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "9ae354c5c601ab25",
        "type": "exec",
        "z": "5445a7fef5dd7231",
        "command": "getconf LONG_BIT",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Get OS Bit",
        "x": 410,
        "y": 1960,
        "wires": [
            [
                "e9b4feb4d8509cab"
            ],
            [],
            []
        ]
    },
    {
        "id": "e9b4feb4d8509cab",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable OSBit",
        "func": "global.set('OSBit', msg.payload.trim());",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "5f5693dd2a8ae029",
        "type": "function",
        "z": "5445a7fef5dd7231",
        "name": "Save to global variable Revision",
        "func": "global.set('Revision', \"v1.1.3\");",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "616f3b01fe83a05c",
        "type": "inject",
        "z": "5445a7fef5dd7231",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 2060,
        "wires": [
            [
                "5f5693dd2a8ae029"
            ]
        ]
    },
    {
        "id": "4c544b6a1063ed9e",
        "type": "String",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 1000,
        "wires": []
    },
    {
        "id": "46d67c0af58949f2",
        "type": "comment",
        "z": "e059348302dd4852",
        "name": "Show the \"Press USER to cont...\" message",
        "info": "",
        "x": 220,
        "y": 560,
        "wires": []
    },
    {
        "id": "47cb5e590092d9ba",
        "type": "function",
        "z": "e059348302dd4852",
        "name": "State Machine",
        "func": "var state = global.get('state') || 0;\n\nif (msg.payload == \"reset\") {\n    state = 0;\n    global.set('state', state);\n\n    msg.payload = state;\n    return msg;\n}\n\nif (msg.payload == 0) {\n    state += 1;\n    if (state == 5) {\n        state = 0;\n    }\n\n    global.set('state', state);\n\n    msg.payload = state;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 820,
        "wires": [
            [
                "82a9652f2800abd2"
            ]
        ]
    },
    {
        "id": "3e2fc3820a82fd82",
        "type": "rpi-gpio in",
        "z": "e059348302dd4852",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 130,
        "y": 880,
        "wires": [
            [
                "47cb5e590092d9ba"
            ]
        ]
    },
    {
        "id": "68b03857599d55ba",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 890,
        "y": 820,
        "wires": [
            [
                "bdc2d47d6064b8b5"
            ],
            [
                "4fb7a1e011f6924a"
            ],
            [
                "63d03d1018d83a55"
            ],
            [
                "ca4af76f0b455d30"
            ],
            [
                "0a13eb801a55220b"
            ]
        ]
    },
    {
        "id": "ea5d25498a148a82",
        "type": "inject",
        "z": "e059348302dd4852",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 110,
        "y": 820,
        "wires": [
            [
                "47cb5e590092d9ba"
            ]
        ]
    },
    {
        "id": "2915e8d7f1e70dfa",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 1060,
        "wires": [
            [
                "bd1e7497f1dce7d2"
            ]
        ]
    },
    {
        "id": "82a9652f2800abd2",
        "type": "trigger",
        "z": "e059348302dd4852",
        "name": "Limit update frequency",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "100",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 640,
        "y": 820,
        "wires": [
            [
                "68b03857599d55ba",
                "c4f5922cb26a3998"
            ]
        ]
    },
    {
        "id": "fc8c66e2e0922097",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Bottom Text",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 3,\n    \"y\": 56,\n    \"text\": \"Press USER to cont...\"\n}",
        "output": "json",
        "x": 530,
        "y": 660,
        "wires": [
            [
                "7c62001e563e4156"
            ]
        ]
    },
    {
        "id": "44b257e233e15227",
        "type": "Line",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 710,
        "y": 620,
        "wires": []
    },
    {
        "id": "df66aae5f2698be1",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 128,\n    \"y0\": 52,\n    \"y1\": 52,\n    \"color\": 1\n}",
        "output": "json",
        "x": 500,
        "y": 620,
        "wires": [
            [
                "44b257e233e15227",
                "12882f065f5a841b"
            ]
        ]
    },
    {
        "id": "c7ccc0334eb50118",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Instruction 1-1",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 15,\n    \"text\": \"1. Connect to WiFi AP\"\n}",
        "output": "json",
        "x": 1380,
        "y": 540,
        "wires": [
            [
                "9067addd23332e57",
                "807d8dc80041cdb8"
            ]
        ]
    },
    {
        "id": "5fe6b19a8d71f2db",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Instruction 1-2",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 30,\n    \"text\": \"   SSID: iriv\"\n}",
        "output": "json",
        "x": 1380,
        "y": 580,
        "wires": [
            [
                "7a70498d942f4bce",
                "807d8dc80041cdb8"
            ]
        ]
    },
    {
        "id": "1a04133fc32a6792",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Instruction 1-3",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 40,\n    \"text\": \"   Password: iriv1234\"\n}",
        "output": "json",
        "x": 1380,
        "y": 620,
        "wires": [
            [
                "807d8dc80041cdb8"
            ]
        ]
    },
    {
        "id": "9c679bdd0fda09a5",
        "type": "String",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 560,
        "wires": []
    },
    {
        "id": "67844b27ca269d92",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show instruction title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"ACCESS DASHBOARD:\"\n}",
        "output": "json",
        "x": 1380,
        "y": 460,
        "wires": [
            [
                "3195e6731f24a9c7",
                "807d8dc80041cdb8"
            ]
        ]
    },
    {
        "id": "7c62001e563e4156",
        "type": "String",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 710,
        "y": 660,
        "wires": []
    },
    {
        "id": "1ca737c8e74a22a5",
        "type": "FillRectangle",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 890,
        "y": 920,
        "wires": []
    },
    {
        "id": "c4f5922cb26a3998",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Clear but retain bottom message",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"w\": 128,\n    \"h\": 49,\n    \"color\": 0\n}",
        "output": "json",
        "x": 670,
        "y": 920,
        "wires": [
            [
                "1ca737c8e74a22a5"
            ]
        ]
    },
    {
        "id": "93da38cd26e89d3b",
        "type": "inject",
        "z": "e059348302dd4852",
        "name": "Run once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "df66aae5f2698be1"
            ]
        ]
    },
    {
        "id": "5662d80d439cd342",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Instruction 2-2",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 33,\n    \"text\": \"   iriv.local:1880/ui\"\n}",
        "output": "json",
        "x": 1380,
        "y": 820,
        "wires": [
            [
                "d6192028a8392d38"
            ]
        ]
    },
    {
        "id": "f8be6e33fe59c735",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Instruction 2-1",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 18,\n    \"text\": \"2. Open this url:\"\n}",
        "output": "json",
        "x": 1380,
        "y": 780,
        "wires": [
            [
                "b3a3a23d975054ae",
                "d6192028a8392d38"
            ]
        ]
    },
    {
        "id": "f399a42abb16b1ad",
        "type": "String",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 780,
        "wires": []
    },
    {
        "id": "7fbe870b32043c70",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show instruction title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"ACCESS DASHBOARD:\"\n}",
        "output": "json",
        "x": 1380,
        "y": 700,
        "wires": [
            [
                "c711b624259b81ee",
                "d6192028a8392d38"
            ]
        ]
    },
    {
        "id": "99b8794dfd97d91e",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show IRIV PiControl",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"size\": 2,\n    \"text\": \"IRIV PiCtrl\"\n}",
        "output": "json",
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "f070aa2adde760ca",
                "8ad9109e2e4a0a36"
            ]
        ]
    },
    {
        "id": "240bd4794efe75b8",
        "type": "String",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 320,
        "wires": []
    },
    {
        "id": "ec0f86e3bfd31f63",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Model",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 2,\n    \"y\": 28,\n    \"size\": 2,\n    \"text\": \"{{global.IsWireless}}R{{global.TotalRam}}E{{global.TotalDisk}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 320,
        "wires": [
            [
                "f070aa2adde760ca",
                "34c3390d76436038"
            ]
        ]
    },
    {
        "id": "708b1601fcc4c862",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show IP title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"IP ADDRESSES:\"\n}",
        "output": "json",
        "x": 1350,
        "y": 900,
        "wires": [
            [
                "83cd0f60798471b7",
                "991c532d554e63df"
            ]
        ]
    },
    {
        "id": "e14207c6f98a1aa3",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show eth0",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 15,\n    \"text\": \"eth0: {{global.IpEth0}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 980,
        "wires": [
            [
                "8662c8b52f52a42b",
                "991c532d554e63df"
            ]
        ]
    },
    {
        "id": "50cfe551baf6634f",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show eth1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 27,\n    \"text\": \"eth1: {{global.IpEth1}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1020,
        "wires": [
            [
                "c427b108497e6ef9",
                "991c532d554e63df"
            ]
        ]
    },
    {
        "id": "9f313e419bada54e",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show wlan0",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 39,\n    \"text\": \"wlan0: {{global.IpWlan0}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1060,
        "wires": [
            [
                "2915e8d7f1e70dfa",
                "991c532d554e63df"
            ]
        ]
    },
    {
        "id": "986df09df783c6c8",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Status title",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"text\": \"CM4 STATUS:\"\n}",
        "output": "json",
        "x": 1370,
        "y": 1140,
        "wires": [
            [
                "15446f65c461360b",
                "25d0e6cb2c178d22"
            ]
        ]
    },
    {
        "id": "79575f220d4dfa68",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Load & Temp",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 15,\n    \"text\": \"Load: {{global.CpuLoad}} Temp: {{global.CpuTemp}}\"\n}",
        "output": "json",
        "x": 1370,
        "y": 1220,
        "wires": [
            [
                "15446f65c461360b",
                "f73af2ee572832e8"
            ]
        ]
    },
    {
        "id": "fb6a157bbf3ad2da",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show RAM",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 27,\n    \"text\": \"RAM:  {{{global.Ram}}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1260,
        "wires": [
            [
                "15446f65c461360b",
                "75fff9bb3c7c56dd"
            ]
        ]
    },
    {
        "id": "0fd3b0e6275c5afa",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Disk",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"x\": 1,\n    \"y\": 39,\n    \"text\": \"Disk: {{{global.Disk}}}\"\n}",
        "output": "json",
        "x": 1350,
        "y": 1300,
        "wires": [
            [
                "bffeeb7a0f989c87",
                "15446f65c461360b"
            ]
        ]
    },
    {
        "id": "e0b655b24d767f7c",
        "type": "String",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 1240,
        "wires": []
    },
    {
        "id": "ba5250c6a66c834f",
        "type": "Line",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 500,
        "wires": []
    },
    {
        "id": "df0410e05074279c",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 100,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 500,
        "wires": [
            [
                "23cc7b3fe42d075e",
                "bf1c56e9fa8b40b3"
            ]
        ]
    },
    {
        "id": "94e0c36675486a27",
        "type": "Line",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 740,
        "wires": []
    },
    {
        "id": "f7b59444a74a9183",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 100,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 740,
        "wires": [
            [
                "266e818d197bc9c7",
                "2100d078ef7410f3"
            ]
        ]
    },
    {
        "id": "a4cdae48bfc4f014",
        "type": "Line",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 940,
        "wires": []
    },
    {
        "id": "281b4b047c0a4463",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 77,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 940,
        "wires": [
            [
                "f01ce313a1230232",
                "1572d2a13e768dfa"
            ]
        ]
    },
    {
        "id": "024cb06b927f7db7",
        "type": "Line",
        "z": "e059348302dd4852",
        "name": "",
        "display": "7e4cdd0309f5b525",
        "x": 1830,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f7c06d53c362be14",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Draw Line",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"x0\": 1,\n    \"x1\": 65,\n    \"y0\": 9,\n    \"y1\": 9,\n    \"color\": 1\n}",
        "output": "json",
        "x": 1340,
        "y": 1180,
        "wires": [
            [
                "27a2cee75f250399",
                "b2617788b39624ef"
            ]
        ]
    },
    {
        "id": "23cc7b3fe42d075e",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 540,
        "wires": [
            [
                "c7ccc0334eb50118"
            ]
        ]
    },
    {
        "id": "9067addd23332e57",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 580,
        "wires": [
            [
                "5fe6b19a8d71f2db"
            ]
        ]
    },
    {
        "id": "7a70498d942f4bce",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 620,
        "wires": [
            [
                "1a04133fc32a6792"
            ]
        ]
    },
    {
        "id": "3195e6731f24a9c7",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 500,
        "wires": [
            [
                "df0410e05074279c"
            ]
        ]
    },
    {
        "id": "4fb7a1e011f6924a",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 460,
        "wires": [
            [
                "67844b27ca269d92"
            ]
        ]
    },
    {
        "id": "bdc2d47d6064b8b5",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 240,
        "wires": [
            [
                "99b8794dfd97d91e"
            ]
        ]
    },
    {
        "id": "24179b89894b4492",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 320,
        "wires": [
            [
                "ec0f86e3bfd31f63"
            ]
        ]
    },
    {
        "id": "63d03d1018d83a55",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 700,
        "wires": [
            [
                "7fbe870b32043c70"
            ]
        ]
    },
    {
        "id": "c711b624259b81ee",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 740,
        "wires": [
            [
                "f7b59444a74a9183"
            ]
        ]
    },
    {
        "id": "266e818d197bc9c7",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 780,
        "wires": [
            [
                "f8be6e33fe59c735"
            ]
        ]
    },
    {
        "id": "b3a3a23d975054ae",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 820,
        "wires": [
            [
                "5662d80d439cd342"
            ]
        ]
    },
    {
        "id": "ca4af76f0b455d30",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 900,
        "wires": [
            [
                "708b1601fcc4c862"
            ]
        ]
    },
    {
        "id": "83cd0f60798471b7",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 940,
        "wires": [
            [
                "281b4b047c0a4463"
            ]
        ]
    },
    {
        "id": "f01ce313a1230232",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 980,
        "wires": [
            [
                "e14207c6f98a1aa3"
            ]
        ]
    },
    {
        "id": "8662c8b52f52a42b",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1020,
        "wires": [
            [
                "50cfe551baf6634f"
            ]
        ]
    },
    {
        "id": "c427b108497e6ef9",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1060,
        "wires": [
            [
                "9f313e419bada54e"
            ]
        ]
    },
    {
        "id": "0a13eb801a55220b",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1140,
        "wires": [
            [
                "986df09df783c6c8"
            ]
        ]
    },
    {
        "id": "25d0e6cb2c178d22",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1180,
        "wires": [
            [
                "f7c06d53c362be14"
            ]
        ]
    },
    {
        "id": "b2617788b39624ef",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1220,
        "wires": [
            [
                "79575f220d4dfa68"
            ]
        ]
    },
    {
        "id": "f73af2ee572832e8",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1260,
        "wires": [
            [
                "fb6a157bbf3ad2da"
            ]
        ]
    },
    {
        "id": "75fff9bb3c7c56dd",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1300,
        "wires": [
            [
                "0fd3b0e6275c5afa"
            ]
        ]
    },
    {
        "id": "bffeeb7a0f989c87",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 1300,
        "wires": [
            [
                "e6f00ecb0971b54a"
            ]
        ]
    },
    {
        "id": "f070aa2adde760ca",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 320,
        "wires": [
            [
                "240bd4794efe75b8"
            ]
        ]
    },
    {
        "id": "bf1c56e9fa8b40b3",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 500,
        "wires": [
            [
                "ba5250c6a66c834f"
            ]
        ]
    },
    {
        "id": "807d8dc80041cdb8",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 560,
        "wires": [
            [
                "9c679bdd0fda09a5"
            ]
        ]
    },
    {
        "id": "2100d078ef7410f3",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 740,
        "wires": [
            [
                "94e0c36675486a27"
            ]
        ]
    },
    {
        "id": "d6192028a8392d38",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 780,
        "wires": [
            [
                "f399a42abb16b1ad"
            ]
        ]
    },
    {
        "id": "1572d2a13e768dfa",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 940,
        "wires": [
            [
                "a4cdae48bfc4f014"
            ]
        ]
    },
    {
        "id": "991c532d554e63df",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 1000,
        "wires": [
            [
                "4c544b6a1063ed9e"
            ]
        ]
    },
    {
        "id": "27a2cee75f250399",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 1180,
        "wires": [
            [
                "024cb06b927f7db7"
            ]
        ]
    },
    {
        "id": "15446f65c461360b",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 1240,
        "wires": [
            [
                "e0b655b24d767f7c"
            ]
        ]
    },
    {
        "id": "bd1e7497f1dce7d2",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1060,
        "wires": [
            [
                "f01ce313a1230232"
            ]
        ]
    },
    {
        "id": "e6f00ecb0971b54a",
        "type": "switch",
        "z": "e059348302dd4852",
        "name": "Verify state again",
        "property": "state",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1300,
        "wires": [
            [
                "b2617788b39624ef"
            ]
        ]
    },
    {
        "id": "c12af128d03aba47",
        "type": "comment",
        "z": "e059348302dd4852",
        "name": "Show the main message depending on state machine",
        "info": "",
        "x": 260,
        "y": 760,
        "wires": []
    },
    {
        "id": "12882f065f5a841b",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 350,
        "y": 660,
        "wires": [
            [
                "fc8c66e2e0922097"
            ]
        ]
    },
    {
        "id": "1f3faf39dcc81b2a",
        "type": "comment",
        "z": "e059348302dd4852",
        "name": "Sate = -1 means shutting down",
        "info": "",
        "x": 410,
        "y": 860,
        "wires": []
    },
    {
        "id": "4b95e8a87951172a",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Revision",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 78,\n    \"y\": 20,\n    \"size\": 1,\n    \"text\": \"{{global.Revision}}\"\n}",
        "output": "json",
        "x": 1360,
        "y": 280,
        "wires": [
            [
                "f070aa2adde760ca",
                "24179b89894b4492"
            ]
        ]
    },
    {
        "id": "8ad9109e2e4a0a36",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 280,
        "wires": [
            [
                "4b95e8a87951172a"
            ]
        ]
    },
    {
        "id": "30af8ee86d3e7385",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show Codename",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 78,\n    \"y\": 30,\n    \"size\": 1,\n    \"text\": \"{{global.Codename}}\"\n}",
        "output": "json",
        "x": 1370,
        "y": 360,
        "wires": [
            [
                "f070aa2adde760ca",
                "1741621e8ef22db4"
            ]
        ]
    },
    {
        "id": "34c3390d76436038",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 360,
        "wires": [
            [
                "30af8ee86d3e7385"
            ]
        ]
    },
    {
        "id": "fac728d70e1923ab",
        "type": "template",
        "z": "e059348302dd4852",
        "name": "Show OS Bit",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"x\": 78,\n    \"y\": 40,\n    \"size\": 1,\n    \"text\": \"{{global.OSBit}}-bit\"\n}",
        "output": "json",
        "x": 1350,
        "y": 400,
        "wires": [
            [
                "f070aa2adde760ca"
            ]
        ]
    },
    {
        "id": "1741621e8ef22db4",
        "type": "delay",
        "z": "e059348302dd4852",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 400,
        "wires": [
            [
                "fac728d70e1923ab"
            ]
        ]
    },
    {
        "id": "ec39ee34b118e923",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "LED0",
        "tooltip": "",
        "group": "88ffe255855640ed",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "d16fc121e0ec61d2"
            ]
        ]
    },
    {
        "id": "d16fc121e0ec61d2",
        "type": "rpi-gpio out",
        "z": "62c06baefd79902a",
        "name": "LED0 Output",
        "pin": "20",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "89cc88a3e1740433",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "LED1",
        "tooltip": "",
        "group": "88ffe255855640ed",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "ea4d1d8be785fe94"
            ]
        ]
    },
    {
        "id": "ea4d1d8be785fe94",
        "type": "rpi-gpio out",
        "z": "62c06baefd79902a",
        "name": "LED1 Output",
        "pin": "21",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 610,
        "y": 200,
        "wires": []
    },
    {
        "id": "cdcdf33c16171195",
        "type": "ui_button",
        "z": "62c06baefd79902a",
        "name": "",
        "group": "88ffe255855640ed",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Buzzer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "volume_up",
        "payload": "True",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "150696090b1cc041"
            ]
        ]
    },
    {
        "id": "150696090b1cc041",
        "type": "trigger",
        "z": "62c06baefd79902a",
        "name": "On for 250ms",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 620,
        "y": 260,
        "wires": [
            [
                "42bb863d6a4fe115"
            ]
        ]
    },
    {
        "id": "42bb863d6a4fe115",
        "type": "rpi-gpio out",
        "z": "62c06baefd79902a",
        "name": "Buzzer Output",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 260,
        "wires": []
    },
    {
        "id": "750146473b0c58b6",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "Button",
        "tooltip": "",
        "group": "88ffe255855640ed",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 810,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "e03de9264d51e128",
        "type": "rpi-gpio in",
        "z": "62c06baefd79902a",
        "name": "User Button",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "94b8b844ba9c91d3"
            ]
        ]
    },
    {
        "id": "94b8b844ba9c91d3",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Invert",
        "func": "if (msg.payload == 0) {\n    msg.payload = true;\n} else {\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 320,
        "wires": [
            [
                "750146473b0c58b6"
            ]
        ]
    },
    {
        "id": "60282391e45ceefe",
        "type": "ui_button",
        "z": "62c06baefd79902a",
        "name": "",
        "group": "5b01c9ef39d93b12",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "#ff0000",
        "className": "",
        "icon": "power_settings_new",
        "payload": "True",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 2000,
        "wires": [
            [
                "34cd93148635b2a2"
            ]
        ]
    },
    {
        "id": "4cddbf0560cbb036",
        "type": "ui_button",
        "z": "62c06baefd79902a",
        "name": "",
        "group": "5b01c9ef39d93b12",
        "order": 10,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FFC107",
        "className": "",
        "icon": "refresh",
        "payload": "True",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 2060,
        "wires": [
            [
                "3b832cc6a4984378"
            ]
        ]
    },
    {
        "id": "c2a67d4bb8214a3c",
        "type": "comment",
        "z": "62c06baefd79902a",
        "name": "System",
        "info": "",
        "x": 390,
        "y": 1340,
        "wires": []
    },
    {
        "id": "9608d87e06c2882c",
        "type": "comment",
        "z": "62c06baefd79902a",
        "name": "Button, LEDs & Buzzer",
        "info": "",
        "x": 440,
        "y": 100,
        "wires": []
    },
    {
        "id": "dc5a9bafa4955fb4",
        "type": "comment",
        "z": "62c06baefd79902a",
        "name": "Digital Inputs",
        "info": "",
        "x": 410,
        "y": 460,
        "wires": []
    },
    {
        "id": "039575720e3bf458",
        "type": "rpi-gpio in",
        "z": "62c06baefd79902a",
        "name": "DI0",
        "pin": "13",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 500,
        "wires": [
            [
                "976396ca4f59f2ce"
            ]
        ]
    },
    {
        "id": "35d4ccba2e282c31",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "DI0",
        "tooltip": "",
        "group": "f7e1dc67e31c2f09",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "976396ca4f59f2ce",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 500,
        "wires": [
            [
                "35d4ccba2e282c31"
            ]
        ]
    },
    {
        "id": "82411685dc2c38fa",
        "type": "rpi-gpio in",
        "z": "62c06baefd79902a",
        "name": "DI1",
        "pin": "17",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 560,
        "wires": [
            [
                "ac69d1180b53a4eb"
            ]
        ]
    },
    {
        "id": "96de81e652eaa753",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "DI1",
        "tooltip": "",
        "group": "f7e1dc67e31c2f09",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "ac69d1180b53a4eb",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 560,
        "wires": [
            [
                "96de81e652eaa753"
            ]
        ]
    },
    {
        "id": "5c40e7c00b067253",
        "type": "rpi-gpio in",
        "z": "62c06baefd79902a",
        "name": "DI2",
        "pin": "22",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 620,
        "wires": [
            [
                "4cda470d704d8e80"
            ]
        ]
    },
    {
        "id": "b9ef064172544cc3",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "DI2",
        "tooltip": "",
        "group": "f7e1dc67e31c2f09",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "4cda470d704d8e80",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 620,
        "wires": [
            [
                "b9ef064172544cc3"
            ]
        ]
    },
    {
        "id": "38544c13eafe8a92",
        "type": "rpi-gpio in",
        "z": "62c06baefd79902a",
        "name": "DI3",
        "pin": "27",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 390,
        "y": 680,
        "wires": [
            [
                "faebef991002e65d"
            ]
        ]
    },
    {
        "id": "9d4b7e0bc8fa792e",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "DI3",
        "tooltip": "",
        "group": "f7e1dc67e31c2f09",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "faebef991002e65d",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 680,
        "wires": [
            [
                "9d4b7e0bc8fa792e"
            ]
        ]
    },
    {
        "id": "7fb98677f08e50a6",
        "type": "comment",
        "z": "62c06baefd79902a",
        "name": "Digital Outputs",
        "info": "",
        "x": 420,
        "y": 780,
        "wires": []
    },
    {
        "id": "28aa8df4d883d6fd",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "DO0",
        "tooltip": "",
        "group": "5761374055a6c59a",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 820,
        "wires": [
            [
                "3504c6f196126991"
            ]
        ]
    },
    {
        "id": "3504c6f196126991",
        "type": "rpi-gpio out",
        "z": "62c06baefd79902a",
        "name": "DO0 Output",
        "pin": "23",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 820,
        "wires": []
    },
    {
        "id": "2bc17a430cc19406",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "DO1",
        "tooltip": "",
        "group": "5761374055a6c59a",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 880,
        "wires": [
            [
                "71b3041a1ca6fe1c"
            ]
        ]
    },
    {
        "id": "71b3041a1ca6fe1c",
        "type": "rpi-gpio out",
        "z": "62c06baefd79902a",
        "name": "DO1 Output",
        "pin": "24",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 880,
        "wires": []
    },
    {
        "id": "a8437adb5e24c218",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "DO2",
        "tooltip": "",
        "group": "5761374055a6c59a",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 940,
        "wires": [
            [
                "d94e2f174d4b97ae"
            ]
        ]
    },
    {
        "id": "d94e2f174d4b97ae",
        "type": "rpi-gpio out",
        "z": "62c06baefd79902a",
        "name": "DO2 Output",
        "pin": "25",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 940,
        "wires": []
    },
    {
        "id": "f89fb3a36bb8a961",
        "type": "ui_switch",
        "z": "62c06baefd79902a",
        "name": "",
        "label": "DO3",
        "tooltip": "",
        "group": "5761374055a6c59a",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 1000,
        "wires": [
            [
                "fda1af32a5f33cfe"
            ]
        ]
    },
    {
        "id": "fda1af32a5f33cfe",
        "type": "rpi-gpio out",
        "z": "62c06baefd79902a",
        "name": "DO3 Output",
        "pin": "26",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 570,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ac3ac06d824af009",
        "type": "ui_text",
        "z": "62c06baefd79902a",
        "group": "88ffe255855640ed",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Button Message",
        "label": "Press user button for 5 seconds to shutdown IRIV PiControl.",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 420,
        "y": 380,
        "wires": []
    },
    {
        "id": "fa3f0e94768397a8",
        "type": "comment",
        "z": "62c06baefd79902a",
        "name": "Analog Inputs",
        "info": "",
        "x": 410,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6b65770f7755ee39",
        "type": "ui_gauge",
        "z": "62c06baefd79902a",
        "name": "",
        "group": "23019df79a890845",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN0",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1100,
        "wires": []
    },
    {
        "id": "0bb9861fd2482d3d",
        "type": "ui_gauge",
        "z": "62c06baefd79902a",
        "name": "",
        "group": "23019df79a890845",
        "order": 5,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN1",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1160,
        "wires": []
    },
    {
        "id": "dc5c11934b2fcee1",
        "type": "ui_gauge",
        "z": "62c06baefd79902a",
        "name": "",
        "group": "23019df79a890845",
        "order": 3,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN2",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1220,
        "wires": []
    },
    {
        "id": "8852ef03102f5580",
        "type": "ui_gauge",
        "z": "62c06baefd79902a",
        "name": "",
        "group": "23019df79a890845",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "AN3",
        "label": "V",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1280,
        "wires": []
    },
    {
        "id": "fde6102c008c0d55",
        "type": "inject",
        "z": "62c06baefd79902a",
        "name": "Every 500ms",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 1120,
        "wires": [
            [
                "b2f9808e6e192c14"
            ]
        ]
    },
    {
        "id": "8ed924bb748218e3",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Scale Voltage",
        "func": "var msg0 = { payload: msg.payload.length };\nvar msg1 = { payload: msg.payload.length };\nvar msg2 = { payload: msg.payload.length };\nvar msg3 = { payload: msg.payload.length };\n\n\nmsg0.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_0.Volts * 2.5;\nif (msg0.payload < 0) {\n    msg0.payload = 0;\n}\n\nmsg1.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_1.Volts * 2.5;\nif (msg1.payload < 0) {\n    msg1.payload = 0;\n}\n\nmsg2.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_2.Volts * 2.5;\nif (msg2.payload < 0) {\n    msg2.payload = 0;\n}\n\nmsg3.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].singleEnded.channel_3.Volts * 2.5;\nif (msg3.payload < 0) {\n    msg3.payload = 0;\n}\n\nreturn [msg0, msg1, msg2, msg3];",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1120,
        "wires": [
            [
                "6b65770f7755ee39"
            ],
            [
                "0bb9861fd2482d3d"
            ],
            [
                "dc5c11934b2fcee1"
            ],
            [
                "8852ef03102f5580"
            ]
        ]
    },
    {
        "id": "b2f9808e6e192c14",
        "type": "ads1x15_i2c",
        "z": "62c06baefd79902a",
        "property": "payload",
        "name": "",
        "i2c_device_number": 1,
        "chip": "0x01",
        "i2c_address": "0x48",
        "inputsForChannel": "singleEnded",
        "singleEndedChannel0": true,
        "singleEndedChannel1": true,
        "singleEndedChannel2": true,
        "singleEndedChannel3": true,
        "differentialChannel0_1": true,
        "differentialChannel0_3": false,
        "differentialChannel1_3": false,
        "differentialChannel2_3": true,
        "samplesPerSecond0": "920",
        "samplesPerSecond1": "128",
        "progGainAmp": "4096",
        "x": 610,
        "y": 1120,
        "wires": [
            [
                "8ed924bb748218e3"
            ]
        ]
    },
    {
        "id": "822d28d21e12240b",
        "type": "ui_text",
        "z": "62c06baefd79902a",
        "group": "5b01c9ef39d93b12",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "eth0",
        "label": "eth0 IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1580,
        "wires": []
    },
    {
        "id": "da4f01f1cb203666",
        "type": "inject",
        "z": "62c06baefd79902a",
        "name": "Every 2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 1580,
        "wires": [
            [
                "9e6d86ee75895bd9",
                "e3be9c59a398d806",
                "cd338b8cd74b51b4",
                "c8607c96ca93c4f5",
                "aaa2da7bf77f2358",
                "8a83915a5a3f02e4",
                "4f8ab336209bf378"
            ]
        ]
    },
    {
        "id": "9e6d86ee75895bd9",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Get global variable IpEth0",
        "func": "msg.payload = global.get('IpEth0');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1580,
        "wires": [
            [
                "822d28d21e12240b"
            ]
        ]
    },
    {
        "id": "c3a32c35cdef8f4b",
        "type": "ui_text",
        "z": "62c06baefd79902a",
        "group": "5b01c9ef39d93b12",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "eth1",
        "label": "eth1 IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1620,
        "wires": []
    },
    {
        "id": "e3be9c59a398d806",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Get global variable IpEth1",
        "func": "msg.payload = global.get('IpEth1');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1620,
        "wires": [
            [
                "c3a32c35cdef8f4b"
            ]
        ]
    },
    {
        "id": "33b668c25cfd16a8",
        "type": "ui_text",
        "z": "62c06baefd79902a",
        "group": "5b01c9ef39d93b12",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "wlan0",
        "label": "wlan0 IP:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1660,
        "wires": []
    },
    {
        "id": "cd338b8cd74b51b4",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Get global variable IpWlan0",
        "func": "msg.payload = global.get('IpWlan0');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1660,
        "wires": [
            [
                "33b668c25cfd16a8"
            ]
        ]
    },
    {
        "id": "5d8c34500db77fa5",
        "type": "ui_text",
        "z": "62c06baefd79902a",
        "group": "5b01c9ef39d93b12",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "CPU Load",
        "label": "CPU Load:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1740,
        "wires": []
    },
    {
        "id": "c8607c96ca93c4f5",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Get global variable CpuLoad",
        "func": "msg.payload = global.get('CpuLoad');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1740,
        "wires": [
            [
                "5d8c34500db77fa5"
            ]
        ]
    },
    {
        "id": "8d892f59f1b16913",
        "type": "ui_text",
        "z": "62c06baefd79902a",
        "group": "5b01c9ef39d93b12",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "CPU Temp",
        "label": "CPU Temp:",
        "format": "{{msg.payload}} C",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1800,
        "wires": []
    },
    {
        "id": "aaa2da7bf77f2358",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Get global variable CpuTemp",
        "func": "msg.payload = global.get('CpuTemp');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1800,
        "wires": [
            [
                "8d892f59f1b16913"
            ]
        ]
    },
    {
        "id": "8e80e1ec14f94b59",
        "type": "ui_text",
        "z": "62c06baefd79902a",
        "group": "5b01c9ef39d93b12",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Ram",
        "label": "RAM:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1860,
        "wires": []
    },
    {
        "id": "8a83915a5a3f02e4",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Get global variable Ram",
        "func": "msg.payload = global.get('Ram');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1860,
        "wires": [
            [
                "8e80e1ec14f94b59"
            ]
        ]
    },
    {
        "id": "2133ac632fd7220c",
        "type": "ui_text",
        "z": "62c06baefd79902a",
        "group": "5b01c9ef39d93b12",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Disk",
        "label": "Disk:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1920,
        "wires": []
    },
    {
        "id": "4f8ab336209bf378",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Get global variable Disk",
        "func": "msg.payload = global.get('Disk');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1920,
        "wires": [
            [
                "2133ac632fd7220c"
            ]
        ]
    },
    {
        "id": "34cd93148635b2a2",
        "type": "link out",
        "z": "62c06baefd79902a",
        "name": "Shutdown",
        "mode": "link",
        "links": [
            "56c92a79f05d255f"
        ],
        "x": 565,
        "y": 2000,
        "wires": []
    },
    {
        "id": "3b832cc6a4984378",
        "type": "link out",
        "z": "62c06baefd79902a",
        "name": "Reboot",
        "mode": "link",
        "links": [
            "08f5d4861be16b40"
        ],
        "x": 565,
        "y": 2060,
        "wires": []
    },
    {
        "id": "5fd50e2c84b7143a",
        "type": "ui_text",
        "z": "62c06baefd79902a",
        "group": "5b01c9ef39d93b12",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "OS",
        "label": "OS:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 930,
        "y": 1400,
        "wires": []
    },
    {
        "id": "93edce6fcbf6b8f9",
        "type": "inject",
        "z": "62c06baefd79902a",
        "name": "Run Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 1400,
        "wires": [
            [
                "faa3f5284120d1d2",
                "5f182ee507748ee0"
            ]
        ]
    },
    {
        "id": "faa3f5284120d1d2",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Get global variable Codename & OSBit",
        "func": "msg.payload = global.get('Codename') + \" \" + global.get('OSBit') + \"-bit\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "5fd50e2c84b7143a"
            ]
        ]
    },
    {
        "id": "fd0ac508be3bf537",
        "type": "ui_text",
        "z": "62c06baefd79902a",
        "group": "5b01c9ef39d93b12",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Revision",
        "label": "Dashboard Revision:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 1440,
        "wires": []
    },
    {
        "id": "5f182ee507748ee0",
        "type": "function",
        "z": "62c06baefd79902a",
        "name": "Get global variable Revision",
        "func": "msg.payload = global.get('Revision');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1440,
        "wires": [
            [
                "fd0ac508be3bf537"
            ]
        ]
    },
    {
        "id": "b22808dfe7d5f3e1",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "VL1-2",
        "unitId": "1",
        "data": "voltage-L1L2",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "31830127a94191d7"
            ]
        ]
    },
    {
        "id": "31830127a94191d7",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "2b64ee31948f547c"
            ],
            []
        ]
    },
    {
        "id": "6da86a6d387342fc",
        "type": "inject",
        "z": "1518edd396566b6b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "b22808dfe7d5f3e1",
                "e81ac7fe43a9f9ea",
                "9786dd4cb649d923",
                "5e8852d5eb667af3",
                "1b105c138a207272",
                "c1c60762b1883cb8",
                "091edb98e5e3aca0",
                "bfaf95c4fa6ebca1",
                "2fd24bd9b8708482",
                "da4e59811c57b670",
                "a0a15052fa49a10c",
                "7d995ff4c61f768a"
            ]
        ]
    },
    {
        "id": "2b64ee31948f547c",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 120,
        "wires": [
            [
                "9e92a19597a6a6d5"
            ]
        ]
    },
    {
        "id": "9e92a19597a6a6d5",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "27f02fb5e4dec81e"
            ]
        ]
    },
    {
        "id": "e81ac7fe43a9f9ea",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "VL2-3",
        "unitId": "1",
        "data": "voltage-L2L3",
        "x": 370,
        "y": 180,
        "wires": [
            [
                "39388fa5d5934194"
            ]
        ]
    },
    {
        "id": "39388fa5d5934194",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "67517023d54ce539"
            ],
            []
        ]
    },
    {
        "id": "67517023d54ce539",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 180,
        "wires": [
            [
                "ced5db549394ac98"
            ]
        ]
    },
    {
        "id": "ced5db549394ac98",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 180,
        "wires": [
            [
                "ba8e9722d1f6b03f"
            ]
        ]
    },
    {
        "id": "9786dd4cb649d923",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "VL3-1",
        "unitId": "1",
        "data": "voltage-L3L1",
        "x": 370,
        "y": 240,
        "wires": [
            [
                "2c7bc7bed18d89b9"
            ]
        ]
    },
    {
        "id": "2c7bc7bed18d89b9",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 240,
        "wires": [
            [
                "39392c6056b06340"
            ],
            []
        ]
    },
    {
        "id": "39392c6056b06340",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 240,
        "wires": [
            [
                "a3c94c2e05de4fcc"
            ]
        ]
    },
    {
        "id": "a3c94c2e05de4fcc",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 240,
        "wires": [
            [
                "4d1f4a422f3a56d3"
            ]
        ]
    },
    {
        "id": "5e8852d5eb667af3",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "VL1-N",
        "unitId": "1",
        "data": "voltage-L1N",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "846c26f7e5b1e78c"
            ]
        ]
    },
    {
        "id": "846c26f7e5b1e78c",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 300,
        "wires": [
            [
                "82706be37af2d5a1"
            ],
            []
        ]
    },
    {
        "id": "82706be37af2d5a1",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 300,
        "wires": [
            [
                "4f6e7fabc8e29ac6"
            ]
        ]
    },
    {
        "id": "4f6e7fabc8e29ac6",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "1b105c138a207272",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "VL2-N",
        "unitId": "1",
        "data": "voltage-L2N",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "94a5128edbbd695f"
            ]
        ]
    },
    {
        "id": "94a5128edbbd695f",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 360,
        "wires": [
            [
                "0416b1f018f7805a"
            ],
            []
        ]
    },
    {
        "id": "0416b1f018f7805a",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 360,
        "wires": [
            [
                "8f9a94403bd75f85"
            ]
        ]
    },
    {
        "id": "8f9a94403bd75f85",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "c1c60762b1883cb8",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "VL3-N",
        "unitId": "1",
        "data": "voltage-L3N",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "f756a54396606366"
            ]
        ]
    },
    {
        "id": "f756a54396606366",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "36029607ec5c19f0"
            ],
            []
        ]
    },
    {
        "id": "36029607ec5c19f0",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 420,
        "wires": [
            [
                "3ce0c2ad46052db7"
            ]
        ]
    },
    {
        "id": "3ce0c2ad46052db7",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "091edb98e5e3aca0",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "Total Active Power",
        "unitId": "1",
        "data": "actPowerTot",
        "x": 410,
        "y": 660,
        "wires": [
            [
                "7b9831e42905d5f4"
            ]
        ]
    },
    {
        "id": "7b9831e42905d5f4",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 660,
        "wires": [
            [
                "b901d2f5b0018139"
            ],
            []
        ]
    },
    {
        "id": "b901d2f5b0018139",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 660,
        "wires": [
            [
                "20567c97c29fc0d5"
            ]
        ]
    },
    {
        "id": "20567c97c29fc0d5",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 660,
        "wires": [
            [
                "e3d055b52e1d232f"
            ]
        ]
    },
    {
        "id": "bfaf95c4fa6ebca1",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "I1",
        "unitId": "1",
        "data": "current-P1",
        "x": 370,
        "y": 480,
        "wires": [
            [
                "1e8fae9cd778c317"
            ]
        ]
    },
    {
        "id": "1e8fae9cd778c317",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 480,
        "wires": [
            [
                "6ff7128a0c33488d"
            ],
            []
        ]
    },
    {
        "id": "6ff7128a0c33488d",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 480,
        "wires": [
            [
                "37c5a110a6da066a"
            ]
        ]
    },
    {
        "id": "37c5a110a6da066a",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 480,
        "wires": [
            [
                "79e20b2e0a726d86"
            ]
        ]
    },
    {
        "id": "2fd24bd9b8708482",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "I2",
        "unitId": "1",
        "data": "current-P2",
        "x": 370,
        "y": 540,
        "wires": [
            [
                "802a18925fbf7f52"
            ]
        ]
    },
    {
        "id": "802a18925fbf7f52",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 540,
        "wires": [
            [
                "45dd56a50c5871f8"
            ],
            []
        ]
    },
    {
        "id": "45dd56a50c5871f8",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 540,
        "wires": [
            [
                "c4306f10374584bb"
            ]
        ]
    },
    {
        "id": "c4306f10374584bb",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 540,
        "wires": [
            [
                "b79f96753a84e20a"
            ]
        ]
    },
    {
        "id": "da4e59811c57b670",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "I3",
        "unitId": "1",
        "data": "current-P3",
        "x": 370,
        "y": 600,
        "wires": [
            [
                "b395dc8d3919a806"
            ]
        ]
    },
    {
        "id": "b395dc8d3919a806",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 600,
        "wires": [
            [
                "533b6975d07f7b10"
            ],
            []
        ]
    },
    {
        "id": "533b6975d07f7b10",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 600,
        "wires": [
            [
                "6c48625cce5cd3f3"
            ]
        ]
    },
    {
        "id": "6c48625cce5cd3f3",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 600,
        "wires": [
            [
                "3621679fcc289981"
            ]
        ]
    },
    {
        "id": "a0a15052fa49a10c",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "Total PF",
        "unitId": "1",
        "data": "pFactorTot",
        "x": 380,
        "y": 720,
        "wires": [
            [
                "01c9293813ef182f"
            ]
        ]
    },
    {
        "id": "01c9293813ef182f",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 720,
        "wires": [
            [
                "d7503b6463db52f6"
            ],
            []
        ]
    },
    {
        "id": "d7503b6463db52f6",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 720,
        "wires": [
            [
                "3c5ab4fbb2b29364"
            ]
        ]
    },
    {
        "id": "3c5ab4fbb2b29364",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 720,
        "wires": [
            [
                "a0f9a42e753af836"
            ]
        ]
    },
    {
        "id": "7d995ff4c61f768a",
        "type": "pm5000",
        "z": "1518edd396566b6b",
        "name": "Consumption",
        "unitId": "1",
        "data": "toEnergyActImp",
        "x": 390,
        "y": 780,
        "wires": [
            [
                "a81fedfa0bd73dad"
            ]
        ]
    },
    {
        "id": "a81fedfa0bd73dad",
        "type": "modbus-flex-getter",
        "z": "1518edd396566b6b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "a133df80d59a2190",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 780,
        "wires": [
            [
                "659b2cd553ca585b"
            ],
            []
        ]
    },
    {
        "id": "659b2cd553ca585b",
        "type": "converter",
        "z": "1518edd396566b6b",
        "name": "",
        "unitId": "",
        "data": "",
        "x": 840,
        "y": 780,
        "wires": [
            [
                "12cc7cc6f339d652"
            ]
        ]
    },
    {
        "id": "12cc7cc6f339d652",
        "type": "buffer-parser",
        "z": "1518edd396566b6b",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "bigint64be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 1090,
        "y": 780,
        "wires": [
            [
                "4c8fc418109b75db"
            ]
        ]
    },
    {
        "id": "26ef016b412049e8",
        "type": "opcua-compact-server",
        "z": "1518edd396566b6b",
        "port": "10502",
        "endpoint": "",
        "productUri": "",
        "acceptExternalCommands": true,
        "maxAllowedSessionNumber": "10",
        "maxConnectionsPerEndpoint": "10",
        "maxAllowedSubscriptionNumber": "100",
        "alternateHostname": "",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "allowAnonymous": true,
        "individualCerts": false,
        "isAuditing": false,
        "serverDiscovery": true,
        "users": [],
        "xmlsetsOPCUA": [],
        "publicCertificateFile": "",
        "privateCertificateFile": "",
        "registerServerMethod": "1",
        "discoveryServerEndpointUrl": "opc.tcp://localhost:10502",
        "capabilitiesForMDNS": "",
        "maxNodesPerRead": 1000,
        "maxNodesPerWrite": 1000,
        "maxNodesPerHistoryReadData": 100,
        "maxNodesPerBrowse": 3000,
        "maxBrowseContinuationPoints": "10",
        "maxHistoryContinuationPoints": "10",
        "delayToInit": "1000",
        "delayToClose": "200",
        "serverShutdownTimeout": "100",
        "addressSpaceScript": "function constructAlarmAddressSpace(server, addressSpace, eventObjects, done) {\n  // server = the created node-opcua server\n  // addressSpace = address space of the node-opcua server\n  // eventObjects = add event variables here to hold them in memory from this script\n\n  // internal sandbox objects are:\n  // node = the compact server node,\n  // coreServer = core compact server object for debug and access to NodeOPCUA\n  // this.sandboxNodeContext = node context node-red\n  // this.sandboxFlowContext = flow context node-red\n  // this.sandboxGlobalContext = global context node-red\n  // this.sandboxEnv = env variables\n  // timeout and interval functions as expected from nodejs\n\n  const opcua = coreServer.choreCompact.opcua;\n  const LocalizedText = opcua.LocalizedText;\n  const namespace = addressSpace.getOwnNamespace();\n\n  const Variant = opcua.Variant;\n  const DataType = opcua.DataType;\n  const DataValue = opcua.DataValue;\n\n  var flexServerInternals = this;\n\n  // this.sandboxFlowContext.set(\"ValuePower\", 0);\n  // this.setInterval(() => {\n  //   flexServerInternals.sandboxFlowContext.set(\n  //     \"ValuePower\",\n  //     Math.random() + 50.0\n  //   );\n  // }, 500);\n  // this.sandboxFlowContext.set(\"ValueC1\", 0);\n  // this.sandboxFlowContext.set(\"ValueC2\", 0);\n  // this.sandboxFlowContext.set(\"ValueC3\", 0);\n  // this.sandboxFlowContext.set(\"ValueV1\", 0);\n  // this.sandboxFlowContext.set(\"ValueV2\", 0);\n  // this.sandboxFlowContext.set(\"ValueV3\", 0);\n  // this.sandboxFlowContext.set(\"ValuePF\", 0);\n  // this.sandboxFlowContext.set(\"ValueConsumption\", 0);\n\n\n  // this.sandboxFlowContext.set(\"isoOutput1\", 0);\n  // this.setInterval(() => {\n  //   flexServerInternals.sandboxFlowContext.set(\n  //     \"isoOutput1\",\n  //     Math.random() + 10.0\n  //   );\n  // }, 500);\n\n  // this.sandboxFlowContext.set(\"isoOutput2\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput3\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput4\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput5\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput6\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput7\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput8\", 0);\n\n  coreServer.debugLog(\"init dynamic address space\");\n  const rootFolder = addressSpace.findNode(\"RootFolder\");\n\n  node.warn(\"construct new address space for OPC UA\");\n\n  const myDevice = namespace.addFolder(rootFolder.objects, {\n    \"browseName\": \"Edge Device\"\n  });\n  // const gpioFolder = namespace.addFolder(myDevice, { \"browseName\": \"GPIO\" });\n  const PowerMeterInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Power Meter\"\n  });\n  const DigitalInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Inputs\"\n  });\n  const DigitalOutputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Outputs\"\n  });\n  const DeviceStats = namespace.addFolder(myDevice, {\n    \"browseName\": \"Device Stats\"\n  });\n  const ValueHeartbeat = namespace.addVariable({\n    \"organizedBy\": DeviceStats,\n    \"browseName\": \"ValueHeartbeat\",\n    \"nodeId\": \"ns=1;s=ValueHeartbeat\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueHeartbeat\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueHeartbeat\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n  const ValuePower = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePower\",\n    \"nodeId\": \"ns=1;s=ValuePower\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePower\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePower\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC1\",\n    \"nodeId\": \"ns=1;s=ValueC1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC2\",\n    \"nodeId\": \"ns=1;s=ValueC2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC3\",\n    \"nodeId\": \"ns=1;s=ValueC3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV1\",\n    \"nodeId\": \"ns=1;s=ValueV1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV2\",\n    \"nodeId\": \"ns=1;s=ValueV2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV3\",\n    \"nodeId\": \"ns=1;s=ValueV3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValuePF = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePF\",\n    \"nodeId\": \"ns=1;s=ValuePF\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePF\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePF\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueConsumption = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueConsumption\",\n    \"nodeId\": \"ns=1;s=ValueConsumption\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueConsumption\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueConsumption\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI1 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI1\",\n    \"nodeId\": \"ns=1;s=DI1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI2 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI2\",\n    \"nodeId\": \"ns=1;s=DI2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI3 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI3\",\n    \"nodeId\": \"ns=1;s=DI3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI4 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI4\",\n    \"nodeId\": \"ns=1;s=DI4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI4\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n\n  const DO1 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO1\",\n    \"nodeId\": \"ns=1;s=DO1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO1\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO2 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO2\",\n    \"nodeId\": \"ns=1;s=DO2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO2\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO3 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO3\",\n    \"nodeId\": \"ns=1;s=DO3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO3\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO4 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO4\",\n    \"nodeId\": \"ns=1;s=DO4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO4\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n  //------------------------------------------------------------------------------\n  // Add a view\n  //------------------------------------------------------------------------------\n  const viewPowerMeter = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Power Meter\"\n  });\n\n  const viewDI = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DI\"\n  });\n\n  const viewDO = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DO\"\n  });\n\n  const viewDeviceStats = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Device Stats\"\n  });\n\n  viewDeviceStats.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueHeartbeat.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePower.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePF.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueConsumption.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI1.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI2.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI3.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI4.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO1.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO2.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO3.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO4.nodeId\n  });\n\n  coreServer.debugLog(\"create dynamic address space done\");\n  node.warn(\"construction of new address space for OPC UA done\");\n\n  done();\n}\n",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "e3d055b52e1d232f",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValuePower",
        "rules": [
            {
                "t": "set",
                "p": "ValuePower",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "79e20b2e0a726d86",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValueC1",
        "rules": [
            {
                "t": "set",
                "p": "ValueC1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "b79f96753a84e20a",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValueC2",
        "rules": [
            {
                "t": "set",
                "p": "ValueC2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3621679fcc289981",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValueC3",
        "rules": [
            {
                "t": "set",
                "p": "ValueC3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "27f02fb5e4dec81e",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValueV1",
        "rules": [
            {
                "t": "set",
                "p": "ValueV1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "ba8e9722d1f6b03f",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValueV2",
        "rules": [
            {
                "t": "set",
                "p": "ValueV2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4d1f4a422f3a56d3",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValueV3",
        "rules": [
            {
                "t": "set",
                "p": "ValueV3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a0f9a42e753af836",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValuePF",
        "rules": [
            {
                "t": "set",
                "p": "ValuePF",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "4c8fc418109b75db",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValueConsumption",
        "rules": [
            {
                "t": "set",
                "p": "ValueConsumption",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c8a8900645d52a3b",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValueReactive",
        "rules": [
            {
                "t": "set",
                "p": "ValueReactive",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "8e7d770b56e7ca11",
        "type": "change",
        "z": "1518edd396566b6b",
        "name": "ValueHeartbeat",
        "rules": [
            {
                "t": "set",
                "p": "ValueHeartbeat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "986ac734d0f5e78a",
        "type": "inject",
        "z": "1518edd396566b6b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1090,
        "y": 900,
        "wires": [
            [
                "8e7d770b56e7ca11"
            ]
        ]
    },
    {
        "id": "63f90f2243e250d6",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValuePower",
        "rules": [
            {
                "t": "set",
                "p": "ValuePower",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "80475568827cfc69",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValueC1",
        "rules": [
            {
                "t": "set",
                "p": "ValueC1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2ea3b3148b84658d",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValueC2",
        "rules": [
            {
                "t": "set",
                "p": "ValueC2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "46fca7c7e332208b",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValueC3",
        "rules": [
            {
                "t": "set",
                "p": "ValueC3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "185ddfa3b6ea7e84",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValueV1",
        "rules": [
            {
                "t": "set",
                "p": "ValueV1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "78b7a5e19b85788b",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValueV2",
        "rules": [
            {
                "t": "set",
                "p": "ValueV2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "9737e249105ef19c",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValueV3",
        "rules": [
            {
                "t": "set",
                "p": "ValueV3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "dcee00d15c8feebd",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValuePF",
        "rules": [
            {
                "t": "set",
                "p": "ValuePF",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "5bc1cfe4a111d201",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValueConsumption",
        "rules": [
            {
                "t": "set",
                "p": "ValueConsumption",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "eab9ceb1fda73dad",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValueReactive",
        "rules": [
            {
                "t": "set",
                "p": "ValueReactive",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "4fb94f11154edf29",
        "type": "opcua-compact-server",
        "z": "e756f5a682157584",
        "port": "10502",
        "endpoint": "",
        "productUri": "",
        "acceptExternalCommands": true,
        "maxAllowedSessionNumber": "10",
        "maxConnectionsPerEndpoint": "10",
        "maxAllowedSubscriptionNumber": "100",
        "alternateHostname": "",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "allowAnonymous": true,
        "individualCerts": false,
        "isAuditing": false,
        "serverDiscovery": true,
        "users": [],
        "xmlsetsOPCUA": [],
        "publicCertificateFile": "",
        "privateCertificateFile": "",
        "registerServerMethod": "1",
        "discoveryServerEndpointUrl": "opc.tcp://localhost:10502",
        "capabilitiesForMDNS": "",
        "maxNodesPerRead": 1000,
        "maxNodesPerWrite": 1000,
        "maxNodesPerHistoryReadData": 100,
        "maxNodesPerBrowse": 3000,
        "maxBrowseContinuationPoints": "10",
        "maxHistoryContinuationPoints": "10",
        "delayToInit": "1000",
        "delayToClose": "200",
        "serverShutdownTimeout": "100",
        "addressSpaceScript": "function constructAlarmAddressSpace(server, addressSpace, eventObjects, done) {\n  // server = the created node-opcua server\n  // addressSpace = address space of the node-opcua server\n  // eventObjects = add event variables here to hold them in memory from this script\n\n  // internal sandbox objects are:\n  // node = the compact server node,\n  // coreServer = core compact server object for debug and access to NodeOPCUA\n  // this.sandboxNodeContext = node context node-red\n  // this.sandboxFlowContext = flow context node-red\n  // this.sandboxGlobalContext = global context node-red\n  // this.sandboxEnv = env variables\n  // timeout and interval functions as expected from nodejs\n\n  const opcua = coreServer.choreCompact.opcua;\n  const LocalizedText = opcua.LocalizedText;\n  const namespace = addressSpace.getOwnNamespace();\n\n  const Variant = opcua.Variant;\n  const DataType = opcua.DataType;\n  const DataValue = opcua.DataValue;\n\n  var flexServerInternals = this;\n\n  // this.sandboxFlowContext.set(\"ValuePower\", 0);\n  // this.setInterval(() => {\n  //   flexServerInternals.sandboxFlowContext.set(\n  //     \"ValuePower\",\n  //     Math.random() + 50.0\n  //   );\n  // }, 500);\n  // this.sandboxFlowContext.set(\"ValueC1\", 0);\n  // this.sandboxFlowContext.set(\"ValueC2\", 0);\n  // this.sandboxFlowContext.set(\"ValueC3\", 0);\n  // this.sandboxFlowContext.set(\"ValueV1\", 0);\n  // this.sandboxFlowContext.set(\"ValueV2\", 0);\n  // this.sandboxFlowContext.set(\"ValueV3\", 0);\n  // this.sandboxFlowContext.set(\"ValuePF\", 0);\n  // this.sandboxFlowContext.set(\"ValueConsumption\", 0);\n\n\n  // this.sandboxFlowContext.set(\"isoOutput1\", 0);\n  // this.setInterval(() => {\n  //   flexServerInternals.sandboxFlowContext.set(\n  //     \"isoOutput1\",\n  //     Math.random() + 10.0\n  //   );\n  // }, 500);\n\n  // this.sandboxFlowContext.set(\"isoOutput2\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput3\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput4\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput5\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput6\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput7\", 0);\n  // this.sandboxFlowContext.set(\"isoOutput8\", 0);\n\n  coreServer.debugLog(\"init dynamic address space\");\n  const rootFolder = addressSpace.findNode(\"RootFolder\");\n\n  node.warn(\"construct new address space for OPC UA\");\n\n  const myDevice = namespace.addFolder(rootFolder.objects, {\n    \"browseName\": \"Edge Device\"\n  });\n  // const gpioFolder = namespace.addFolder(myDevice, { \"browseName\": \"GPIO\" });\n  const PowerMeterInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Power Meter\"\n  });\n  const DigitalInputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Inputs\"\n  });\n  const DigitalOutputs = namespace.addFolder(myDevice, {\n    \"browseName\": \"Digital Outputs\"\n  });\n  const DeviceStats = namespace.addFolder(myDevice, {\n    \"browseName\": \"Device Stats\"\n  });\n  const ValueHeartbeat = namespace.addVariable({\n    \"organizedBy\": DeviceStats,\n    \"browseName\": \"ValueHeartbeat\",\n    \"nodeId\": \"ns=1;s=ValueHeartbeat\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueHeartbeat\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueHeartbeat\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n  const ValuePower = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePower\",\n    \"nodeId\": \"ns=1;s=ValuePower\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePower\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePower\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC1\",\n    \"nodeId\": \"ns=1;s=ValueC1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC2\",\n    \"nodeId\": \"ns=1;s=ValueC2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueC3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueC3\",\n    \"nodeId\": \"ns=1;s=ValueC3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueC3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueC3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV1 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV1\",\n    \"nodeId\": \"ns=1;s=ValueV1\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV2 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV2\",\n    \"nodeId\": \"ns=1;s=ValueV2\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueV3 = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueV3\",\n    \"nodeId\": \"ns=1;s=ValueV3\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueV3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueV3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValuePF = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValuePF\",\n    \"nodeId\": \"ns=1;s=ValuePF\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValuePF\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValuePF\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const ValueConsumption = namespace.addVariable({\n    \"organizedBy\": PowerMeterInputs,\n    \"browseName\": \"ValueConsumption\",\n    \"nodeId\": \"ns=1;s=ValueConsumption\",\n    \"dataType\": \"Double\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Double,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ValueConsumption\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ValueConsumption\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI1 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI1\",\n    \"nodeId\": \"ns=1;s=DI1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI1\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI2 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI2\",\n    \"nodeId\": \"ns=1;s=DI2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI2\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI3 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI3\",\n    \"nodeId\": \"ns=1;s=DI3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI3\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DI4 = namespace.addVariable({\n    \"organizedBy\": DigitalInputs,\n    \"browseName\": \"DI4\",\n    \"nodeId\": \"ns=1;s=DI4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"DI4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"DI4\",\n          parseFloat(variant.value)\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n\n  const DO1 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO1\",\n    \"nodeId\": \"ns=1;s=DO1\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO1\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO1\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO2 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO2\",\n    \"nodeId\": \"ns=1;s=DO2\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO2\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO2\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO3 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO3\",\n    \"nodeId\": \"ns=1;s=DO3\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO3\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO3\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const DO4 = namespace.addVariable({\n    \"organizedBy\": DigitalOutputs,\n    \"browseName\": \"DO4\",\n    \"nodeId\": \"ns=1;s=DO4\",\n    \"dataType\": \"Boolean\",\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.Boolean,\n          \"value\": flexServerInternals.sandboxGlobalContext.get(\"DO4\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxGlobalContext.set(\n          \"DO4\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n\n  //------------------------------------------------------------------------------\n  // Add a view\n  //------------------------------------------------------------------------------\n  const viewPowerMeter = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Power Meter\"\n  });\n\n  const viewDI = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DI\"\n  });\n\n  const viewDO = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"DO\"\n  });\n\n  const viewDeviceStats = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Device Stats\"\n  });\n\n  viewDeviceStats.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueHeartbeat.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePower.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueC3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV1.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV2.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueV3.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValuePF.nodeId\n  });\n\n  viewPowerMeter.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": ValueConsumption.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI1.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI2.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI3.nodeId\n  });\n\n  viewDI.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DI4.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO1.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO2.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO3.nodeId\n  });\n\n  viewDO.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": DO4.nodeId\n  });\n\n  coreServer.debugLog(\"create dynamic address space done\");\n  node.warn(\"construction of new address space for OPC UA done\");\n\n  done();\n}\n",
        "x": 120,
        "y": 80,
        "wires": []
    },
    {
        "id": "8eae7c448bf80a0a",
        "type": "comment",
        "z": "e756f5a682157584",
        "name": "Digital Inputs",
        "info": "",
        "x": 130,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f0c154a1bebbde57",
        "type": "rpi-gpio in",
        "z": "e756f5a682157584",
        "name": "DI0",
        "pin": "13",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1180,
        "wires": [
            [
                "9351f9ba5a0ddc29"
            ]
        ]
    },
    {
        "id": "a84c1e0ecc3aa26d",
        "type": "ui_switch",
        "z": "e756f5a682157584",
        "name": "",
        "label": "DI0",
        "tooltip": "",
        "group": "f7e1dc67e31c2f09",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "9351f9ba5a0ddc29",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1180,
        "wires": [
            [
                "a84c1e0ecc3aa26d",
                "31ed1eab4bf61ca2"
            ]
        ]
    },
    {
        "id": "12ee3e98c7498369",
        "type": "rpi-gpio in",
        "z": "e756f5a682157584",
        "name": "DI1",
        "pin": "17",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "8b1ee21bd45768f6"
            ]
        ]
    },
    {
        "id": "57cb94fb023d9b10",
        "type": "ui_switch",
        "z": "e756f5a682157584",
        "name": "",
        "label": "DI1",
        "tooltip": "",
        "group": "f7e1dc67e31c2f09",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "8b1ee21bd45768f6",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1240,
        "wires": [
            [
                "57cb94fb023d9b10",
                "40e93b3299e88449"
            ]
        ]
    },
    {
        "id": "3fee28d899543ed9",
        "type": "rpi-gpio in",
        "z": "e756f5a682157584",
        "name": "DI2",
        "pin": "22",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1300,
        "wires": [
            [
                "3a0c99e96b5d63f6"
            ]
        ]
    },
    {
        "id": "ba953ec9318a8cec",
        "type": "ui_switch",
        "z": "e756f5a682157584",
        "name": "",
        "label": "DI2",
        "tooltip": "",
        "group": "f7e1dc67e31c2f09",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "3a0c99e96b5d63f6",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1300,
        "wires": [
            [
                "ba953ec9318a8cec",
                "b07ece5cef5d81c1"
            ]
        ]
    },
    {
        "id": "b1ca4e96868be47a",
        "type": "rpi-gpio in",
        "z": "e756f5a682157584",
        "name": "DI3",
        "pin": "27",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 1360,
        "wires": [
            [
                "8ecc6cea25bfc89e"
            ]
        ]
    },
    {
        "id": "ab8f8d3e4da28331",
        "type": "ui_switch",
        "z": "e756f5a682157584",
        "name": "",
        "label": "DI3",
        "tooltip": "",
        "group": "f7e1dc67e31c2f09",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "radio_button_checked",
        "oncolor": "#FFC107",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "radio_button_unchecked",
        "offcolor": "#44739E",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "8ecc6cea25bfc89e",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "Int to Bool",
        "func": "if (msg.payload == 0) {\n    msg.payload = false;\n} else {\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1360,
        "wires": [
            [
                "ab8f8d3e4da28331",
                "ac965532c285596a"
            ]
        ]
    },
    {
        "id": "31ed1eab4bf61ca2",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "DI1",
        "rules": [
            {
                "t": "set",
                "p": "DI1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "40e93b3299e88449",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "DI2",
        "rules": [
            {
                "t": "set",
                "p": "DI2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "b07ece5cef5d81c1",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "DI3",
        "rules": [
            {
                "t": "set",
                "p": "DI3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "ac965532c285596a",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "DI4",
        "rules": [
            {
                "t": "set",
                "p": "DI4",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "a64d5b2f762b5060",
        "type": "inject",
        "z": "e756f5a682157584",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 980,
        "wires": [
            [
                "553de41841fae46c"
            ]
        ]
    },
    {
        "id": "553de41841fae46c",
        "type": "change",
        "z": "e756f5a682157584",
        "name": "ValueHeartbeat",
        "rules": [
            {
                "t": "set",
                "p": "ValueHeartbeat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "9c77ff63b0f24149",
        "type": "modbus-read",
        "z": "e756f5a682157584",
        "name": "Voltage Current PF",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "14",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "4953f37dd4c17e82",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 140,
        "wires": [
            [
                "d12418930f5b1cdd"
            ],
            []
        ]
    },
    {
        "id": "3c0b6c6f9838fede",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 820,
        "wires": [
            [
                "10a68172aa177dc7"
            ]
        ]
    },
    {
        "id": "d12418930f5b1cdd",
        "type": "buffer-parser",
        "z": "e756f5a682157584",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item2",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item3",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item4",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item5",
                "offset": 16,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item6",
                "offset": 20,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "item7",
                "offset": 24,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 7,
        "x": 450,
        "y": 200,
        "wires": [
            [
                "81677a26573fceb0"
            ],
            [
                "55a578e28ccdb0bb"
            ],
            [
                "8c63d68011244d6b"
            ],
            [
                "fd586bcde0d9ae68"
            ],
            [
                "6b9d08465229a5b0"
            ],
            [
                "5f5a27f9c1d07e06"
            ],
            [
                "8fa89ae972f3c385"
            ]
        ]
    },
    {
        "id": "81677a26573fceb0",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 120,
        "wires": [
            [
                "80f2e8dc4dc0018c"
            ]
        ]
    },
    {
        "id": "7377b729d4e23950",
        "type": "buffer-parser",
        "z": "e756f5a682157584",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 490,
        "y": 820,
        "wires": [
            [
                "3c0b6c6f9838fede"
            ]
        ]
    },
    {
        "id": "ed73fd4f8338101b",
        "type": "buffer-parser",
        "z": "e756f5a682157584",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 490,
        "y": 900,
        "wires": [
            [
                "03b1ad268e97a8f4"
            ]
        ]
    },
    {
        "id": "03b1ad268e97a8f4",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 900,
        "wires": [
            [
                "e646194008b743be"
            ]
        ]
    },
    {
        "id": "8fa89ae972f3c385",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/100;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 480,
        "wires": [
            [
                "a75142c0e3a065b2"
            ]
        ]
    },
    {
        "id": "10a68172aa177dc7",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 820,
        "wires": [
            [
                "5bc1cfe4a111d201"
            ]
        ]
    },
    {
        "id": "e646194008b743be",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 900,
        "wires": [
            [
                "eab9ceb1fda73dad"
            ]
        ]
    },
    {
        "id": "e24316900a271c06",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 310,
        "y": 820,
        "wires": [
            [
                "7377b729d4e23950"
            ]
        ]
    },
    {
        "id": "80f2e8dc4dc0018c",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 120,
        "wires": [
            [
                "185ddfa3b6ea7e84"
            ]
        ]
    },
    {
        "id": "a12e5f42a0b0cc32",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 310,
        "y": 900,
        "wires": [
            [
                "ed73fd4f8338101b"
            ]
        ]
    },
    {
        "id": "a75142c0e3a065b2",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "dcee00d15c8feebd"
            ]
        ]
    },
    {
        "id": "4d9c1883bdcaf146",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 180,
        "wires": [
            [
                "78b7a5e19b85788b"
            ]
        ]
    },
    {
        "id": "55a578e28ccdb0bb",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 180,
        "wires": [
            [
                "4d9c1883bdcaf146"
            ]
        ]
    },
    {
        "id": "a4389a4ae78e296d",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 240,
        "wires": [
            [
                "9737e249105ef19c"
            ]
        ]
    },
    {
        "id": "8c63d68011244d6b",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 240,
        "wires": [
            [
                "a4389a4ae78e296d"
            ]
        ]
    },
    {
        "id": "b5abdbe5c3aa629c",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "80475568827cfc69"
            ]
        ]
    },
    {
        "id": "fd586bcde0d9ae68",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 300,
        "wires": [
            [
                "b5abdbe5c3aa629c"
            ]
        ]
    },
    {
        "id": "27b20d4c532a40d3",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 360,
        "wires": [
            [
                "2ea3b3148b84658d"
            ]
        ]
    },
    {
        "id": "6b9d08465229a5b0",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 360,
        "wires": [
            [
                "27b20d4c532a40d3"
            ]
        ]
    },
    {
        "id": "a00862481038f19f",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 420,
        "wires": [
            [
                "46fca7c7e332208b"
            ]
        ]
    },
    {
        "id": "5f5a27f9c1d07e06",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 420,
        "wires": [
            [
                "a00862481038f19f"
            ]
        ]
    },
    {
        "id": "3ec683e7b5c366e3",
        "type": "modbus-read",
        "z": "e756f5a682157584",
        "name": "Power",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "16",
        "quantity": "2",
        "rate": "300",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "4953f37dd4c17e82",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 740,
        "wires": [
            [
                "9885e77632d55bec"
            ],
            []
        ]
    },
    {
        "id": "9885e77632d55bec",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 310,
        "y": 740,
        "wires": [
            [
                "70254669c26dff29"
            ]
        ]
    },
    {
        "id": "70254669c26dff29",
        "type": "buffer-parser",
        "z": "e756f5a682157584",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 1,
        "x": 490,
        "y": 740,
        "wires": [
            [
                "b7040516855c7d79"
            ]
        ]
    },
    {
        "id": "b7040516855c7d79",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 740,
        "wires": [
            [
                "f620031957ca9ca8"
            ]
        ]
    },
    {
        "id": "f620031957ca9ca8",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 740,
        "wires": [
            [
                "63f90f2243e250d6"
            ]
        ]
    },
    {
        "id": "4b3b539c13465b3e",
        "type": "modbus-read",
        "z": "e756f5a682157584",
        "name": "Consumption",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "576",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "4953f37dd4c17e82",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 130,
        "y": 820,
        "wires": [
            [
                "e24316900a271c06"
            ],
            []
        ]
    },
    {
        "id": "b04341c3013cd358",
        "type": "modbus-read",
        "z": "e756f5a682157584",
        "name": "Reactive",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "580",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "4953f37dd4c17e82",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 120,
        "y": 900,
        "wires": [
            [
                "a12e5f42a0b0cc32"
            ],
            []
        ]
    },
    {
        "id": "a2ea3b1cf6c3c58d",
        "type": "modbus-read",
        "z": "e756f5a682157584",
        "name": "Voltage",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "20",
        "quantity": "6",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "4953f37dd4c17e82",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 560,
        "wires": [
            [
                "bf3e3ff37502fc2b"
            ],
            []
        ]
    },
    {
        "id": "bf3e3ff37502fc2b",
        "type": "buffer-parser",
        "z": "e756f5a682157584",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint32be",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item2",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint32be",
                "name": "item3",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "fanOutMultipleResult": true,
        "setTopic": false,
        "outputs": 3,
        "x": 430,
        "y": 580,
        "wires": [
            [
                "40839a74b98ec828"
            ],
            [
                "e77a7cae7469827a"
            ],
            [
                "a39a9f53066baf4b"
            ]
        ]
    },
    {
        "id": "40839a74b98ec828",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 560,
        "wires": [
            [
                "a237517d057e7b44"
            ]
        ]
    },
    {
        "id": "a237517d057e7b44",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "4b2ad6ebe51b5e70",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "e77a7cae7469827a",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 620,
        "wires": [
            [
                "4b2ad6ebe51b5e70"
            ]
        ]
    },
    {
        "id": "dafae49cc9121cf1",
        "type": "show-value",
        "z": "e756f5a682157584",
        "name": "",
        "path": "",
        "x": 870,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "a39a9f53066baf4b",
        "type": "function",
        "z": "e756f5a682157584",
        "name": "convert",
        "func": "msg.payload = msg.payload/10;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 680,
        "wires": [
            [
                "dafae49cc9121cf1"
            ]
        ]
    },
    {
        "id": "cce84b2a8a7f22c7",
        "type": "rpi-gpio in",
        "z": "30a1c269027d2137",
        "name": "DI0",
        "pin": "13",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "46fd8c555da36979"
            ]
        ]
    },
    {
        "id": "eaca0be516159329",
        "type": "rpi-gpio in",
        "z": "30a1c269027d2137",
        "name": "DI1",
        "pin": "17",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "d10a4dcce4204779"
            ]
        ]
    },
    {
        "id": "8b1cb1d05f3ef797",
        "type": "rpi-gpio in",
        "z": "30a1c269027d2137",
        "name": "DI2",
        "pin": "22",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 360,
        "wires": [
            [
                "082d1de88f3ca8d2"
            ]
        ]
    },
    {
        "id": "1033d1ee5266f6ce",
        "type": "rpi-gpio in",
        "z": "30a1c269027d2137",
        "name": "DI3",
        "pin": "27",
        "intype": "tri",
        "debounce": "10",
        "read": true,
        "bcm": true,
        "x": 150,
        "y": 420,
        "wires": [
            [
                "36aa3eee76c4abf6"
            ]
        ]
    },
    {
        "id": "46fd8c555da36979",
        "type": "falling-edge",
        "z": "30a1c269027d2137",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 240,
        "wires": [
            [
                "512e6025920cc893"
            ]
        ]
    },
    {
        "id": "d10a4dcce4204779",
        "type": "falling-edge",
        "z": "30a1c269027d2137",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "082d1de88f3ca8d2",
        "type": "falling-edge",
        "z": "30a1c269027d2137",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "36aa3eee76c4abf6",
        "type": "falling-edge",
        "z": "30a1c269027d2137",
        "name": "",
        "threshold": ".5",
        "x": 350,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "512e6025920cc893",
        "type": "function",
        "z": "30a1c269027d2137",
        "name": "increase partCount",
        "func": "let partCount = global.get(\"partCount\") || 0;\npartCount++;\nglobal.set(\"partCount\", partCount);\nmsg.payload = partCount;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 240,
        "wires": [
            [
                "29b2f72fc85f1342"
            ]
        ]
    },
    {
        "id": "29b2f72fc85f1342",
        "type": "show-value",
        "z": "30a1c269027d2137",
        "name": "",
        "path": "",
        "x": 850,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "dfd8aa0d2c2f5519",
        "type": "inject",
        "z": "30a1c269027d2137",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "46fd8c555da36979"
            ]
        ]
    },
    {
        "id": "be76bcb3bb3ae2f5",
        "type": "inject",
        "z": "30a1c269027d2137",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "46fd8c555da36979"
            ]
        ]
    },
    {
        "id": "cfbb1e966750ccce",
        "type": "inject",
        "z": "89785a26af5a4026",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "3953e412f629e5f0"
            ]
        ]
    },
    {
        "id": "3953e412f629e5f0",
        "type": "change",
        "z": "89785a26af5a4026",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "test",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ec3c0873c5b0ef7c",
        "type": "inject",
        "z": "89785a26af5a4026",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "132942eaa7a7b247"
            ]
        ]
    },
    {
        "id": "132942eaa7a7b247",
        "type": "function",
        "z": "89785a26af5a4026",
        "name": "function 1",
        "func": "msg.payload = global.get(\"test\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 260,
        "wires": [
            [
                "a1e07db73f2a580a"
            ]
        ]
    },
    {
        "id": "a1e07db73f2a580a",
        "type": "show-value",
        "z": "89785a26af5a4026",
        "name": "",
        "path": "",
        "x": 530,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a174fde7e263a615",
        "type": "exec",
        "z": "89785a26af5a4026",
        "command": "sudo reboot now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c665d15c68467f65",
        "type": "inject",
        "z": "89785a26af5a4026",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "a174fde7e263a615"
            ]
        ]
    },
    {
        "id": "b88d7f9dd56656eb",
        "type": "persistent-global-context",
        "z": "89785a26af5a4026",
        "x": 610,
        "y": 460,
        "wires": [
            []
        ]
    }
]